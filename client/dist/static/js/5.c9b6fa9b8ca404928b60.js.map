{"version":3,"sources":["webpack:///static/js/5.c9b6fa9b8ca404928b60.js","webpack:///./src/assets/styles/animation.css","webpack:///./~/markdown/lib/markdown.js?456f","webpack:///./~/process/browser.js?82e4","webpack:///./src/assets/images/me-1.jpg","webpack:///./~/util/~/inherits/inherits_browser.js?aba5","webpack:///./~/util/support/isBufferBrowser.js?8596","webpack:///./~/util/util.js?1e30","webpack:///Me.vue","webpack:///progressBar.vue","webpack:///./src/packages/progressBar.vue?19c4","webpack:///./src/components/Me.vue?86b5","webpack:///./src/packages/progressBar.vue?fa4a","webpack:///./src/components/Me.vue?405a","webpack:///./src/components/Me.vue","webpack:///./src/packages/progressBar.vue","webpack:///./src/packages/progressBar.vue?b0a7","webpack:///./src/components/Me.vue?fdac"],"names":["webpackJsonp","83","module","exports","__webpack_require__","push","id","version","sources","names","mappings","file","sourcesContent","sourceRoot","87","expose","mk_block_toSource","uneval","this","toString","trailing","lineNumber","mk_block_inspect","util","inspect","count_lines","str","n","i","indexOf","strong_em","tag","md","CloseTag","len","len_after","name","state_slot","other_slot","text","orig_match","shift","length","other","slice","state","unshift","res","processInline","substr","last","pop","consumed","concat","split_meta_hash","meta_string","meta","split","parts","in_quotes","letter","extract_attr","jsonml","isArray","undefined","escapeHTML","replace","render_tree","attributes","content","Array","tag_attrs","a","join","convert_tree_to_html","tree","references","options","preprocessTreeNode","attrs","level","code","apply","splice","src","href","ref","original","title","key","merge_text_nodes","Markdown","dialect","dialects","Gruber","Error","String","em_state","strong_state","debug_indent","parse","source","toTree","toHTML","input","toHTMLTree","renderJsonML","refs","html","mk_block","block","trail","line","arguments","s","toSource","prototype","split_blocks","startLine","m","re","blocks","line_no","exec","lastIndex","processBlock","next","cbs","ord","__order__","__call__","call","debug","inline","custom_root","old_tree","b","args","print","console","log","loop_re_over_block","cb","valueOf","atxHeader","match","header","setextHeader","ret","block_search","substring","horizRule","lists","regex_for_depth","depth","RegExp","indent_re","any_list","expand_tab","add","li","loose","nl","add_to","what","is_str","get_contained_blocks","x","paragraphify","stack","list","last_li","sublist","bullet_list","is_list_re","make_list","indent","lines","li_accumulate","l","line_re","wanted_depth","Math","floor","found","contained","forEach","next_block","hr","blockquote","prev","abutting","processedBlock","attr","isEmpty","referenceDefn","toLowerCase","para","__oneElement__","patterns_or_re","previous_nodes","__patterns__","index","patterns","out","]","}","__escape__","\\","charAt","![","alt","[","link","orig","DialectHelpers","inline_until_char","children","url","open_parens","<","`","  \n","buildBlockOrder","d","buildInlinePatterns","fn","pattern","want","nodes","subclassDialect","Block","Inline","Maruku","processMetaHash","test","document_meta","pairs","p","value","block_meta","hash","node","result","definition_list","tight","terms","defns","table","_split_on_unescaped","ch","r","leading_pipe","no_leading_pipe","html_attrs","align","trim","row","html_row","matches","before","k","obj","Object","arr","thisp","hasOwnProperty","root","88","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","array","noop","process","nextTick","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","89","90","create","ctor","superCtor","super_","constructor","enumerable","writable","configurable","TempCtor","91","arg","copy","fill","readUInt8","92","global","opts","ctx","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","val","idx","recurseTimes","isFunction","isString","primitive","formatPrimitive","keys","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","isDate","Date","base","braces","toUTCString","output","formatArray","map","formatProperty","reduceToSingleString","simple","JSON","stringify","isNumber","isNull","desc","getOwnPropertyDescriptor","get","set","numLinesEst","reduce","cur","ar","isNullOrUndefined","isSymbol","isObject","objectToString","isPrimitive","o","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","format","f","objects","Number","_","deprecate","msg","deprecated","warned","throwDeprecation","traceDeprecation","trace","error","noDeprecation","debugEnviron","debugs","debuglog","NODE_ENV","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","isBuffer","inherits","origin","123","_interopRequireDefault","__esModule","default","defineProperty","_markdown","_markdown2","_progressBar","_progressBar2","data","tx","ty","tz","progressClass","ProgressClass","progressList","ProgressList","show","computed","mounted","query","watchScroll","methods","_this","$http","then","praseMd","catch","err","window","addEventListener","setAnimation","scrollY","beforeDestroy","removeEventListener","components","progressBar","container","width","label","146","props","189","198","228","locals","237","442","__vue_exports__","__vue_options__","__vue_template__","render","staticRenderFns","_scopeId","462","494","_vm","_h","$createElement","_c","_self","_l","item","staticClass","_v","_s","inner","503","transform"],"mappings":"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","file":"static/js/5.c9b6fa9b8ca404928b60.js","sourcesContent":["webpackJsonp([5,24],{\n\n/***/ 83:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".Animated_slidedown{animation:slide_down 1s}@keyframes slide_down{0%{position:relative;opacity:0;top:-100px}to{position:relative;opacity:1;top:0}}.Animated_slideleft{animation:slide_left 1s}@keyframes slide_left{0%{position:relative;opacity:0;left:-100px}to{position:relative;opacity:1;left:0}}.Animated_slideright{animation:slide_right 1s}@keyframes slide_right{0%{position:relative;opacity:0;right:-100px}to{position:relative;opacity:1;right:0}}\", \"\", {\"version\":3,\"sources\":[\"/./src/assets/styles/animation.css\"],\"names\":[],\"mappings\":\"AAAA,oBACG,uBAAyB,CAC1B,AACD,sBACC,GACE,kBAAmB,AACnB,UAAW,AACX,UAAY,CACb,AACD,GACE,kBAAmB,AACnB,UAAW,AACX,KAAO,CACR,CACF,AACD,oBACE,uBAAyB,CAC1B,AACD,sBACE,GACE,kBAAmB,AACnB,UAAW,AACX,WAAa,CACd,AACD,GACE,kBAAmB,AACnB,UAAW,AACX,MAAQ,CACT,CACF,AACD,qBACE,wBAA0B,CAC3B,AACD,uBACE,GACE,kBAAmB,AACnB,UAAW,AACX,YAAc,CACf,AACD,GACE,kBAAmB,AACnB,UAAW,AACX,OAAS,CACV,CACF\",\"file\":\"animation.css\",\"sourcesContent\":[\".Animated_slidedown {\\n   animation: slide_down 1s;\\n }\\n @keyframes slide_down {\\n  0% {\\n    position: relative;\\n    opacity: 0;\\n    top: -100px;\\n  }\\n  100% {\\n    position: relative;\\n    opacity: 1;\\n    top: 0;\\n  }\\n}\\n.Animated_slideleft {\\n  animation: slide_left 1s;\\n}\\n@keyframes slide_left {\\n  0% {\\n    position: relative;\\n    opacity: 0;\\n    left: -100px;\\n  }\\n  100% {\\n    position: relative;\\n    opacity: 1;\\n    left: 0;\\n  }\\n}\\n.Animated_slideright {\\n  animation: slide_right 1s;\\n}\\n@keyframes slide_right {\\n  0% {\\n    position: relative;\\n    opacity: 0;\\n    right: -100px;\\n  }\\n  100% {\\n    position: relative;\\n    opacity: 1;\\n    right: 0;\\n  }\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 87:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Released under MIT license\n\t// Copyright (c) 2009-2010 Dominic Baggott\n\t// Copyright (c) 2009-2010 Ash Berlin\n\t// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\t\n\t/*jshint browser:true, devel:true */\n\t\n\t(function( expose ) {\n\t\n\t/**\n\t *  class Markdown\n\t *\n\t *  Markdown processing in Javascript done right. We have very particular views\n\t *  on what constitutes 'right' which include:\n\t *\n\t *  - produces well-formed HTML (this means that em and strong nesting is\n\t *    important)\n\t *\n\t *  - has an intermediate representation to allow processing of parsed data (We\n\t *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n\t *\n\t *  - is easily extensible to add new dialects without having to rewrite the\n\t *    entire parsing mechanics\n\t *\n\t *  - has a good test suite\n\t *\n\t *  This implementation fulfills all of these (except that the test suite could\n\t *  do with expanding to automatically run all the fixtures from other Markdown\n\t *  implementations.)\n\t *\n\t *  ##### Intermediate Representation\n\t *\n\t *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n\t *\n\t *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n\t **/\n\tvar Markdown = expose.Markdown = function(dialect) {\n\t  switch (typeof dialect) {\n\t    case \"undefined\":\n\t      this.dialect = Markdown.dialects.Gruber;\n\t      break;\n\t    case \"object\":\n\t      this.dialect = dialect;\n\t      break;\n\t    default:\n\t      if ( dialect in Markdown.dialects ) {\n\t        this.dialect = Markdown.dialects[dialect];\n\t      }\n\t      else {\n\t        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n\t      }\n\t      break;\n\t  }\n\t  this.em_state = [];\n\t  this.strong_state = [];\n\t  this.debug_indent = \"\";\n\t};\n\t\n\t/**\n\t *  parse( markdown, [dialect] ) -> JsonML\n\t *  - markdown (String): markdown string to parse\n\t *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n\t *\n\t *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n\t **/\n\texpose.parse = function( source, dialect ) {\n\t  // dialect will default if undefined\n\t  var md = new Markdown( dialect );\n\t  return md.toTree( source );\n\t};\n\t\n\t/**\n\t *  toHTML( markdown, [dialect]  ) -> String\n\t *  toHTML( md_tree ) -> String\n\t *  - markdown (String): markdown string to parse\n\t *  - md_tree (Markdown.JsonML): parsed markdown tree\n\t *\n\t *  Take markdown (either as a string or as a JsonML tree) and run it through\n\t *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n\t **/\n\texpose.toHTML = function toHTML( source , dialect , options ) {\n\t  var input = expose.toHTMLTree( source , dialect , options );\n\t\n\t  return expose.renderJsonML( input );\n\t};\n\t\n\t/**\n\t *  toHTMLTree( markdown, [dialect] ) -> JsonML\n\t *  toHTMLTree( md_tree ) -> JsonML\n\t *  - markdown (String): markdown string to parse\n\t *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n\t *  - md_tree (Markdown.JsonML): parsed markdown tree\n\t *\n\t *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n\t *  to this function, it is first parsed into a markdown tree by calling\n\t *  [[parse]].\n\t **/\n\texpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n\t  // convert string input to an MD tree\n\t  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\t\n\t  // Now convert the MD tree to an HTML tree\n\t\n\t  // remove references from the tree\n\t  var attrs = extract_attr( input ),\n\t      refs = {};\n\t\n\t  if ( attrs && attrs.references ) {\n\t    refs = attrs.references;\n\t  }\n\t\n\t  var html = convert_tree_to_html( input, refs , options );\n\t  merge_text_nodes( html );\n\t  return html;\n\t};\n\t\n\t// For Spidermonkey based engines\n\tfunction mk_block_toSource() {\n\t  return \"Markdown.mk_block( \" +\n\t          uneval(this.toString()) +\n\t          \", \" +\n\t          uneval(this.trailing) +\n\t          \", \" +\n\t          uneval(this.lineNumber) +\n\t          \" )\";\n\t}\n\t\n\t// node\n\tfunction mk_block_inspect() {\n\t  var util = __webpack_require__(92);\n\t  return \"Markdown.mk_block( \" +\n\t          util.inspect(this.toString()) +\n\t          \", \" +\n\t          util.inspect(this.trailing) +\n\t          \", \" +\n\t          util.inspect(this.lineNumber) +\n\t          \" )\";\n\t\n\t}\n\t\n\tvar mk_block = Markdown.mk_block = function(block, trail, line) {\n\t  // Be helpful for default case in tests.\n\t  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\t\n\t  var s = new String(block);\n\t  s.trailing = trail;\n\t  // To make it clear its not just a string\n\t  s.inspect = mk_block_inspect;\n\t  s.toSource = mk_block_toSource;\n\t\n\t  if ( line != undefined )\n\t    s.lineNumber = line;\n\t\n\t  return s;\n\t};\n\t\n\tfunction count_lines( str ) {\n\t  var n = 0, i = -1;\n\t  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n\t  return n;\n\t}\n\t\n\t// Internal - split source into rough blocks\n\tMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n\t  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n\t  // [\\s\\S] matches _anything_ (newline or space)\n\t  // [^] is equivalent but doesn't work in IEs.\n\t  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n\t      blocks = [],\n\t      m;\n\t\n\t  var line_no = 1;\n\t\n\t  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n\t    // skip (but count) leading blank lines\n\t    line_no += count_lines( m[0] );\n\t    re.lastIndex = m[0].length;\n\t  }\n\t\n\t  while ( ( m = re.exec(input) ) !== null ) {\n\t    if (m[2] == \"\\n#\") {\n\t      m[2] = \"\\n\";\n\t      re.lastIndex--;\n\t    }\n\t    blocks.push( mk_block( m[1], m[2], line_no ) );\n\t    line_no += count_lines( m[0] );\n\t  }\n\t\n\t  return blocks;\n\t};\n\t\n\t/**\n\t *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n\t *  - block (String): the block to process\n\t *  - next (Array): the following blocks\n\t *\n\t * Process `block` and return an array of JsonML nodes representing `block`.\n\t *\n\t * It does this by asking each block level function in the dialect to process\n\t * the block until one can. Succesful handling is indicated by returning an\n\t * array (with zero or more JsonML nodes), failure by a false value.\n\t *\n\t * Blocks handlers are responsible for calling [[Markdown#processInline]]\n\t * themselves as appropriate.\n\t *\n\t * If the blocks were split incorrectly or adjacent blocks need collapsing you\n\t * can adjust `next` in place using shift/splice etc.\n\t *\n\t * If any of this default behaviour is not right for the dialect, you can\n\t * define a `__call__` method on the dialect that will get invoked to handle\n\t * the block processing.\n\t */\n\tMarkdown.prototype.processBlock = function processBlock( block, next ) {\n\t  var cbs = this.dialect.block,\n\t      ord = cbs.__order__;\n\t\n\t  if ( \"__call__\" in cbs ) {\n\t    return cbs.__call__.call(this, block, next);\n\t  }\n\t\n\t  for ( var i = 0; i < ord.length; i++ ) {\n\t    //D:this.debug( \"Testing\", ord[i] );\n\t    var res = cbs[ ord[i] ].call( this, block, next );\n\t    if ( res ) {\n\t      //D:this.debug(\"  matched\");\n\t      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n\t        this.debug(ord[i], \"didn't return a proper array\");\n\t      //D:this.debug( \"\" );\n\t      return res;\n\t    }\n\t  }\n\t\n\t  // Uhoh! no match! Should we throw an error?\n\t  return [];\n\t};\n\t\n\tMarkdown.prototype.processInline = function processInline( block ) {\n\t  return this.dialect.inline.__call__.call( this, String( block ) );\n\t};\n\t\n\t/**\n\t *  Markdown#toTree( source ) -> JsonML\n\t *  - source (String): markdown source to parse\n\t *\n\t *  Parse `source` into a JsonML tree representing the markdown document.\n\t **/\n\t// custom_tree means set this.tree to `custom_tree` and restore old value on return\n\tMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n\t  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\t\n\t  // Make tree a member variable so its easier to mess with in extensions\n\t  var old_tree = this.tree;\n\t  try {\n\t    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\t\n\t    blocks:\n\t    while ( blocks.length ) {\n\t      var b = this.processBlock( blocks.shift(), blocks );\n\t\n\t      // Reference blocks and the like won't return any content\n\t      if ( !b.length ) continue blocks;\n\t\n\t      this.tree.push.apply( this.tree, b );\n\t    }\n\t    return this.tree;\n\t  }\n\t  finally {\n\t    if ( custom_root ) {\n\t      this.tree = old_tree;\n\t    }\n\t  }\n\t};\n\t\n\t// Noop by default\n\tMarkdown.prototype.debug = function () {\n\t  var args = Array.prototype.slice.call( arguments);\n\t  args.unshift(this.debug_indent);\n\t  if ( typeof print !== \"undefined\" )\n\t      print.apply( print, args );\n\t  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n\t      console.log.apply( null, args );\n\t}\n\t\n\tMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n\t  // Dont use /g regexps with this\n\t  var m,\n\t      b = block.valueOf();\n\t\n\t  while ( b.length && (m = re.exec(b) ) != null ) {\n\t    b = b.substr( m[0].length );\n\t    cb.call(this, m);\n\t  }\n\t  return b;\n\t};\n\t\n\t/**\n\t * Markdown.dialects\n\t *\n\t * Namespace of built-in dialects.\n\t **/\n\tMarkdown.dialects = {};\n\t\n\t/**\n\t * Markdown.dialects.Gruber\n\t *\n\t * The default dialect that follows the rules set out by John Gruber's\n\t * markdown.pl as closely as possible. Well actually we follow the behaviour of\n\t * that script which in some places is not exactly what the syntax web page\n\t * says.\n\t **/\n\tMarkdown.dialects.Gruber = {\n\t  block: {\n\t    atxHeader: function atxHeader( block, next ) {\n\t      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\t\n\t      if ( !m ) return undefined;\n\t\n\t      var header = [ \"header\", { level: m[ 1 ].length } ];\n\t      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\t\n\t      if ( m[0].length < block.length )\n\t        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\t\n\t      return [ header ];\n\t    },\n\t\n\t    setextHeader: function setextHeader( block, next ) {\n\t      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\t\n\t      if ( !m ) return undefined;\n\t\n\t      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n\t      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\t\n\t      if ( m[0].length < block.length )\n\t        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\t\n\t      return [ header ];\n\t    },\n\t\n\t    code: function code( block, next ) {\n\t      // |    Foo\n\t      // |bar\n\t      // should be a code block followed by a paragraph. Fun\n\t      //\n\t      // There might also be adjacent code block to merge.\n\t\n\t      var ret = [],\n\t          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n\t          lines;\n\t\n\t      // 4 spaces + content\n\t      if ( !block.match( re ) ) return undefined;\n\t\n\t      block_search:\n\t      do {\n\t        // Now pull out the rest of the lines\n\t        var b = this.loop_re_over_block(\n\t                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\t\n\t        if ( b.length ) {\n\t          // Case alluded to in first comment. push it back on as a new block\n\t          next.unshift( mk_block(b, block.trailing) );\n\t          break block_search;\n\t        }\n\t        else if ( next.length ) {\n\t          // Check the next block - it might be code too\n\t          if ( !next[0].match( re ) ) break block_search;\n\t\n\t          // Pull how how many blanks lines follow - minus two to account for .join\n\t          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\t\n\t          block = next.shift();\n\t        }\n\t        else {\n\t          break block_search;\n\t        }\n\t      } while ( true );\n\t\n\t      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n\t    },\n\t\n\t    horizRule: function horizRule( block, next ) {\n\t      // this needs to find any hr in the block to handle abutting blocks\n\t      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\t\n\t      if ( !m ) {\n\t        return undefined;\n\t      }\n\t\n\t      var jsonml = [ [ \"hr\" ] ];\n\t\n\t      // if there's a leading abutting block, process it\n\t      if ( m[ 1 ] ) {\n\t        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n\t      }\n\t\n\t      // if there's a trailing abutting block, stick it into next\n\t      if ( m[ 3 ] ) {\n\t        next.unshift( mk_block( m[ 3 ] ) );\n\t      }\n\t\n\t      return jsonml;\n\t    },\n\t\n\t    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n\t    // between the items (and result in text just in the <li>) and loose lists,\n\t    // which have an empty line between list items, resulting in (one or more)\n\t    // paragraphs inside the <li>.\n\t    //\n\t    // There are all sorts weird edge cases about the original markdown.pl's\n\t    // handling of lists:\n\t    //\n\t    // * Nested lists are supposed to be indented by four chars per level. But\n\t    //   if they aren't, you can get a nested list by indenting by less than\n\t    //   four so long as the indent doesn't match an indent of an existing list\n\t    //   item in the 'nest stack'.\n\t    //\n\t    // * The type of the list (bullet or number) is controlled just by the\n\t    //    first item at the indent. Subsequent changes are ignored unless they\n\t    //    are for nested lists\n\t    //\n\t    lists: (function( ) {\n\t      // Use a closure to hide a few variables.\n\t      var any_list = \"[*+-]|\\\\d+\\\\.\",\n\t          bullet_list = /[*+-]/,\n\t          number_list = /\\d+\\./,\n\t          // Capture leading indent as it matters for determining nested lists.\n\t          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n\t          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\t\n\t      // TODO: Cache this regexp for certain depths.\n\t      // Create a regexp suitable for matching an li for a given stack depth\n\t      function regex_for_depth( depth ) {\n\t\n\t        return new RegExp(\n\t          // m[1] = indent, m[2] = list_type\n\t          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n\t          // m[3] = cont\n\t          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n\t        );\n\t      }\n\t      function expand_tab( input ) {\n\t        return input.replace( / {0,3}\\t/g, \"    \" );\n\t      }\n\t\n\t      // Add inline content `inline` to `li`. inline comes from processInline\n\t      // so is an array of content\n\t      function add(li, loose, inline, nl) {\n\t        if ( loose ) {\n\t          li.push( [ \"para\" ].concat(inline) );\n\t          return;\n\t        }\n\t        // Hmmm, should this be any block level element or just paras?\n\t        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n\t                   ? li[li.length -1]\n\t                   : li;\n\t\n\t        // If there is already some content in this list, add the new line in\n\t        if ( nl && li.length > 1 ) inline.unshift(nl);\n\t\n\t        for ( var i = 0; i < inline.length; i++ ) {\n\t          var what = inline[i],\n\t              is_str = typeof what == \"string\";\n\t          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n\t            add_to[ add_to.length-1 ] += what;\n\t          }\n\t          else {\n\t            add_to.push( what );\n\t          }\n\t        }\n\t      }\n\t\n\t      // contained means have an indent greater than the current one. On\n\t      // *every* line in the block\n\t      function get_contained_blocks( depth, blocks ) {\n\t\n\t        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n\t            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n\t            ret = [];\n\t\n\t        while ( blocks.length > 0 ) {\n\t          if ( re.exec( blocks[0] ) ) {\n\t            var b = blocks.shift(),\n\t                // Now remove that indent\n\t                x = b.replace( replace, \"\");\n\t\n\t            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n\t          }\n\t          else {\n\t            break;\n\t          }\n\t        }\n\t        return ret;\n\t      }\n\t\n\t      // passed to stack.forEach to turn list items up the stack into paras\n\t      function paragraphify(s, i, stack) {\n\t        var list = s.list;\n\t        var last_li = list[list.length-1];\n\t\n\t        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n\t          return;\n\t        }\n\t        if ( i + 1 == stack.length ) {\n\t          // Last stack frame\n\t          // Keep the same array, but replace the contents\n\t          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n\t        }\n\t        else {\n\t          var sublist = last_li.pop();\n\t          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n\t        }\n\t      }\n\t\n\t      // The matcher function\n\t      return function( block, next ) {\n\t        var m = block.match( is_list_re );\n\t        if ( !m ) return undefined;\n\t\n\t        function make_list( m ) {\n\t          var list = bullet_list.exec( m[2] )\n\t                   ? [\"bulletlist\"]\n\t                   : [\"numberlist\"];\n\t\n\t          stack.push( { list: list, indent: m[1] } );\n\t          return list;\n\t        }\n\t\n\t\n\t        var stack = [], // Stack of lists for nesting.\n\t            list = make_list( m ),\n\t            last_li,\n\t            loose = false,\n\t            ret = [ stack[0].list ],\n\t            i;\n\t\n\t        // Loop to search over block looking for inner block elements and loose lists\n\t        loose_search:\n\t        while ( true ) {\n\t          // Split into lines preserving new lines at end of line\n\t          var lines = block.split( /(?=\\n)/ );\n\t\n\t          // We have to grab all lines for a li and call processInline on them\n\t          // once as there are some inline things that can span lines.\n\t          var li_accumulate = \"\";\n\t\n\t          // Loop over the lines in this block looking for tight lists.\n\t          tight_search:\n\t          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n\t            var nl = \"\",\n\t                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\t\n\t            // TODO: really should cache this\n\t            var line_re = regex_for_depth( stack.length );\n\t\n\t            m = l.match( line_re );\n\t            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\t\n\t            // We have a list item\n\t            if ( m[1] !== undefined ) {\n\t              // Process the previous list item, if any\n\t              if ( li_accumulate.length ) {\n\t                add( last_li, loose, this.processInline( li_accumulate ), nl );\n\t                // Loose mode will have been dealt with. Reset it\n\t                loose = false;\n\t                li_accumulate = \"\";\n\t              }\n\t\n\t              m[1] = expand_tab( m[1] );\n\t              var wanted_depth = Math.floor(m[1].length/4)+1;\n\t              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n\t              if ( wanted_depth > stack.length ) {\n\t                // Deep enough for a nested list outright\n\t                //print ( \"new nested list\" );\n\t                list = make_list( m );\n\t                last_li.push( list );\n\t                last_li = list[1] = [ \"listitem\" ];\n\t              }\n\t              else {\n\t                // We aren't deep enough to be strictly a new level. This is\n\t                // where Md.pl goes nuts. If the indent matches a level in the\n\t                // stack, put it there, else put it one deeper then the\n\t                // wanted_depth deserves.\n\t                var found = false;\n\t                for ( i = 0; i < stack.length; i++ ) {\n\t                  if ( stack[ i ].indent != m[1] ) continue;\n\t                  list = stack[ i ].list;\n\t                  stack.splice( i+1, stack.length - (i+1) );\n\t                  found = true;\n\t                  break;\n\t                }\n\t\n\t                if (!found) {\n\t                  //print(\"not found. l:\", uneval(l));\n\t                  wanted_depth++;\n\t                  if ( wanted_depth <= stack.length ) {\n\t                    stack.splice(wanted_depth, stack.length - wanted_depth);\n\t                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n\t                    list = stack[wanted_depth-1].list;\n\t                    //print(\"list:\", uneval(list) );\n\t                  }\n\t                  else {\n\t                    //print (\"made new stack for messy indent\");\n\t                    list = make_list(m);\n\t                    last_li.push(list);\n\t                  }\n\t                }\n\t\n\t                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n\t                last_li = [ \"listitem\" ];\n\t                list.push(last_li);\n\t              } // end depth of shenegains\n\t              nl = \"\";\n\t            }\n\t\n\t            // Add content\n\t            if ( l.length > m[0].length ) {\n\t              li_accumulate += nl + l.substr( m[0].length );\n\t            }\n\t          } // tight_search\n\t\n\t          if ( li_accumulate.length ) {\n\t            add( last_li, loose, this.processInline( li_accumulate ), nl );\n\t            // Loose mode will have been dealt with. Reset it\n\t            loose = false;\n\t            li_accumulate = \"\";\n\t          }\n\t\n\t          // Look at the next block - we might have a loose list. Or an extra\n\t          // paragraph for the current li\n\t          var contained = get_contained_blocks( stack.length, next );\n\t\n\t          // Deal with code blocks or properly nested lists\n\t          if ( contained.length > 0 ) {\n\t            // Make sure all listitems up the stack are paragraphs\n\t            forEach( stack, paragraphify, this);\n\t\n\t            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n\t          }\n\t\n\t          var next_block = next[0] && next[0].valueOf() || \"\";\n\t\n\t          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n\t            block = next.shift();\n\t\n\t            // Check for an HR following a list: features/lists/hr_abutting\n\t            var hr = this.dialect.block.horizRule( block, next );\n\t\n\t            if ( hr ) {\n\t              ret.push.apply(ret, hr);\n\t              break;\n\t            }\n\t\n\t            // Make sure all listitems up the stack are paragraphs\n\t            forEach( stack, paragraphify, this);\n\t\n\t            loose = true;\n\t            continue loose_search;\n\t          }\n\t          break;\n\t        } // loose_search\n\t\n\t        return ret;\n\t      };\n\t    })(),\n\t\n\t    blockquote: function blockquote( block, next ) {\n\t      if ( !block.match( /^>/m ) )\n\t        return undefined;\n\t\n\t      var jsonml = [];\n\t\n\t      // separate out the leading abutting block, if any. I.e. in this case:\n\t      //\n\t      //  a\n\t      //  > b\n\t      //\n\t      if ( block[ 0 ] != \">\" ) {\n\t        var lines = block.split( /\\n/ ),\n\t            prev = [],\n\t            line_no = block.lineNumber;\n\t\n\t        // keep shifting lines until you find a crotchet\n\t        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n\t            prev.push( lines.shift() );\n\t            line_no++;\n\t        }\n\t\n\t        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n\t        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n\t        // reassemble new block of just block quotes!\n\t        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n\t      }\n\t\n\t\n\t      // if the next block is also a blockquote merge it in\n\t      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n\t        var b = next.shift();\n\t        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n\t      }\n\t\n\t      // Strip off the leading \"> \" and re-process as a block.\n\t      var input = block.replace( /^> ?/gm, \"\" ),\n\t          old_tree = this.tree,\n\t          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n\t          attr = extract_attr( processedBlock );\n\t\n\t      // If any link references were found get rid of them\n\t      if ( attr && attr.references ) {\n\t        delete attr.references;\n\t        // And then remove the attribute object if it's empty\n\t        if ( isEmpty( attr ) ) {\n\t          processedBlock.splice( 1, 1 );\n\t        }\n\t      }\n\t\n\t      jsonml.push( processedBlock );\n\t      return jsonml;\n\t    },\n\t\n\t    referenceDefn: function referenceDefn( block, next) {\n\t      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n\t      // interesting matches are [ , ref_id, url, , title, title ]\n\t\n\t      if ( !block.match(re) )\n\t        return undefined;\n\t\n\t      // make an attribute node if it doesn't exist\n\t      if ( !extract_attr( this.tree ) ) {\n\t        this.tree.splice( 1, 0, {} );\n\t      }\n\t\n\t      var attrs = extract_attr( this.tree );\n\t\n\t      // make a references hash if it doesn't exist\n\t      if ( attrs.references === undefined ) {\n\t        attrs.references = {};\n\t      }\n\t\n\t      var b = this.loop_re_over_block(re, block, function( m ) {\n\t\n\t        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n\t          m[2] = m[2].substring( 1, m[2].length - 1 );\n\t\n\t        var ref = attrs.references[ m[1].toLowerCase() ] = {\n\t          href: m[2]\n\t        };\n\t\n\t        if ( m[4] !== undefined )\n\t          ref.title = m[4];\n\t        else if ( m[5] !== undefined )\n\t          ref.title = m[5];\n\t\n\t      } );\n\t\n\t      if ( b.length )\n\t        next.unshift( mk_block( b, block.trailing ) );\n\t\n\t      return [];\n\t    },\n\t\n\t    para: function para( block, next ) {\n\t      // everything's a para!\n\t      return [ [\"para\"].concat( this.processInline( block ) ) ];\n\t    }\n\t  }\n\t};\n\t\n\tMarkdown.dialects.Gruber.inline = {\n\t\n\t    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n\t      var m,\n\t          res,\n\t          lastIndex = 0;\n\t\n\t      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n\t      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\t\n\t      m = re.exec( text );\n\t      if (!m) {\n\t        // Just boring text\n\t        return [ text.length, text ];\n\t      }\n\t      else if ( m[1] ) {\n\t        // Some un-interesting text matched. Return that first\n\t        return [ m[1].length, m[1] ];\n\t      }\n\t\n\t      var res;\n\t      if ( m[2] in this.dialect.inline ) {\n\t        res = this.dialect.inline[ m[2] ].call(\n\t                  this,\n\t                  text.substr( m.index ), m, previous_nodes || [] );\n\t      }\n\t      // Default for now to make dev easier. just slurp special and output it.\n\t      res = res || [ m[2].length, m[2] ];\n\t      return res;\n\t    },\n\t\n\t    __call__: function inline( text, patterns ) {\n\t\n\t      var out = [],\n\t          res;\n\t\n\t      function add(x) {\n\t        //D:self.debug(\"  adding output\", uneval(x));\n\t        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n\t          out[ out.length-1 ] += x;\n\t        else\n\t          out.push(x);\n\t      }\n\t\n\t      while ( text.length > 0 ) {\n\t        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n\t        text = text.substr( res.shift() );\n\t        forEach(res, add )\n\t      }\n\t\n\t      return out;\n\t    },\n\t\n\t    // These characters are intersting elsewhere, so have rules for them so that\n\t    // chunks of plain text blocks don't include them\n\t    \"]\": function () {},\n\t    \"}\": function () {},\n\t\n\t    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\t\n\t    \"\\\\\": function escaped( text ) {\n\t      // [ length of input processed, node/children to add... ]\n\t      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n\t      if ( this.dialect.inline.__escape__.exec( text ) )\n\t        return [ 2, text.charAt( 1 ) ];\n\t      else\n\t        // Not an esacpe\n\t        return [ 1, \"\\\\\" ];\n\t    },\n\t\n\t    \"![\": function image( text ) {\n\t\n\t      // Unlike images, alt text is plain text only. no other elements are\n\t      // allowed in there\n\t\n\t      // ![Alt text](/path/to/img.jpg \"Optional title\")\n\t      //      1          2            3       4         <--- captures\n\t      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\t\n\t      if ( m ) {\n\t        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n\t          m[2] = m[2].substring( 1, m[2].length - 1 );\n\t\n\t        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\t\n\t        var attrs = { alt: m[1], href: m[2] || \"\" };\n\t        if ( m[4] !== undefined)\n\t          attrs.title = m[4];\n\t\n\t        return [ m[0].length, [ \"img\", attrs ] ];\n\t      }\n\t\n\t      // ![Alt text][id]\n\t      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\t\n\t      if ( m ) {\n\t        // We can't check if the reference is known here as it likely wont be\n\t        // found till after. Check it in md tree->hmtl tree conversion\n\t        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n\t      }\n\t\n\t      // Just consume the '!['\n\t      return [ 2, \"![\" ];\n\t    },\n\t\n\t    \"[\": function link( text ) {\n\t\n\t      var orig = String(text);\n\t      // Inline content is possible inside `link text`\n\t      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\t\n\t      // No closing ']' found. Just consume the [\n\t      if ( !res ) return [ 1, \"[\" ];\n\t\n\t      var consumed = 1 + res[ 0 ],\n\t          children = res[ 1 ],\n\t          link,\n\t          attrs;\n\t\n\t      // At this point the first [...] has been parsed. See what follows to find\n\t      // out which kind of link we are (reference or direct url)\n\t      text = text.substr( consumed );\n\t\n\t      // [link text](/path/to/img.jpg \"Optional title\")\n\t      //                 1            2       3         <--- captures\n\t      // This will capture up to the last paren in the block. We then pull\n\t      // back based on if there a matching ones in the url\n\t      //    ([here](/url/(test))\n\t      // The parens have to be balanced\n\t      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n\t      if ( m ) {\n\t        var url = m[1];\n\t        consumed += m[0].length;\n\t\n\t        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n\t          url = url.substring( 1, url.length - 1 );\n\t\n\t        // If there is a title we don't have to worry about parens in the url\n\t        if ( !m[3] ) {\n\t          var open_parens = 1; // One open that isn't in the capture\n\t          for ( var len = 0; len < url.length; len++ ) {\n\t            switch ( url[len] ) {\n\t            case \"(\":\n\t              open_parens++;\n\t              break;\n\t            case \")\":\n\t              if ( --open_parens == 0) {\n\t                consumed -= url.length - len;\n\t                url = url.substring(0, len);\n\t              }\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Process escapes only\n\t        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\t\n\t        attrs = { href: url || \"\" };\n\t        if ( m[3] !== undefined)\n\t          attrs.title = m[3];\n\t\n\t        link = [ \"link\", attrs ].concat( children );\n\t        return [ consumed, link ];\n\t      }\n\t\n\t      // [Alt text][id]\n\t      // [Alt text] [id]\n\t      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\t\n\t      if ( m ) {\n\t\n\t        consumed += m[ 0 ].length;\n\t\n\t        // [links][] uses links as its reference\n\t        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\t\n\t        link = [ \"link_ref\", attrs ].concat( children );\n\t\n\t        // We can't check if the reference is known here as it likely wont be\n\t        // found till after. Check it in md tree->hmtl tree conversion.\n\t        // Store the original so that conversion can revert if the ref isn't found.\n\t        return [ consumed, link ];\n\t      }\n\t\n\t      // [id]\n\t      // Only if id is plain (no formatting.)\n\t      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\t\n\t        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n\t        link = [ \"link_ref\", attrs, children[0] ];\n\t        return [ consumed, link ];\n\t      }\n\t\n\t      // Just consume the \"[\"\n\t      return [ 1, \"[\" ];\n\t    },\n\t\n\t\n\t    \"<\": function autoLink( text ) {\n\t      var m;\n\t\n\t      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n\t        if ( m[3] ) {\n\t          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\t\n\t        }\n\t        else if ( m[2] == \"mailto\" ) {\n\t          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n\t        }\n\t        else\n\t          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n\t      }\n\t\n\t      return [ 1, \"<\" ];\n\t    },\n\t\n\t    \"`\": function inlineCode( text ) {\n\t      // Inline code block. as many backticks as you like to start it\n\t      // Always skip over the opening ticks.\n\t      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\t\n\t      if ( m && m[2] )\n\t        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n\t      else {\n\t        // TODO: No matching end code found - warn!\n\t        return [ 1, \"`\" ];\n\t      }\n\t    },\n\t\n\t    \"  \\n\": function lineBreak( text ) {\n\t      return [ 3, [ \"linebreak\" ] ];\n\t    }\n\t\n\t};\n\t\n\t// Meta Helper/generator method for em and strong handling\n\tfunction strong_em( tag, md ) {\n\t\n\t  var state_slot = tag + \"_state\",\n\t      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\t\n\t  function CloseTag(len) {\n\t    this.len_after = len;\n\t    this.name = \"close_\" + md;\n\t  }\n\t\n\t  return function ( text, orig_match ) {\n\t\n\t    if ( this[state_slot][0] == md ) {\n\t      // Most recent em is of this type\n\t      //D:this.debug(\"closing\", md);\n\t      this[state_slot].shift();\n\t\n\t      // \"Consume\" everything to go back to the recrusion in the else-block below\n\t      return[ text.length, new CloseTag(text.length-md.length) ];\n\t    }\n\t    else {\n\t      // Store a clone of the em/strong states\n\t      var other = this[other_slot].slice(),\n\t          state = this[state_slot].slice();\n\t\n\t      this[state_slot].unshift(md);\n\t\n\t      //D:this.debug_indent += \"  \";\n\t\n\t      // Recurse\n\t      var res = this.processInline( text.substr( md.length ) );\n\t      //D:this.debug_indent = this.debug_indent.substr(2);\n\t\n\t      var last = res[res.length - 1];\n\t\n\t      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\t\n\t      var check = this[state_slot].shift();\n\t      if ( last instanceof CloseTag ) {\n\t        res.pop();\n\t        // We matched! Huzzah.\n\t        var consumed = text.length - last.len_after;\n\t        return [ consumed, [ tag ].concat(res) ];\n\t      }\n\t      else {\n\t        // Restore the state of the other kind. We might have mistakenly closed it.\n\t        this[other_slot] = other;\n\t        this[state_slot] = state;\n\t\n\t        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n\t        return [ md.length, md ];\n\t      }\n\t    }\n\t  }; // End returned function\n\t}\n\t\n\tMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\n\tMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\n\tMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\n\tMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\t\n\t\n\t// Build default order from insertion order.\n\tMarkdown.buildBlockOrder = function(d) {\n\t  var ord = [];\n\t  for ( var i in d ) {\n\t    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n\t    ord.push( i );\n\t  }\n\t  d.__order__ = ord;\n\t};\n\t\n\t// Build patterns for inline matcher\n\tMarkdown.buildInlinePatterns = function(d) {\n\t  var patterns = [];\n\t\n\t  for ( var i in d ) {\n\t    // __foo__ is reserved and not a pattern\n\t    if ( i.match( /^__.*__$/) ) continue;\n\t    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n\t             .replace( /\\n/, \"\\\\n\" );\n\t    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n\t  }\n\t\n\t  patterns = patterns.join(\"|\");\n\t  d.__patterns__ = patterns;\n\t  //print(\"patterns:\", uneval( patterns ) );\n\t\n\t  var fn = d.__call__;\n\t  d.__call__ = function(text, pattern) {\n\t    if ( pattern != undefined ) {\n\t      return fn.call(this, text, pattern);\n\t    }\n\t    else\n\t    {\n\t      return fn.call(this, text, patterns);\n\t    }\n\t  };\n\t};\n\t\n\tMarkdown.DialectHelpers = {};\n\tMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n\t  var consumed = 0,\n\t      nodes = [];\n\t\n\t  while ( true ) {\n\t    if ( text.charAt( consumed ) == want ) {\n\t      // Found the character we were looking for\n\t      consumed++;\n\t      return [ consumed, nodes ];\n\t    }\n\t\n\t    if ( consumed >= text.length ) {\n\t      // No closing char found. Abort.\n\t      return null;\n\t    }\n\t\n\t    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n\t    consumed += res[ 0 ];\n\t    // Add any returned nodes.\n\t    nodes.push.apply( nodes, res.slice( 1 ) );\n\t  }\n\t}\n\t\n\t// Helper function to make sub-classing a dialect easier\n\tMarkdown.subclassDialect = function( d ) {\n\t  function Block() {}\n\t  Block.prototype = d.block;\n\t  function Inline() {}\n\t  Inline.prototype = d.inline;\n\t\n\t  return { block: new Block(), inline: new Inline() };\n\t};\n\t\n\tMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\n\tMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\t\n\tMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\t\n\tMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n\t  var meta = split_meta_hash( meta_string ),\n\t      attr = {};\n\t\n\t  for ( var i = 0; i < meta.length; ++i ) {\n\t    // id: #foo\n\t    if ( /^#/.test( meta[ i ] ) ) {\n\t      attr.id = meta[ i ].substring( 1 );\n\t    }\n\t    // class: .foo\n\t    else if ( /^\\./.test( meta[ i ] ) ) {\n\t      // if class already exists, append the new one\n\t      if ( attr[\"class\"] ) {\n\t        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n\t      }\n\t      else {\n\t        attr[\"class\"] = meta[ i ].substring( 1 );\n\t      }\n\t    }\n\t    // attribute: foo=bar\n\t    else if ( /\\=/.test( meta[ i ] ) ) {\n\t      var s = meta[ i ].split( /\\=/ );\n\t      attr[ s[ 0 ] ] = s[ 1 ];\n\t    }\n\t  }\n\t\n\t  return attr;\n\t}\n\t\n\tfunction split_meta_hash( meta_string ) {\n\t  var meta = meta_string.split( \"\" ),\n\t      parts = [ \"\" ],\n\t      in_quotes = false;\n\t\n\t  while ( meta.length ) {\n\t    var letter = meta.shift();\n\t    switch ( letter ) {\n\t      case \" \" :\n\t        // if we're in a quoted section, keep it\n\t        if ( in_quotes ) {\n\t          parts[ parts.length - 1 ] += letter;\n\t        }\n\t        // otherwise make a new part\n\t        else {\n\t          parts.push( \"\" );\n\t        }\n\t        break;\n\t      case \"'\" :\n\t      case '\"' :\n\t        // reverse the quotes and move straight on\n\t        in_quotes = !in_quotes;\n\t        break;\n\t      case \"\\\\\" :\n\t        // shift off the next letter to be used straight away.\n\t        // it was escaped so we'll keep it whatever it is\n\t        letter = meta.shift();\n\t      default :\n\t        parts[ parts.length - 1 ] += letter;\n\t        break;\n\t    }\n\t  }\n\t\n\t  return parts;\n\t}\n\t\n\tMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n\t  // we're only interested in the first block\n\t  if ( block.lineNumber > 1 ) return undefined;\n\t\n\t  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n\t  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\t\n\t  // make an attribute node if it doesn't exist\n\t  if ( !extract_attr( this.tree ) ) {\n\t    this.tree.splice( 1, 0, {} );\n\t  }\n\t\n\t  var pairs = block.split( /\\n/ );\n\t  for ( p in pairs ) {\n\t    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n\t        key = m[ 1 ].toLowerCase(),\n\t        value = m[ 2 ];\n\t\n\t    this.tree[ 1 ][ key ] = value;\n\t  }\n\t\n\t  // document_meta produces no content!\n\t  return [];\n\t};\n\t\n\tMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n\t  // check if the last line of the block is an meta hash\n\t  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n\t  if ( !m ) return undefined;\n\t\n\t  // process the meta hash\n\t  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\t\n\t  var hash;\n\t\n\t  // if we matched ^ then we need to apply meta to the previous block\n\t  if ( m[ 1 ] === \"\" ) {\n\t    var node = this.tree[ this.tree.length - 1 ];\n\t    hash = extract_attr( node );\n\t\n\t    // if the node is a string (rather than JsonML), bail\n\t    if ( typeof node === \"string\" ) return undefined;\n\t\n\t    // create the attribute hash if it doesn't exist\n\t    if ( !hash ) {\n\t      hash = {};\n\t      node.splice( 1, 0, hash );\n\t    }\n\t\n\t    // add the attributes in\n\t    for ( a in attr ) {\n\t      hash[ a ] = attr[ a ];\n\t    }\n\t\n\t    // return nothing so the meta hash is removed\n\t    return [];\n\t  }\n\t\n\t  // pull the meta hash off the block and process what's left\n\t  var b = block.replace( /\\n.*$/, \"\" ),\n\t      result = this.processBlock( b, [] );\n\t\n\t  // get or make the attributes hash\n\t  hash = extract_attr( result[ 0 ] );\n\t  if ( !hash ) {\n\t    hash = {};\n\t    result[ 0 ].splice( 1, 0, hash );\n\t  }\n\t\n\t  // attach the attributes to the block\n\t  for ( a in attr ) {\n\t    hash[ a ] = attr[ a ];\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\tMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n\t  // one or more terms followed by one or more definitions, in a single block\n\t  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n\t      list = [ \"dl\" ],\n\t      i, m;\n\t\n\t  // see if we're dealing with a tight or loose block\n\t  if ( ( m = block.match( tight ) ) ) {\n\t    // pull subsequent tight DL blocks out of `next`\n\t    var blocks = [ block ];\n\t    while ( next.length && tight.exec( next[ 0 ] ) ) {\n\t      blocks.push( next.shift() );\n\t    }\n\t\n\t    for ( var b = 0; b < blocks.length; ++b ) {\n\t      var m = blocks[ b ].match( tight ),\n\t          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n\t          defns = m[ 2 ].split( /\\n:\\s+/ );\n\t\n\t      // print( uneval( m ) );\n\t\n\t      for ( i = 0; i < terms.length; ++i ) {\n\t        list.push( [ \"dt\", terms[ i ] ] );\n\t      }\n\t\n\t      for ( i = 0; i < defns.length; ++i ) {\n\t        // run inline processing over the definition\n\t        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    return undefined;\n\t  }\n\t\n\t  return [ list ];\n\t};\n\t\n\t// splits on unescaped instances of @ch. If @ch is not a character the result\n\t// can be unpredictable\n\t\n\tMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\t\n\t    var _split_on_unescaped = function(s, ch) {\n\t        ch = ch || '\\\\s';\n\t        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n\t        var res = [ ],\n\t            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n\t            m;\n\t        while(m = s.match(r)) {\n\t            res.push(m[1]);\n\t            s = m[2];\n\t        }\n\t        res.push(s);\n\t        return res;\n\t    }\n\t\n\t    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n\t        // find at least an unescaped pipe in each line\n\t        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n\t        i, m;\n\t    if (m = block.match(leading_pipe)) {\n\t        // remove leading pipes in contents\n\t        // (header and horizontal rule already have the leading pipe left out)\n\t        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n\t    } else if (! ( m = block.match(no_leading_pipe))) {\n\t        return undefined;\n\t    }\n\t\n\t    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\t\n\t    // remove trailing pipes, then split on pipes\n\t    // (no escaped pipes are allowed in horizontal rule)\n\t    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\t\n\t    // process alignment\n\t    var html_attrs = [ ];\n\t    forEach (m[2], function (s) {\n\t        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n\t        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n\t        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n\t        else                              html_attrs.push({});\n\t    });\n\t\n\t    // now for the header, avoid escaped pipes\n\t    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n\t    for (i = 0; i < m[1].length; i++) {\n\t        table[1][1].push(['th', html_attrs[i] || {}].concat(\n\t            this.processInline(m[1][i].trim())));\n\t    }\n\t\n\t    // now for body contents\n\t    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n\t        var html_row = ['tr'];\n\t        row = _split_on_unescaped(row, '|');\n\t        for (i = 0; i < row.length; i++) {\n\t            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n\t        }\n\t        table[2].push(html_row);\n\t    }, this);\n\t\n\t    return [table];\n\t}\n\t\n\tMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n\t  if ( !out.length ) {\n\t    return [ 2, \"{:\" ];\n\t  }\n\t\n\t  // get the preceeding element\n\t  var before = out[ out.length - 1 ];\n\t\n\t  if ( typeof before === \"string\" ) {\n\t    return [ 2, \"{:\" ];\n\t  }\n\t\n\t  // match a meta hash\n\t  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\t\n\t  // no match, false alarm\n\t  if ( !m ) {\n\t    return [ 2, \"{:\" ];\n\t  }\n\t\n\t  // attach the attributes to the preceeding element\n\t  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n\t      attr = extract_attr( before );\n\t\n\t  if ( !attr ) {\n\t    attr = {};\n\t    before.splice( 1, 0, attr );\n\t  }\n\t\n\t  for ( var k in meta ) {\n\t    attr[ k ] = meta[ k ];\n\t  }\n\t\n\t  // cut out the string and replace it with nothing\n\t  return [ m[ 0 ].length, \"\" ];\n\t};\n\t\n\tMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\t\n\tMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\n\tMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\t\n\tvar isArray = Array.isArray || function(obj) {\n\t  return Object.prototype.toString.call(obj) == \"[object Array]\";\n\t};\n\t\n\tvar forEach;\n\t// Don't mess with Array.prototype. Its not friendly\n\tif ( Array.prototype.forEach ) {\n\t  forEach = function( arr, cb, thisp ) {\n\t    return arr.forEach( cb, thisp );\n\t  };\n\t}\n\telse {\n\t  forEach = function(arr, cb, thisp) {\n\t    for (var i = 0; i < arr.length; i++) {\n\t      cb.call(thisp || arr, arr[i], i, arr);\n\t    }\n\t  }\n\t}\n\t\n\tvar isEmpty = function( obj ) {\n\t  for ( var key in obj ) {\n\t    if ( hasOwnProperty.call( obj, key ) ) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tfunction extract_attr( jsonml ) {\n\t  return isArray(jsonml)\n\t      && jsonml.length > 1\n\t      && typeof jsonml[ 1 ] === \"object\"\n\t      && !( isArray(jsonml[ 1 ]) )\n\t      ? jsonml[ 1 ]\n\t      : undefined;\n\t}\n\t\n\t\n\t\n\t/**\n\t *  renderJsonML( jsonml[, options] ) -> String\n\t *  - jsonml (Array): JsonML array to render to XML\n\t *  - options (Object): options\n\t *\n\t *  Converts the given JsonML into well-formed XML.\n\t *\n\t *  The options currently understood are:\n\t *\n\t *  - root (Boolean): wether or not the root node should be included in the\n\t *    output, or just its children. The default `false` is to not include the\n\t *    root itself.\n\t */\n\texpose.renderJsonML = function( jsonml, options ) {\n\t  options = options || {};\n\t  // include the root element in the rendered output?\n\t  options.root = options.root || false;\n\t\n\t  var content = [];\n\t\n\t  if ( options.root ) {\n\t    content.push( render_tree( jsonml ) );\n\t  }\n\t  else {\n\t    jsonml.shift(); // get rid of the tag\n\t    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n\t      jsonml.shift(); // get rid of the attributes\n\t    }\n\t\n\t    while ( jsonml.length ) {\n\t      content.push( render_tree( jsonml.shift() ) );\n\t    }\n\t  }\n\t\n\t  return content.join( \"\\n\\n\" );\n\t};\n\t\n\tfunction escapeHTML( text ) {\n\t  return text.replace( /&/g, \"&amp;\" )\n\t             .replace( /</g, \"&lt;\" )\n\t             .replace( />/g, \"&gt;\" )\n\t             .replace( /\"/g, \"&quot;\" )\n\t             .replace( /'/g, \"&#39;\" );\n\t}\n\t\n\tfunction render_tree( jsonml ) {\n\t  // basic case\n\t  if ( typeof jsonml === \"string\" ) {\n\t    return escapeHTML( jsonml );\n\t  }\n\t\n\t  var tag = jsonml.shift(),\n\t      attributes = {},\n\t      content = [];\n\t\n\t  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n\t    attributes = jsonml.shift();\n\t  }\n\t\n\t  while ( jsonml.length ) {\n\t    content.push( render_tree( jsonml.shift() ) );\n\t  }\n\t\n\t  var tag_attrs = \"\";\n\t  for ( var a in attributes ) {\n\t    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n\t  }\n\t\n\t  // be careful about adding whitespace here for inline elements\n\t  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n\t    return \"<\"+ tag + tag_attrs + \"/>\";\n\t  }\n\t  else {\n\t    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n\t  }\n\t}\n\t\n\tfunction convert_tree_to_html( tree, references, options ) {\n\t  var i;\n\t  options = options || {};\n\t\n\t  // shallow clone\n\t  var jsonml = tree.slice( 0 );\n\t\n\t  if ( typeof options.preprocessTreeNode === \"function\" ) {\n\t      jsonml = options.preprocessTreeNode(jsonml, references);\n\t  }\n\t\n\t  // Clone attributes if they exist\n\t  var attrs = extract_attr( jsonml );\n\t  if ( attrs ) {\n\t    jsonml[ 1 ] = {};\n\t    for ( i in attrs ) {\n\t      jsonml[ 1 ][ i ] = attrs[ i ];\n\t    }\n\t    attrs = jsonml[ 1 ];\n\t  }\n\t\n\t  // basic case\n\t  if ( typeof jsonml === \"string\" ) {\n\t    return jsonml;\n\t  }\n\t\n\t  // convert this node\n\t  switch ( jsonml[ 0 ] ) {\n\t    case \"header\":\n\t      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n\t      delete jsonml[ 1 ].level;\n\t      break;\n\t    case \"bulletlist\":\n\t      jsonml[ 0 ] = \"ul\";\n\t      break;\n\t    case \"numberlist\":\n\t      jsonml[ 0 ] = \"ol\";\n\t      break;\n\t    case \"listitem\":\n\t      jsonml[ 0 ] = \"li\";\n\t      break;\n\t    case \"para\":\n\t      jsonml[ 0 ] = \"p\";\n\t      break;\n\t    case \"markdown\":\n\t      jsonml[ 0 ] = \"html\";\n\t      if ( attrs ) delete attrs.references;\n\t      break;\n\t    case \"code_block\":\n\t      jsonml[ 0 ] = \"pre\";\n\t      i = attrs ? 2 : 1;\n\t      var code = [ \"code\" ];\n\t      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n\t      jsonml[ i ] = code;\n\t      break;\n\t    case \"inlinecode\":\n\t      jsonml[ 0 ] = \"code\";\n\t      break;\n\t    case \"img\":\n\t      jsonml[ 1 ].src = jsonml[ 1 ].href;\n\t      delete jsonml[ 1 ].href;\n\t      break;\n\t    case \"linebreak\":\n\t      jsonml[ 0 ] = \"br\";\n\t    break;\n\t    case \"link\":\n\t      jsonml[ 0 ] = \"a\";\n\t      break;\n\t    case \"link_ref\":\n\t      jsonml[ 0 ] = \"a\";\n\t\n\t      // grab this ref and clean up the attribute node\n\t      var ref = references[ attrs.ref ];\n\t\n\t      // if the reference exists, make the link\n\t      if ( ref ) {\n\t        delete attrs.ref;\n\t\n\t        // add in the href and title, if present\n\t        attrs.href = ref.href;\n\t        if ( ref.title ) {\n\t          attrs.title = ref.title;\n\t        }\n\t\n\t        // get rid of the unneeded original text\n\t        delete attrs.original;\n\t      }\n\t      // the reference doesn't exist, so revert to plain text\n\t      else {\n\t        return attrs.original;\n\t      }\n\t      break;\n\t    case \"img_ref\":\n\t      jsonml[ 0 ] = \"img\";\n\t\n\t      // grab this ref and clean up the attribute node\n\t      var ref = references[ attrs.ref ];\n\t\n\t      // if the reference exists, make the link\n\t      if ( ref ) {\n\t        delete attrs.ref;\n\t\n\t        // add in the href and title, if present\n\t        attrs.src = ref.href;\n\t        if ( ref.title ) {\n\t          attrs.title = ref.title;\n\t        }\n\t\n\t        // get rid of the unneeded original text\n\t        delete attrs.original;\n\t      }\n\t      // the reference doesn't exist, so revert to plain text\n\t      else {\n\t        return attrs.original;\n\t      }\n\t      break;\n\t  }\n\t\n\t  // convert all the children\n\t  i = 1;\n\t\n\t  // deal with the attribute node, if it exists\n\t  if ( attrs ) {\n\t    // if there are keys, skip over it\n\t    for ( var key in jsonml[ 1 ] ) {\n\t        i = 2;\n\t        break;\n\t    }\n\t    // if there aren't, remove it\n\t    if ( i === 1 ) {\n\t      jsonml.splice( i, 1 );\n\t    }\n\t  }\n\t\n\t  for ( ; i < jsonml.length; ++i ) {\n\t    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n\t  }\n\t\n\t  return jsonml;\n\t}\n\t\n\t\n\t// merges adjacent text nodes into a single node\n\tfunction merge_text_nodes( jsonml ) {\n\t  // skip the tag name and attribute hash\n\t  var i = extract_attr( jsonml ) ? 2 : 1;\n\t\n\t  while ( i < jsonml.length ) {\n\t    // if it's a string check the next item too\n\t    if ( typeof jsonml[ i ] === \"string\" ) {\n\t      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n\t        // merge the second string into the first and remove it\n\t        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n\t      }\n\t      else {\n\t        ++i;\n\t      }\n\t    }\n\t    // if it's not a string recurse\n\t    else {\n\t      merge_text_nodes( jsonml[ i ] );\n\t      ++i;\n\t    }\n\t  }\n\t}\n\t\n\t} )( (function() {\n\t  if ( false ) {\n\t    window.markdown = {};\n\t    return window.markdown;\n\t  }\n\t  else {\n\t    return exports;\n\t  }\n\t} )() );\n\n\n/***/ },\n\n/***/ 88:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 89:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/img/me-1.446d511.jpg\";\n\n/***/ },\n\n/***/ 90:\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 91:\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n\n/***/ 92:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = ({\"NODE_ENV\":\"production\"}).NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(91);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(90);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(88)))\n\n/***/ },\n\n/***/ 123:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _markdown = __webpack_require__(87);\n\t\n\tvar _markdown2 = _interopRequireDefault(_markdown);\n\t\n\tvar _progressBar = __webpack_require__(462);\n\t\n\tvar _progressBar2 = _interopRequireDefault(_progressBar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      tx: 0,\n\t      ty: 0,\n\t      tz: 0,\n\t      progressClass: ProgressClass,\n\t      progressList: ProgressList,\n\t      show: -1\n\t    };\n\t  },\n\t\n\t  computed: {},\n\t  mounted: function mounted() {\n\t    this.query();\n\t    this.watchScroll();\n\t  },\n\t\n\t  methods: {\n\t    query: function query() {\n\t      var _this = this;\n\t\n\t      this.$http.get('/static/md/me.md').then(function (res) {\n\t        _this.praseMd(res.data);\n\t      }).catch(function (err) {\n\t        console.log(err);\n\t      });\n\t    },\n\t    praseMd: function praseMd(data) {\n\t      this.content = _markdown2.default.toHTML(data);\n\t    },\n\t    watchScroll: function watchScroll() {\n\t      window.addEventListener('scroll', this.setAnimation);\n\t    },\n\t    setAnimation: function setAnimation() {\n\t      this.tx = -window.scrollY / 4;\n\t      this.ty = -window.scrollY / 4;\n\t      this.tz = -window.scrollY / 4;\n\t    }\n\t  },\n\t  beforeDestroy: function beforeDestroy() {\n\t    window.removeEventListener('scroll', this.setAnimation);\n\t  },\n\t\n\t  components: {\n\t    progressBar: _progressBar2.default,\n\t    Markdown: _markdown2.default\n\t  }\n\t};\n\t\n\tvar ProgressClass = {\n\t  container: {\n\t    width: '500px'\n\t  }\n\t};\n\tvar ProgressList = [{\n\t  label: 'HTML',\n\t  value: '80'\n\t}, {\n\t  label: 'CSS',\n\t  value: '70'\n\t}, {\n\t  label: 'Javascript',\n\t  value: '60'\n\t}];\n\n/***/ },\n\n/***/ 146:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  name: 'progress-bar',\n\t\n\t  props: {\n\t    progressClass: Object,\n\t    progressList: Array\n\t  }\n\t};\n\n/***/ },\n\n/***/ 189:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".progress-label[data-v-73a04881]{position:absolute;left:-10px;top:1px;transform:translate(-100%,-50%);line-height:0;margin-right:10px}.progress-container[data-v-73a04881]{margin:20px auto;position:relative;height:3px;background-color:#d4d4d4}.progress-inner[data-v-73a04881]{position:absolute;width:50%;height:100%;background-color:#000;animation:progress 1s}@keyframes progress{0%{width:0;opacity:0}to{width:1;opacity:1}}\", \"\", {\"version\":3,\"sources\":[\"/./src/packages/progressBar.vue\"],\"names\":[],\"mappings\":\"AACA,iCACE,kBAAmB,AACnB,WAAY,AACZ,QAAS,AACT,gCAAkC,AAClC,cAAe,AACf,iBAAmB,CACpB,AACD,qCACE,iBAAkB,AAClB,kBAAmB,AACnB,WAAY,AACZ,wBAA0B,CAC3B,AACD,iCACE,kBAAmB,AACnB,UAAW,AACX,YAAa,AACb,sBAAuB,AACvB,qBAAuB,CACxB,AACD,oBACA,GACI,QAAS,AACT,SAAW,CACd,AACD,GACI,QAAS,AACT,SAAW,CACd,CACA\",\"file\":\"progressBar.vue\",\"sourcesContent\":[\"\\n.progress-label[data-v-73a04881] {\\n  position: absolute;\\n  left: -10px;\\n  top: 1px;\\n  transform: translate(-100%, -50%);\\n  line-height: 0;\\n  margin-right: 10px;\\n}\\n.progress-container[data-v-73a04881] {\\n  margin: 20px auto;\\n  position: relative;\\n  height: 3px;\\n  background-color: #d4d4d4;\\n}\\n.progress-inner[data-v-73a04881] {\\n  position: absolute;\\n  width: 50%;\\n  height: 100%;\\n  background-color: #000;\\n  animation: progress 1s;\\n}\\n@keyframes progress {\\n0% {\\n    width: 0;\\n    opacity: 0;\\n}\\n100% {\\n    width: 1;\\n    opacity: 1;\\n}\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 198:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\texports.i(__webpack_require__(83), \"\");\n\t\n\t// module\n\texports.push([module.id, \".content p[data-v-ca40f4b8]{margin:20px 0}.content[data-v-ca40f4b8]{max-width:50rem;margin:5rem auto;text-align:center}.hero-tree[data-v-ca40f4b8]{position:absolute;top:-50px;left:-50px;width:80px;height:80px;border:30px solid #ddf6ff;z-index:-1}.hero-flower[data-v-ca40f4b8]{position:absolute;bottom:-50px;right:-50px;width:50px;height:50px;border-radius:100px;border:30px solid #d3e0f3}.hero[data-v-ca40f4b8]{margin-top:70px;padding:130px 0;background-color:#f9f9f9}.hero-container[data-v-ca40f4b8]{position:relative;max-width:50rem;margin:0 auto;text-align:right;line-height:0}.hero-name h1[data-v-ca40f4b8]{font-size:5rem;color:#b4e3f4;line-height:.9;font-weight:400;text-transform:uppercase}.hero-name h2[data-v-ca40f4b8]{font-size:1.2rem;font-weight:200;color:#222;line-height:1.3}.hero-name[data-v-ca40f4b8]{position:absolute;left:0;bottom:0;text-align:left;display:inline-block;line-height:1.2}.progressBar-container[data-v-ca40f4b8]{margin:50px auto}.contact-layout[data-v-ca40f4b8]{position:absolute;width:100%;margin:0 auto}.hero-avatar[data-v-ca40f4b8]{position:relative;display:inline-block;z-index:2}.hero-avatar-img[data-v-ca40f4b8]{width:300px;height:300px;background-color:#f3f3f3;background-image:url(\" + __webpack_require__(89) + \");background-size:cover;background-position:50%;line-height:0;box-shadow:0 0 6rem rgba(0,0,0,.3)}.contact-item-text[data-v-ca40f4b8]{font-size:15px;color:#000;font-weight:400}.fade-item-enter-active[data-v-ca40f4b8],.fade-item-leave-active[data-v-ca40f4b8]{transition:all .5s ease-out;opacity:1}.fade-item-enter[data-v-ca40f4b8],.fade-item-leave-active[data-v-ca40f4b8]{opacity:0}#particlesJs[data-v-ca40f4b8]{position:absolute;width:100%;height:100%;background-color:#fff;background-repeat:no-repeat;background-size:cover;background-position:50% 50%;overflow:hidden}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/Me.vue\"],\"names\":[],\"mappings\":\"AAEA,4BACE,aAAe,CAChB,AACD,0BACE,gBAAiB,AACjB,iBAAkB,AAClB,iBAAmB,CACpB,AACD,4BACE,kBAAmB,AACnB,UAAW,AACX,WAAY,AACZ,WAAY,AACZ,YAAa,AACb,0BAA2B,AAC3B,UAAY,CACb,AACD,8BACE,kBAAmB,AACnB,aAAc,AACd,YAAa,AACb,WAAY,AACZ,YAAa,AACb,oBAAqB,AACrB,yBAA2B,CAC5B,AACD,uBACE,gBAAiB,AACjB,gBAAiB,AACjB,wBAA0B,CAC3B,AACD,iCACE,kBAAmB,AACnB,gBAAiB,AACjB,cAAe,AACf,iBAAkB,AAClB,aAAe,CAChB,AACD,+BACE,eAAgB,AAChB,cAAe,AACf,eAAgB,AAChB,gBAAiB,AACjB,wBAA0B,CAC3B,AACD,+BACE,iBAAkB,AAClB,gBAAiB,AACjB,WAAY,AACZ,eAAiB,CAClB,AACD,4BACE,kBAAmB,AACnB,OAAQ,AACR,SAAU,AACV,gBAAiB,AACjB,qBAAsB,AACtB,eAAiB,CAClB,AACD,wCACE,gBAAkB,CACnB,AACD,iCACE,kBAAmB,AACnB,WAAY,AACZ,aAAe,CAChB,AACD,8BACE,kBAAmB,AACnB,qBAAsB,AACtB,SAAW,CACZ,AACD,kCACE,YAAa,AACb,aAAc,AACd,yBAA0B,AAC1B,+CAAqD,AACrD,sBAAuB,AACvB,wBAA4B,AAC5B,cAAe,AACf,kCAAoC,CACrC,AACD,oCACE,eAAgB,AAChB,WAAY,AACZ,eAAiB,CAClB,AAED,kFACE,4BAA6B,AAC7B,SAAW,CACZ,AACD,2EACE,SAAW,CACZ,AACD,8BACE,kBAAmB,AACnB,WAAY,AACZ,YAAa,AACb,sBAAuB,AAEvB,4BAA6B,AAC7B,sBAAuB,AACvB,4BAA6B,AAC7B,eAAiB,CAClB\",\"file\":\"Me.vue\",\"sourcesContent\":[\"\\n@import url(\\\"./../assets/styles/animation.css\\\");\\n.content p[data-v-ca40f4b8] {\\n  margin: 20px 0;\\n}\\n.content[data-v-ca40f4b8] {\\n  max-width: 50rem;\\n  margin: 5rem auto;\\n  text-align: center;\\n}\\n.hero-tree[data-v-ca40f4b8] {\\n  position: absolute;\\n  top: -50px;\\n  left: -50px;\\n  width: 80px;\\n  height: 80px;\\n  border: 30px solid #ddf6ff;\\n  z-index: -1;\\n}\\n.hero-flower[data-v-ca40f4b8] {\\n  position: absolute;\\n  bottom: -50px;\\n  right: -50px;\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 100px;\\n  border: 30px solid #d3e0f3;\\n}\\n.hero[data-v-ca40f4b8] {\\n  margin-top: 70px;\\n  padding: 130px 0;\\n  background-color: #f9f9f9;\\n}\\n.hero-container[data-v-ca40f4b8] {\\n  position: relative;\\n  max-width: 50rem;\\n  margin: 0 auto;\\n  text-align: right;\\n  line-height: 0;\\n}\\n.hero-name h1[data-v-ca40f4b8] {\\n  font-size: 5rem;\\n  color: #b4e3f4;\\n  line-height: .9;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n}\\n.hero-name h2[data-v-ca40f4b8] {\\n  font-size: 1.2rem;\\n  font-weight: 200;\\n  color: #222;\\n  line-height: 1.3;\\n}\\n.hero-name[data-v-ca40f4b8] {\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n  text-align: left;\\n  display: inline-block;\\n  line-height: 1.2;\\n}\\n.progressBar-container[data-v-ca40f4b8] {\\n  margin: 50px auto;\\n}\\n.contact-layout[data-v-ca40f4b8] {\\n  position: absolute;\\n  width: 100%;\\n  margin: 0 auto;\\n}\\n.hero-avatar[data-v-ca40f4b8] {\\n  position: relative;\\n  display: inline-block;\\n  z-index: 2;\\n}\\n.hero-avatar-img[data-v-ca40f4b8] {\\n  width: 300px;\\n  height: 300px;\\n  background-color: #f3f3f3;\\n  background-image: url('./../assets/images/me-1.jpg');\\n  background-size: cover;\\n  background-position: center;\\n  line-height: 0;\\n  box-shadow: 0 0 6rem rgba(0,0,0,.3);\\n}\\n.contact-item-text[data-v-ca40f4b8] {\\n  font-size: 15px;\\n  color: #000;\\n  font-weight: 400;\\n}\\n/*動畫*/\\n.fade-item-enter-active[data-v-ca40f4b8], .fade-item-leave-active[data-v-ca40f4b8] {\\n  transition: all .5s ease-out;\\n  opacity: 1;\\n}\\n.fade-item-enter[data-v-ca40f4b8], .fade-item-leave-active[data-v-ca40f4b8] {\\n  opacity: 0;\\n}\\n#particlesJs[data-v-ca40f4b8] {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #fff;\\n  /*background-image: url('');*/\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: 50% 50%;\\n  overflow: hidden;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 228:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(189);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-73a04881&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./progressBar.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-73a04881&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./progressBar.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 237:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(198);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-ca40f4b8&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Me.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-ca40f4b8&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Me.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 442:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_exports__, __vue_options__\n\tvar __vue_styles__ = {}\n\t\n\t/* styles */\n\t__webpack_require__(237)\n\t\n\t/* script */\n\t__vue_exports__ = __webpack_require__(123)\n\t\n\t/* template */\n\tvar __vue_template__ = __webpack_require__(503)\n\t__vue_options__ = __vue_exports__ = __vue_exports__ || {}\n\tif (\n\t  typeof __vue_exports__.default === \"object\" ||\n\t  typeof __vue_exports__.default === \"function\"\n\t) {\n\t__vue_options__ = __vue_exports__ = __vue_exports__.default\n\t}\n\tif (typeof __vue_options__ === \"function\") {\n\t  __vue_options__ = __vue_options__.options\n\t}\n\t\n\t__vue_options__.render = __vue_template__.render\n\t__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\t__vue_options__._scopeId = \"data-v-ca40f4b8\"\n\t\n\tmodule.exports = __vue_exports__\n\n\n/***/ },\n\n/***/ 462:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_exports__, __vue_options__\n\tvar __vue_styles__ = {}\n\t\n\t/* styles */\n\t__webpack_require__(228)\n\t\n\t/* script */\n\t__vue_exports__ = __webpack_require__(146)\n\t\n\t/* template */\n\tvar __vue_template__ = __webpack_require__(494)\n\t__vue_options__ = __vue_exports__ = __vue_exports__ || {}\n\tif (\n\t  typeof __vue_exports__.default === \"object\" ||\n\t  typeof __vue_exports__.default === \"function\"\n\t) {\n\t__vue_options__ = __vue_exports__ = __vue_exports__.default\n\t}\n\tif (typeof __vue_options__ === \"function\") {\n\t  __vue_options__ = __vue_options__.options\n\t}\n\t\n\t__vue_options__.render = __vue_template__.render\n\t__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\t__vue_options__._scopeId = \"data-v-73a04881\"\n\t\n\tmodule.exports = __vue_exports__\n\n\n/***/ },\n\n/***/ 494:\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {}, _vm._l((_vm.progressList), function(item) {\n\t    return _c('div', {\n\t      staticClass: \"progress-container\",\n\t      style: (_vm.progressClass.container)\n\t    }, [_c('div', {\n\t      staticClass: \"progress-label\"\n\t    }, [_vm._v(\"\\n      \" + _vm._s(item.label) + \"\\n    \")]), _vm._v(\" \"), _c('div', {\n\t      staticClass: \"progress-inner\",\n\t      style: ([_vm.progressClass.inner, {\n\t        width: item.value + '%'\n\t      }])\n\t    })])\n\t  }))\n\t},staticRenderFns: []}\n\n/***/ },\n\n/***/ 503:\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('transition', {\n\t    attrs: {\n\t      \"name\": \"fade-contact\"\n\t    }\n\t  }, [_c('div', [_c('div', {\n\t    staticClass: \"hero\"\n\t  }, [_c('div', {\n\t    staticClass: \"hero-container\"\n\t  }, [_c('div', {\n\t    staticClass: \"hero-name\"\n\t  }, [_c('h1', {\n\t    staticClass: \"Animated_slidedown\",\n\t    style: ({\n\t      transform: 'translate3d(' + _vm.tx + 'px,' + 0 + 'px,' + _vm.tz + 'px)'\n\t    })\n\t  }, [_vm._v(\"Haowen\"), _c('br'), _vm._v(\"Zheng\")]), _vm._v(\" \"), _c('h2', {\n\t    staticClass: \"Animated_slideleft\",\n\t    style: ({\n\t      transform: 'translate3d(' + _vm.tx / 2 + 'px,' + 0 + 'px,' + _vm.tz + 'px)'\n\t    })\n\t  }, [_vm._v(\"郑皓文\")]), _vm._v(\" \"), _c('h2', {\n\t    staticClass: \"Animated_slideleft\",\n\t    style: ({\n\t      transform: 'translate3d(' + _vm.tx / 3 + 'px,' + 0 + 'px,' + _vm.tz + 'px)'\n\t    })\n\t  }, [_vm._v(\"中国 💝 杭州\")])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"hero-avatar Animated_slideright\"\n\t  }, [_c('div', {\n\t    staticClass: \"hero-avatar-img\"\n\t  }), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"hero-flower\",\n\t    style: ({\n\t      transform: 'translate3d(' + -_vm.tx / 2 + 'px,' + _vm.ty + 'px,' + _vm.tz + 'px)'\n\t    })\n\t  }), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"hero-tree\",\n\t    style: ({\n\t      transform: 'translate3d(' + _vm.tx + 'px,' + _vm.ty + 'px,' + _vm.tz + 'px)'\n\t    })\n\t  })])])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"content\"\n\t  }, [_c('h2', [_vm._v(\"很高兴认识你\")]), _vm._v(\" \"), _c('p', [_vm._v(\"我叫郑皓文, 我是一名前端开发工程师, 我蛮喜欢新的技术, 设计并且搭建酷炫的项目。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"做出一个改变世界的产品是我的人生理想。\")])])])])\n\t},staticRenderFns: []}\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/5.c9b6fa9b8ca404928b60.js","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".Animated_slidedown{animation:slide_down 1s}@keyframes slide_down{0%{position:relative;opacity:0;top:-100px}to{position:relative;opacity:1;top:0}}.Animated_slideleft{animation:slide_left 1s}@keyframes slide_left{0%{position:relative;opacity:0;left:-100px}to{position:relative;opacity:1;left:0}}.Animated_slideright{animation:slide_right 1s}@keyframes slide_right{0%{position:relative;opacity:0;right:-100px}to{position:relative;opacity:1;right:0}}\", \"\", {\"version\":3,\"sources\":[\"/./src/assets/styles/animation.css\"],\"names\":[],\"mappings\":\"AAAA,oBACG,uBAAyB,CAC1B,AACD,sBACC,GACE,kBAAmB,AACnB,UAAW,AACX,UAAY,CACb,AACD,GACE,kBAAmB,AACnB,UAAW,AACX,KAAO,CACR,CACF,AACD,oBACE,uBAAyB,CAC1B,AACD,sBACE,GACE,kBAAmB,AACnB,UAAW,AACX,WAAa,CACd,AACD,GACE,kBAAmB,AACnB,UAAW,AACX,MAAQ,CACT,CACF,AACD,qBACE,wBAA0B,CAC3B,AACD,uBACE,GACE,kBAAmB,AACnB,UAAW,AACX,YAAc,CACf,AACD,GACE,kBAAmB,AACnB,UAAW,AACX,OAAS,CACV,CACF\",\"file\":\"animation.css\",\"sourcesContent\":[\".Animated_slidedown {\\n   animation: slide_down 1s;\\n }\\n @keyframes slide_down {\\n  0% {\\n    position: relative;\\n    opacity: 0;\\n    top: -100px;\\n  }\\n  100% {\\n    position: relative;\\n    opacity: 1;\\n    top: 0;\\n  }\\n}\\n.Animated_slideleft {\\n  animation: slide_left 1s;\\n}\\n@keyframes slide_left {\\n  0% {\\n    position: relative;\\n    opacity: 0;\\n    left: -100px;\\n  }\\n  100% {\\n    position: relative;\\n    opacity: 1;\\n    left: 0;\\n  }\\n}\\n.Animated_slideright {\\n  animation: slide_right 1s;\\n}\\n@keyframes slide_right {\\n  0% {\\n    position: relative;\\n    opacity: 0;\\n    right: -100px;\\n  }\\n  100% {\\n    position: relative;\\n    opacity: 1;\\n    right: 0;\\n  }\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./src/assets/styles/animation.css\n// module id = 83\n// module chunks = 5 6","// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n/*jshint browser:true, devel:true */\n\n(function( expose ) {\n\n/**\n *  class Markdown\n *\n *  Markdown processing in Javascript done right. We have very particular views\n *  on what constitutes 'right' which include:\n *\n *  - produces well-formed HTML (this means that em and strong nesting is\n *    important)\n *\n *  - has an intermediate representation to allow processing of parsed data (We\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n *\n *  - is easily extensible to add new dialects without having to rewrite the\n *    entire parsing mechanics\n *\n *  - has a good test suite\n *\n *  This implementation fulfills all of these (except that the test suite could\n *  do with expanding to automatically run all the fixtures from other Markdown\n *  implementations.)\n *\n *  ##### Intermediate Representation\n *\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n *\n *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n **/\nvar Markdown = expose.Markdown = function(dialect) {\n  switch (typeof dialect) {\n    case \"undefined\":\n      this.dialect = Markdown.dialects.Gruber;\n      break;\n    case \"object\":\n      this.dialect = dialect;\n      break;\n    default:\n      if ( dialect in Markdown.dialects ) {\n        this.dialect = Markdown.dialects[dialect];\n      }\n      else {\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n      }\n      break;\n  }\n  this.em_state = [];\n  this.strong_state = [];\n  this.debug_indent = \"\";\n};\n\n/**\n *  parse( markdown, [dialect] ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n **/\nexpose.parse = function( source, dialect ) {\n  // dialect will default if undefined\n  var md = new Markdown( dialect );\n  return md.toTree( source );\n};\n\n/**\n *  toHTML( markdown, [dialect]  ) -> String\n *  toHTML( md_tree ) -> String\n *  - markdown (String): markdown string to parse\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Take markdown (either as a string or as a JsonML tree) and run it through\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n **/\nexpose.toHTML = function toHTML( source , dialect , options ) {\n  var input = expose.toHTMLTree( source , dialect , options );\n\n  return expose.renderJsonML( input );\n};\n\n/**\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\n *  toHTMLTree( md_tree ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n *  to this function, it is first parsed into a markdown tree by calling\n *  [[parse]].\n **/\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n  // convert string input to an MD tree\n  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\n  // Now convert the MD tree to an HTML tree\n\n  // remove references from the tree\n  var attrs = extract_attr( input ),\n      refs = {};\n\n  if ( attrs && attrs.references ) {\n    refs = attrs.references;\n  }\n\n  var html = convert_tree_to_html( input, refs , options );\n  merge_text_nodes( html );\n  return html;\n};\n\n// For Spidermonkey based engines\nfunction mk_block_toSource() {\n  return \"Markdown.mk_block( \" +\n          uneval(this.toString()) +\n          \", \" +\n          uneval(this.trailing) +\n          \", \" +\n          uneval(this.lineNumber) +\n          \" )\";\n}\n\n// node\nfunction mk_block_inspect() {\n  var util = require(\"util\");\n  return \"Markdown.mk_block( \" +\n          util.inspect(this.toString()) +\n          \", \" +\n          util.inspect(this.trailing) +\n          \", \" +\n          util.inspect(this.lineNumber) +\n          \" )\";\n\n}\n\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\n  // Be helpful for default case in tests.\n  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\n  var s = new String(block);\n  s.trailing = trail;\n  // To make it clear its not just a string\n  s.inspect = mk_block_inspect;\n  s.toSource = mk_block_toSource;\n\n  if ( line != undefined )\n    s.lineNumber = line;\n\n  return s;\n};\n\nfunction count_lines( str ) {\n  var n = 0, i = -1;\n  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n  return n;\n}\n\n// Internal - split source into rough blocks\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n  // [\\s\\S] matches _anything_ (newline or space)\n  // [^] is equivalent but doesn't work in IEs.\n  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n      blocks = [],\n      m;\n\n  var line_no = 1;\n\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n    // skip (but count) leading blank lines\n    line_no += count_lines( m[0] );\n    re.lastIndex = m[0].length;\n  }\n\n  while ( ( m = re.exec(input) ) !== null ) {\n    if (m[2] == \"\\n#\") {\n      m[2] = \"\\n\";\n      re.lastIndex--;\n    }\n    blocks.push( mk_block( m[1], m[2], line_no ) );\n    line_no += count_lines( m[0] );\n  }\n\n  return blocks;\n};\n\n/**\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n *  - block (String): the block to process\n *  - next (Array): the following blocks\n *\n * Process `block` and return an array of JsonML nodes representing `block`.\n *\n * It does this by asking each block level function in the dialect to process\n * the block until one can. Succesful handling is indicated by returning an\n * array (with zero or more JsonML nodes), failure by a false value.\n *\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\n * themselves as appropriate.\n *\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\n * can adjust `next` in place using shift/splice etc.\n *\n * If any of this default behaviour is not right for the dialect, you can\n * define a `__call__` method on the dialect that will get invoked to handle\n * the block processing.\n */\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\n  var cbs = this.dialect.block,\n      ord = cbs.__order__;\n\n  if ( \"__call__\" in cbs ) {\n    return cbs.__call__.call(this, block, next);\n  }\n\n  for ( var i = 0; i < ord.length; i++ ) {\n    //D:this.debug( \"Testing\", ord[i] );\n    var res = cbs[ ord[i] ].call( this, block, next );\n    if ( res ) {\n      //D:this.debug(\"  matched\");\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n        this.debug(ord[i], \"didn't return a proper array\");\n      //D:this.debug( \"\" );\n      return res;\n    }\n  }\n\n  // Uhoh! no match! Should we throw an error?\n  return [];\n};\n\nMarkdown.prototype.processInline = function processInline( block ) {\n  return this.dialect.inline.__call__.call( this, String( block ) );\n};\n\n/**\n *  Markdown#toTree( source ) -> JsonML\n *  - source (String): markdown source to parse\n *\n *  Parse `source` into a JsonML tree representing the markdown document.\n **/\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\n  // Make tree a member variable so its easier to mess with in extensions\n  var old_tree = this.tree;\n  try {\n    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\n    blocks:\n    while ( blocks.length ) {\n      var b = this.processBlock( blocks.shift(), blocks );\n\n      // Reference blocks and the like won't return any content\n      if ( !b.length ) continue blocks;\n\n      this.tree.push.apply( this.tree, b );\n    }\n    return this.tree;\n  }\n  finally {\n    if ( custom_root ) {\n      this.tree = old_tree;\n    }\n  }\n};\n\n// Noop by default\nMarkdown.prototype.debug = function () {\n  var args = Array.prototype.slice.call( arguments);\n  args.unshift(this.debug_indent);\n  if ( typeof print !== \"undefined\" )\n      print.apply( print, args );\n  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n      console.log.apply( null, args );\n}\n\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n  // Dont use /g regexps with this\n  var m,\n      b = block.valueOf();\n\n  while ( b.length && (m = re.exec(b) ) != null ) {\n    b = b.substr( m[0].length );\n    cb.call(this, m);\n  }\n  return b;\n};\n\n/**\n * Markdown.dialects\n *\n * Namespace of built-in dialects.\n **/\nMarkdown.dialects = {};\n\n/**\n * Markdown.dialects.Gruber\n *\n * The default dialect that follows the rules set out by John Gruber's\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\n * that script which in some places is not exactly what the syntax web page\n * says.\n **/\nMarkdown.dialects.Gruber = {\n  block: {\n    atxHeader: function atxHeader( block, next ) {\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var header = [ \"header\", { level: m[ 1 ].length } ];\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    setextHeader: function setextHeader( block, next ) {\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    code: function code( block, next ) {\n      // |    Foo\n      // |bar\n      // should be a code block followed by a paragraph. Fun\n      //\n      // There might also be adjacent code block to merge.\n\n      var ret = [],\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n          lines;\n\n      // 4 spaces + content\n      if ( !block.match( re ) ) return undefined;\n\n      block_search:\n      do {\n        // Now pull out the rest of the lines\n        var b = this.loop_re_over_block(\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\n        if ( b.length ) {\n          // Case alluded to in first comment. push it back on as a new block\n          next.unshift( mk_block(b, block.trailing) );\n          break block_search;\n        }\n        else if ( next.length ) {\n          // Check the next block - it might be code too\n          if ( !next[0].match( re ) ) break block_search;\n\n          // Pull how how many blanks lines follow - minus two to account for .join\n          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\n          block = next.shift();\n        }\n        else {\n          break block_search;\n        }\n      } while ( true );\n\n      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n    },\n\n    horizRule: function horizRule( block, next ) {\n      // this needs to find any hr in the block to handle abutting blocks\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\n      if ( !m ) {\n        return undefined;\n      }\n\n      var jsonml = [ [ \"hr\" ] ];\n\n      // if there's a leading abutting block, process it\n      if ( m[ 1 ] ) {\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n      }\n\n      // if there's a trailing abutting block, stick it into next\n      if ( m[ 3 ] ) {\n        next.unshift( mk_block( m[ 3 ] ) );\n      }\n\n      return jsonml;\n    },\n\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n    // between the items (and result in text just in the <li>) and loose lists,\n    // which have an empty line between list items, resulting in (one or more)\n    // paragraphs inside the <li>.\n    //\n    // There are all sorts weird edge cases about the original markdown.pl's\n    // handling of lists:\n    //\n    // * Nested lists are supposed to be indented by four chars per level. But\n    //   if they aren't, you can get a nested list by indenting by less than\n    //   four so long as the indent doesn't match an indent of an existing list\n    //   item in the 'nest stack'.\n    //\n    // * The type of the list (bullet or number) is controlled just by the\n    //    first item at the indent. Subsequent changes are ignored unless they\n    //    are for nested lists\n    //\n    lists: (function( ) {\n      // Use a closure to hide a few variables.\n      var any_list = \"[*+-]|\\\\d+\\\\.\",\n          bullet_list = /[*+-]/,\n          number_list = /\\d+\\./,\n          // Capture leading indent as it matters for determining nested lists.\n          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\n      // TODO: Cache this regexp for certain depths.\n      // Create a regexp suitable for matching an li for a given stack depth\n      function regex_for_depth( depth ) {\n\n        return new RegExp(\n          // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n          // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n        );\n      }\n      function expand_tab( input ) {\n        return input.replace( / {0,3}\\t/g, \"    \" );\n      }\n\n      // Add inline content `inline` to `li`. inline comes from processInline\n      // so is an array of content\n      function add(li, loose, inline, nl) {\n        if ( loose ) {\n          li.push( [ \"para\" ].concat(inline) );\n          return;\n        }\n        // Hmmm, should this be any block level element or just paras?\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n                   ? li[li.length -1]\n                   : li;\n\n        // If there is already some content in this list, add the new line in\n        if ( nl && li.length > 1 ) inline.unshift(nl);\n\n        for ( var i = 0; i < inline.length; i++ ) {\n          var what = inline[i],\n              is_str = typeof what == \"string\";\n          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n            add_to[ add_to.length-1 ] += what;\n          }\n          else {\n            add_to.push( what );\n          }\n        }\n      }\n\n      // contained means have an indent greater than the current one. On\n      // *every* line in the block\n      function get_contained_blocks( depth, blocks ) {\n\n        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n            ret = [];\n\n        while ( blocks.length > 0 ) {\n          if ( re.exec( blocks[0] ) ) {\n            var b = blocks.shift(),\n                // Now remove that indent\n                x = b.replace( replace, \"\");\n\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n          }\n          else {\n            break;\n          }\n        }\n        return ret;\n      }\n\n      // passed to stack.forEach to turn list items up the stack into paras\n      function paragraphify(s, i, stack) {\n        var list = s.list;\n        var last_li = list[list.length-1];\n\n        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n          return;\n        }\n        if ( i + 1 == stack.length ) {\n          // Last stack frame\n          // Keep the same array, but replace the contents\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n        }\n        else {\n          var sublist = last_li.pop();\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n        }\n      }\n\n      // The matcher function\n      return function( block, next ) {\n        var m = block.match( is_list_re );\n        if ( !m ) return undefined;\n\n        function make_list( m ) {\n          var list = bullet_list.exec( m[2] )\n                   ? [\"bulletlist\"]\n                   : [\"numberlist\"];\n\n          stack.push( { list: list, indent: m[1] } );\n          return list;\n        }\n\n\n        var stack = [], // Stack of lists for nesting.\n            list = make_list( m ),\n            last_li,\n            loose = false,\n            ret = [ stack[0].list ],\n            i;\n\n        // Loop to search over block looking for inner block elements and loose lists\n        loose_search:\n        while ( true ) {\n          // Split into lines preserving new lines at end of line\n          var lines = block.split( /(?=\\n)/ );\n\n          // We have to grab all lines for a li and call processInline on them\n          // once as there are some inline things that can span lines.\n          var li_accumulate = \"\";\n\n          // Loop over the lines in this block looking for tight lists.\n          tight_search:\n          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n            var nl = \"\",\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\n            // TODO: really should cache this\n            var line_re = regex_for_depth( stack.length );\n\n            m = l.match( line_re );\n            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\n            // We have a list item\n            if ( m[1] !== undefined ) {\n              // Process the previous list item, if any\n              if ( li_accumulate.length ) {\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\n                // Loose mode will have been dealt with. Reset it\n                loose = false;\n                li_accumulate = \"\";\n              }\n\n              m[1] = expand_tab( m[1] );\n              var wanted_depth = Math.floor(m[1].length/4)+1;\n              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n              if ( wanted_depth > stack.length ) {\n                // Deep enough for a nested list outright\n                //print ( \"new nested list\" );\n                list = make_list( m );\n                last_li.push( list );\n                last_li = list[1] = [ \"listitem\" ];\n              }\n              else {\n                // We aren't deep enough to be strictly a new level. This is\n                // where Md.pl goes nuts. If the indent matches a level in the\n                // stack, put it there, else put it one deeper then the\n                // wanted_depth deserves.\n                var found = false;\n                for ( i = 0; i < stack.length; i++ ) {\n                  if ( stack[ i ].indent != m[1] ) continue;\n                  list = stack[ i ].list;\n                  stack.splice( i+1, stack.length - (i+1) );\n                  found = true;\n                  break;\n                }\n\n                if (!found) {\n                  //print(\"not found. l:\", uneval(l));\n                  wanted_depth++;\n                  if ( wanted_depth <= stack.length ) {\n                    stack.splice(wanted_depth, stack.length - wanted_depth);\n                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n                    list = stack[wanted_depth-1].list;\n                    //print(\"list:\", uneval(list) );\n                  }\n                  else {\n                    //print (\"made new stack for messy indent\");\n                    list = make_list(m);\n                    last_li.push(list);\n                  }\n                }\n\n                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n                last_li = [ \"listitem\" ];\n                list.push(last_li);\n              } // end depth of shenegains\n              nl = \"\";\n            }\n\n            // Add content\n            if ( l.length > m[0].length ) {\n              li_accumulate += nl + l.substr( m[0].length );\n            }\n          } // tight_search\n\n          if ( li_accumulate.length ) {\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\n            // Loose mode will have been dealt with. Reset it\n            loose = false;\n            li_accumulate = \"\";\n          }\n\n          // Look at the next block - we might have a loose list. Or an extra\n          // paragraph for the current li\n          var contained = get_contained_blocks( stack.length, next );\n\n          // Deal with code blocks or properly nested lists\n          if ( contained.length > 0 ) {\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n          }\n\n          var next_block = next[0] && next[0].valueOf() || \"\";\n\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n            block = next.shift();\n\n            // Check for an HR following a list: features/lists/hr_abutting\n            var hr = this.dialect.block.horizRule( block, next );\n\n            if ( hr ) {\n              ret.push.apply(ret, hr);\n              break;\n            }\n\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            loose = true;\n            continue loose_search;\n          }\n          break;\n        } // loose_search\n\n        return ret;\n      };\n    })(),\n\n    blockquote: function blockquote( block, next ) {\n      if ( !block.match( /^>/m ) )\n        return undefined;\n\n      var jsonml = [];\n\n      // separate out the leading abutting block, if any. I.e. in this case:\n      //\n      //  a\n      //  > b\n      //\n      if ( block[ 0 ] != \">\" ) {\n        var lines = block.split( /\\n/ ),\n            prev = [],\n            line_no = block.lineNumber;\n\n        // keep shifting lines until you find a crotchet\n        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n            prev.push( lines.shift() );\n            line_no++;\n        }\n\n        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n        // reassemble new block of just block quotes!\n        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n      }\n\n\n      // if the next block is also a blockquote merge it in\n      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n        var b = next.shift();\n        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n      }\n\n      // Strip off the leading \"> \" and re-process as a block.\n      var input = block.replace( /^> ?/gm, \"\" ),\n          old_tree = this.tree,\n          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n          attr = extract_attr( processedBlock );\n\n      // If any link references were found get rid of them\n      if ( attr && attr.references ) {\n        delete attr.references;\n        // And then remove the attribute object if it's empty\n        if ( isEmpty( attr ) ) {\n          processedBlock.splice( 1, 1 );\n        }\n      }\n\n      jsonml.push( processedBlock );\n      return jsonml;\n    },\n\n    referenceDefn: function referenceDefn( block, next) {\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n      // interesting matches are [ , ref_id, url, , title, title ]\n\n      if ( !block.match(re) )\n        return undefined;\n\n      // make an attribute node if it doesn't exist\n      if ( !extract_attr( this.tree ) ) {\n        this.tree.splice( 1, 0, {} );\n      }\n\n      var attrs = extract_attr( this.tree );\n\n      // make a references hash if it doesn't exist\n      if ( attrs.references === undefined ) {\n        attrs.references = {};\n      }\n\n      var b = this.loop_re_over_block(re, block, function( m ) {\n\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\n          href: m[2]\n        };\n\n        if ( m[4] !== undefined )\n          ref.title = m[4];\n        else if ( m[5] !== undefined )\n          ref.title = m[5];\n\n      } );\n\n      if ( b.length )\n        next.unshift( mk_block( b, block.trailing ) );\n\n      return [];\n    },\n\n    para: function para( block, next ) {\n      // everything's a para!\n      return [ [\"para\"].concat( this.processInline( block ) ) ];\n    }\n  }\n};\n\nMarkdown.dialects.Gruber.inline = {\n\n    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n      var m,\n          res,\n          lastIndex = 0;\n\n      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\n      m = re.exec( text );\n      if (!m) {\n        // Just boring text\n        return [ text.length, text ];\n      }\n      else if ( m[1] ) {\n        // Some un-interesting text matched. Return that first\n        return [ m[1].length, m[1] ];\n      }\n\n      var res;\n      if ( m[2] in this.dialect.inline ) {\n        res = this.dialect.inline[ m[2] ].call(\n                  this,\n                  text.substr( m.index ), m, previous_nodes || [] );\n      }\n      // Default for now to make dev easier. just slurp special and output it.\n      res = res || [ m[2].length, m[2] ];\n      return res;\n    },\n\n    __call__: function inline( text, patterns ) {\n\n      var out = [],\n          res;\n\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n          out[ out.length-1 ] += x;\n        else\n          out.push(x);\n      }\n\n      while ( text.length > 0 ) {\n        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n        text = text.substr( res.shift() );\n        forEach(res, add )\n      }\n\n      return out;\n    },\n\n    // These characters are intersting elsewhere, so have rules for them so that\n    // chunks of plain text blocks don't include them\n    \"]\": function () {},\n    \"}\": function () {},\n\n    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\n    \"\\\\\": function escaped( text ) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if ( this.dialect.inline.__escape__.exec( text ) )\n        return [ 2, text.charAt( 1 ) ];\n      else\n        // Not an esacpe\n        return [ 1, \"\\\\\" ];\n    },\n\n    \"![\": function image( text ) {\n\n      // Unlike images, alt text is plain text only. no other elements are\n      // allowed in there\n\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { alt: m[1], href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        return [ m[0].length, [ \"img\", attrs ] ];\n      }\n\n      // ![Alt text][id]\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\n      if ( m ) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n      }\n\n      // Just consume the '!['\n      return [ 2, \"![\" ];\n    },\n\n    \"[\": function link( text ) {\n\n      var orig = String(text);\n      // Inline content is possible inside `link text`\n      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\n      // No closing ']' found. Just consume the [\n      if ( !res ) return [ 1, \"[\" ];\n\n      var consumed = 1 + res[ 0 ],\n          children = res[ 1 ],\n          link,\n          attrs;\n\n      // At this point the first [...] has been parsed. See what follows to find\n      // out which kind of link we are (reference or direct url)\n      text = text.substr( consumed );\n\n      // [link text](/path/to/img.jpg \"Optional title\")\n      //                 1            2       3         <--- captures\n      // This will capture up to the last paren in the block. We then pull\n      // back based on if there a matching ones in the url\n      //    ([here](/url/(test))\n      // The parens have to be balanced\n      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n      if ( m ) {\n        var url = m[1];\n        consumed += m[0].length;\n\n        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n          url = url.substring( 1, url.length - 1 );\n\n        // If there is a title we don't have to worry about parens in the url\n        if ( !m[3] ) {\n          var open_parens = 1; // One open that isn't in the capture\n          for ( var len = 0; len < url.length; len++ ) {\n            switch ( url[len] ) {\n            case \"(\":\n              open_parens++;\n              break;\n            case \")\":\n              if ( --open_parens == 0) {\n                consumed -= url.length - len;\n                url = url.substring(0, len);\n              }\n              break;\n            }\n          }\n        }\n\n        // Process escapes only\n        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\n        attrs = { href: url || \"\" };\n        if ( m[3] !== undefined)\n          attrs.title = m[3];\n\n        link = [ \"link\", attrs ].concat( children );\n        return [ consumed, link ];\n      }\n\n      // [Alt text][id]\n      // [Alt text] [id]\n      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\n      if ( m ) {\n\n        consumed += m[ 0 ].length;\n\n        // [links][] uses links as its reference\n        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\n        link = [ \"link_ref\", attrs ].concat( children );\n\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n        return [ consumed, link ];\n      }\n\n      // [id]\n      // Only if id is plain (no formatting.)\n      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\n        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n        link = [ \"link_ref\", attrs, children[0] ];\n        return [ consumed, link ];\n      }\n\n      // Just consume the \"[\"\n      return [ 1, \"[\" ];\n    },\n\n\n    \"<\": function autoLink( text ) {\n      var m;\n\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n        if ( m[3] ) {\n          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\n        }\n        else if ( m[2] == \"mailto\" ) {\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n        }\n        else\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n      }\n\n      return [ 1, \"<\" ];\n    },\n\n    \"`\": function inlineCode( text ) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\n      if ( m && m[2] )\n        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n      else {\n        // TODO: No matching end code found - warn!\n        return [ 1, \"`\" ];\n      }\n    },\n\n    \"  \\n\": function lineBreak( text ) {\n      return [ 3, [ \"linebreak\" ] ];\n    }\n\n};\n\n// Meta Helper/generator method for em and strong handling\nfunction strong_em( tag, md ) {\n\n  var state_slot = tag + \"_state\",\n      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n  function CloseTag(len) {\n    this.len_after = len;\n    this.name = \"close_\" + md;\n  }\n\n  return function ( text, orig_match ) {\n\n    if ( this[state_slot][0] == md ) {\n      // Most recent em is of this type\n      //D:this.debug(\"closing\", md);\n      this[state_slot].shift();\n\n      // \"Consume\" everything to go back to the recrusion in the else-block below\n      return[ text.length, new CloseTag(text.length-md.length) ];\n    }\n    else {\n      // Store a clone of the em/strong states\n      var other = this[other_slot].slice(),\n          state = this[state_slot].slice();\n\n      this[state_slot].unshift(md);\n\n      //D:this.debug_indent += \"  \";\n\n      // Recurse\n      var res = this.processInline( text.substr( md.length ) );\n      //D:this.debug_indent = this.debug_indent.substr(2);\n\n      var last = res[res.length - 1];\n\n      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n      var check = this[state_slot].shift();\n      if ( last instanceof CloseTag ) {\n        res.pop();\n        // We matched! Huzzah.\n        var consumed = text.length - last.len_after;\n        return [ consumed, [ tag ].concat(res) ];\n      }\n      else {\n        // Restore the state of the other kind. We might have mistakenly closed it.\n        this[other_slot] = other;\n        this[state_slot] = state;\n\n        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n        return [ md.length, md ];\n      }\n    }\n  }; // End returned function\n}\n\nMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\nMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\nMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\nMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\n\n// Build default order from insertion order.\nMarkdown.buildBlockOrder = function(d) {\n  var ord = [];\n  for ( var i in d ) {\n    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n    ord.push( i );\n  }\n  d.__order__ = ord;\n};\n\n// Build patterns for inline matcher\nMarkdown.buildInlinePatterns = function(d) {\n  var patterns = [];\n\n  for ( var i in d ) {\n    // __foo__ is reserved and not a pattern\n    if ( i.match( /^__.*__$/) ) continue;\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n             .replace( /\\n/, \"\\\\n\" );\n    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n  }\n\n  patterns = patterns.join(\"|\");\n  d.__patterns__ = patterns;\n  //print(\"patterns:\", uneval( patterns ) );\n\n  var fn = d.__call__;\n  d.__call__ = function(text, pattern) {\n    if ( pattern != undefined ) {\n      return fn.call(this, text, pattern);\n    }\n    else\n    {\n      return fn.call(this, text, patterns);\n    }\n  };\n};\n\nMarkdown.DialectHelpers = {};\nMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n  var consumed = 0,\n      nodes = [];\n\n  while ( true ) {\n    if ( text.charAt( consumed ) == want ) {\n      // Found the character we were looking for\n      consumed++;\n      return [ consumed, nodes ];\n    }\n\n    if ( consumed >= text.length ) {\n      // No closing char found. Abort.\n      return null;\n    }\n\n    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n    consumed += res[ 0 ];\n    // Add any returned nodes.\n    nodes.push.apply( nodes, res.slice( 1 ) );\n  }\n}\n\n// Helper function to make sub-classing a dialect easier\nMarkdown.subclassDialect = function( d ) {\n  function Block() {}\n  Block.prototype = d.block;\n  function Inline() {}\n  Inline.prototype = d.inline;\n\n  return { block: new Block(), inline: new Inline() };\n};\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\nMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n  var meta = split_meta_hash( meta_string ),\n      attr = {};\n\n  for ( var i = 0; i < meta.length; ++i ) {\n    // id: #foo\n    if ( /^#/.test( meta[ i ] ) ) {\n      attr.id = meta[ i ].substring( 1 );\n    }\n    // class: .foo\n    else if ( /^\\./.test( meta[ i ] ) ) {\n      // if class already exists, append the new one\n      if ( attr[\"class\"] ) {\n        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n      }\n      else {\n        attr[\"class\"] = meta[ i ].substring( 1 );\n      }\n    }\n    // attribute: foo=bar\n    else if ( /\\=/.test( meta[ i ] ) ) {\n      var s = meta[ i ].split( /\\=/ );\n      attr[ s[ 0 ] ] = s[ 1 ];\n    }\n  }\n\n  return attr;\n}\n\nfunction split_meta_hash( meta_string ) {\n  var meta = meta_string.split( \"\" ),\n      parts = [ \"\" ],\n      in_quotes = false;\n\n  while ( meta.length ) {\n    var letter = meta.shift();\n    switch ( letter ) {\n      case \" \" :\n        // if we're in a quoted section, keep it\n        if ( in_quotes ) {\n          parts[ parts.length - 1 ] += letter;\n        }\n        // otherwise make a new part\n        else {\n          parts.push( \"\" );\n        }\n        break;\n      case \"'\" :\n      case '\"' :\n        // reverse the quotes and move straight on\n        in_quotes = !in_quotes;\n        break;\n      case \"\\\\\" :\n        // shift off the next letter to be used straight away.\n        // it was escaped so we'll keep it whatever it is\n        letter = meta.shift();\n      default :\n        parts[ parts.length - 1 ] += letter;\n        break;\n    }\n  }\n\n  return parts;\n}\n\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n  // we're only interested in the first block\n  if ( block.lineNumber > 1 ) return undefined;\n\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\n  // make an attribute node if it doesn't exist\n  if ( !extract_attr( this.tree ) ) {\n    this.tree.splice( 1, 0, {} );\n  }\n\n  var pairs = block.split( /\\n/ );\n  for ( p in pairs ) {\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n        key = m[ 1 ].toLowerCase(),\n        value = m[ 2 ];\n\n    this.tree[ 1 ][ key ] = value;\n  }\n\n  // document_meta produces no content!\n  return [];\n};\n\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n  // check if the last line of the block is an meta hash\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n  if ( !m ) return undefined;\n\n  // process the meta hash\n  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\n  var hash;\n\n  // if we matched ^ then we need to apply meta to the previous block\n  if ( m[ 1 ] === \"\" ) {\n    var node = this.tree[ this.tree.length - 1 ];\n    hash = extract_attr( node );\n\n    // if the node is a string (rather than JsonML), bail\n    if ( typeof node === \"string\" ) return undefined;\n\n    // create the attribute hash if it doesn't exist\n    if ( !hash ) {\n      hash = {};\n      node.splice( 1, 0, hash );\n    }\n\n    // add the attributes in\n    for ( a in attr ) {\n      hash[ a ] = attr[ a ];\n    }\n\n    // return nothing so the meta hash is removed\n    return [];\n  }\n\n  // pull the meta hash off the block and process what's left\n  var b = block.replace( /\\n.*$/, \"\" ),\n      result = this.processBlock( b, [] );\n\n  // get or make the attributes hash\n  hash = extract_attr( result[ 0 ] );\n  if ( !hash ) {\n    hash = {};\n    result[ 0 ].splice( 1, 0, hash );\n  }\n\n  // attach the attributes to the block\n  for ( a in attr ) {\n    hash[ a ] = attr[ a ];\n  }\n\n  return result;\n};\n\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n  // one or more terms followed by one or more definitions, in a single block\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n      list = [ \"dl\" ],\n      i, m;\n\n  // see if we're dealing with a tight or loose block\n  if ( ( m = block.match( tight ) ) ) {\n    // pull subsequent tight DL blocks out of `next`\n    var blocks = [ block ];\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\n      blocks.push( next.shift() );\n    }\n\n    for ( var b = 0; b < blocks.length; ++b ) {\n      var m = blocks[ b ].match( tight ),\n          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n          defns = m[ 2 ].split( /\\n:\\s+/ );\n\n      // print( uneval( m ) );\n\n      for ( i = 0; i < terms.length; ++i ) {\n        list.push( [ \"dt\", terms[ i ] ] );\n      }\n\n      for ( i = 0; i < defns.length; ++i ) {\n        // run inline processing over the definition\n        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n      }\n    }\n  }\n  else {\n    return undefined;\n  }\n\n  return [ list ];\n};\n\n// splits on unescaped instances of @ch. If @ch is not a character the result\n// can be unpredictable\n\nMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\n    var _split_on_unescaped = function(s, ch) {\n        ch = ch || '\\\\s';\n        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n        var res = [ ],\n            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n            m;\n        while(m = s.match(r)) {\n            res.push(m[1]);\n            s = m[2];\n        }\n        res.push(s);\n        return res;\n    }\n\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        // find at least an unescaped pipe in each line\n        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        i, m;\n    if (m = block.match(leading_pipe)) {\n        // remove leading pipes in contents\n        // (header and horizontal rule already have the leading pipe left out)\n        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n    } else if (! ( m = block.match(no_leading_pipe))) {\n        return undefined;\n    }\n\n    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\n    // remove trailing pipes, then split on pipes\n    // (no escaped pipes are allowed in horizontal rule)\n    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\n    // process alignment\n    var html_attrs = [ ];\n    forEach (m[2], function (s) {\n        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n        else                              html_attrs.push({});\n    });\n\n    // now for the header, avoid escaped pipes\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n    for (i = 0; i < m[1].length; i++) {\n        table[1][1].push(['th', html_attrs[i] || {}].concat(\n            this.processInline(m[1][i].trim())));\n    }\n\n    // now for body contents\n    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n        var html_row = ['tr'];\n        row = _split_on_unescaped(row, '|');\n        for (i = 0; i < row.length; i++) {\n            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n        }\n        table[2].push(html_row);\n    }, this);\n\n    return [table];\n}\n\nMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n  if ( !out.length ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // get the preceeding element\n  var before = out[ out.length - 1 ];\n\n  if ( typeof before === \"string\" ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // match a meta hash\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\n  // no match, false alarm\n  if ( !m ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // attach the attributes to the preceeding element\n  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n      attr = extract_attr( before );\n\n  if ( !attr ) {\n    attr = {};\n    before.splice( 1, 0, attr );\n  }\n\n  for ( var k in meta ) {\n    attr[ k ] = meta[ k ];\n  }\n\n  // cut out the string and replace it with nothing\n  return [ m[ 0 ].length, \"\" ];\n};\n\nMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\nvar isArray = Array.isArray || function(obj) {\n  return Object.prototype.toString.call(obj) == \"[object Array]\";\n};\n\nvar forEach;\n// Don't mess with Array.prototype. Its not friendly\nif ( Array.prototype.forEach ) {\n  forEach = function( arr, cb, thisp ) {\n    return arr.forEach( cb, thisp );\n  };\n}\nelse {\n  forEach = function(arr, cb, thisp) {\n    for (var i = 0; i < arr.length; i++) {\n      cb.call(thisp || arr, arr[i], i, arr);\n    }\n  }\n}\n\nvar isEmpty = function( obj ) {\n  for ( var key in obj ) {\n    if ( hasOwnProperty.call( obj, key ) ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction extract_attr( jsonml ) {\n  return isArray(jsonml)\n      && jsonml.length > 1\n      && typeof jsonml[ 1 ] === \"object\"\n      && !( isArray(jsonml[ 1 ]) )\n      ? jsonml[ 1 ]\n      : undefined;\n}\n\n\n\n/**\n *  renderJsonML( jsonml[, options] ) -> String\n *  - jsonml (Array): JsonML array to render to XML\n *  - options (Object): options\n *\n *  Converts the given JsonML into well-formed XML.\n *\n *  The options currently understood are:\n *\n *  - root (Boolean): wether or not the root node should be included in the\n *    output, or just its children. The default `false` is to not include the\n *    root itself.\n */\nexpose.renderJsonML = function( jsonml, options ) {\n  options = options || {};\n  // include the root element in the rendered output?\n  options.root = options.root || false;\n\n  var content = [];\n\n  if ( options.root ) {\n    content.push( render_tree( jsonml ) );\n  }\n  else {\n    jsonml.shift(); // get rid of the tag\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n      jsonml.shift(); // get rid of the attributes\n    }\n\n    while ( jsonml.length ) {\n      content.push( render_tree( jsonml.shift() ) );\n    }\n  }\n\n  return content.join( \"\\n\\n\" );\n};\n\nfunction escapeHTML( text ) {\n  return text.replace( /&/g, \"&amp;\" )\n             .replace( /</g, \"&lt;\" )\n             .replace( />/g, \"&gt;\" )\n             .replace( /\"/g, \"&quot;\" )\n             .replace( /'/g, \"&#39;\" );\n}\n\nfunction render_tree( jsonml ) {\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return escapeHTML( jsonml );\n  }\n\n  var tag = jsonml.shift(),\n      attributes = {},\n      content = [];\n\n  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( render_tree( jsonml.shift() ) );\n  }\n\n  var tag_attrs = \"\";\n  for ( var a in attributes ) {\n    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n    return \"<\"+ tag + tag_attrs + \"/>\";\n  }\n  else {\n    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n  }\n}\n\nfunction convert_tree_to_html( tree, references, options ) {\n  var i;\n  options = options || {};\n\n  // shallow clone\n  var jsonml = tree.slice( 0 );\n\n  if ( typeof options.preprocessTreeNode === \"function\" ) {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n  }\n\n  // Clone attributes if they exist\n  var attrs = extract_attr( jsonml );\n  if ( attrs ) {\n    jsonml[ 1 ] = {};\n    for ( i in attrs ) {\n      jsonml[ 1 ][ i ] = attrs[ i ];\n    }\n    attrs = jsonml[ 1 ];\n  }\n\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return jsonml;\n  }\n\n  // convert this node\n  switch ( jsonml[ 0 ] ) {\n    case \"header\":\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n      delete jsonml[ 1 ].level;\n      break;\n    case \"bulletlist\":\n      jsonml[ 0 ] = \"ul\";\n      break;\n    case \"numberlist\":\n      jsonml[ 0 ] = \"ol\";\n      break;\n    case \"listitem\":\n      jsonml[ 0 ] = \"li\";\n      break;\n    case \"para\":\n      jsonml[ 0 ] = \"p\";\n      break;\n    case \"markdown\":\n      jsonml[ 0 ] = \"html\";\n      if ( attrs ) delete attrs.references;\n      break;\n    case \"code_block\":\n      jsonml[ 0 ] = \"pre\";\n      i = attrs ? 2 : 1;\n      var code = [ \"code\" ];\n      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n      jsonml[ i ] = code;\n      break;\n    case \"inlinecode\":\n      jsonml[ 0 ] = \"code\";\n      break;\n    case \"img\":\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\n      delete jsonml[ 1 ].href;\n      break;\n    case \"linebreak\":\n      jsonml[ 0 ] = \"br\";\n    break;\n    case \"link\":\n      jsonml[ 0 ] = \"a\";\n      break;\n    case \"link_ref\":\n      jsonml[ 0 ] = \"a\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.href = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n    case \"img_ref\":\n      jsonml[ 0 ] = \"img\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.src = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n  }\n\n  // convert all the children\n  i = 1;\n\n  // deal with the attribute node, if it exists\n  if ( attrs ) {\n    // if there are keys, skip over it\n    for ( var key in jsonml[ 1 ] ) {\n        i = 2;\n        break;\n    }\n    // if there aren't, remove it\n    if ( i === 1 ) {\n      jsonml.splice( i, 1 );\n    }\n  }\n\n  for ( ; i < jsonml.length; ++i ) {\n    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n  }\n\n  return jsonml;\n}\n\n\n// merges adjacent text nodes into a single node\nfunction merge_text_nodes( jsonml ) {\n  // skip the tag name and attribute hash\n  var i = extract_attr( jsonml ) ? 2 : 1;\n\n  while ( i < jsonml.length ) {\n    // if it's a string check the next item too\n    if ( typeof jsonml[ i ] === \"string\" ) {\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n        // merge the second string into the first and remove it\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n      }\n      else {\n        ++i;\n      }\n    }\n    // if it's not a string recurse\n    else {\n      merge_text_nodes( jsonml[ i ] );\n      ++i;\n    }\n  }\n}\n\n} )( (function() {\n  if ( typeof exports === \"undefined\" ) {\n    window.markdown = {};\n    return window.markdown;\n  }\n  else {\n    return exports;\n  }\n} )() );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/markdown/lib/markdown.js\n// module id = 87\n// module chunks = 0 5","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 88\n// module chunks = 0 5","module.exports = __webpack_public_path__ + \"static/img/me-1.446d511.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/me-1.jpg\n// module id = 89\n// module chunks = 5 6","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/~/inherits/inherits_browser.js\n// module id = 90\n// module chunks = 0 5","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 91\n// module chunks = 0 5","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 92\n// module chunks = 0 5","<template lang=\"html\">\n  <transition name=\"fade-contact\">\n    <div>\n      <div class=\"hero\">\n        <div class=\"hero-container\">\n          <div class=\"hero-name\">\n            <h1 class=\"Animated_slidedown\" :style=\"{transform: 'translate3d(' + tx + 'px,' + 0 + 'px,' + tz + 'px)'}\">Haowen<br>Zheng</h1>\n            <h2 class=\"Animated_slideleft\" :style=\"{transform: 'translate3d(' + tx / 2 + 'px,' + 0 + 'px,' + tz + 'px)'}\">郑皓文</h2>\n            <h2 class=\"Animated_slideleft\" :style=\"{transform: 'translate3d(' + tx / 3 + 'px,' + 0 + 'px,' + tz + 'px)'}\">中国 💝 杭州</h2>\n          </div>\n          <div class=\"hero-avatar Animated_slideright\">\n            <div class=\"hero-avatar-img\"></div>\n            <div class=\"hero-flower\" :style=\"{transform: 'translate3d('+ -tx / 2 + 'px,' + ty + 'px,' + tz + 'px)'}\"></div>\n            <div class=\"hero-tree\" :style=\"{transform: 'translate3d(' + tx + 'px,' + ty + 'px,' + tz + 'px)'}\"></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"content\">\n        <h2>很高兴认识你</h2>\n        <p>我叫郑皓文, 我是一名前端开发工程师, 我蛮喜欢新的技术, 设计并且搭建酷炫的项目。</p>\n        <p>做出一个改变世界的产品是我的人生理想。</p>\n      </div>\n      <!-- <div class=\"content\" v-html=\"content\" id=\"mdContainer\"></div> -->\n      <!-- <div class=\"progressBar-container\">\n        <progress-bar :progressClass=\"progressClass\" :progressList=\"progressList\"></progress-bar>\n      </div> -->\n    </div>\n  </transition>\n</template>\n\n<script>\n// import particles from 'particles.js'\n// import particlesConfig from './../lib/particlesConfig.js'\nimport Markdown from 'markdown/lib/markdown.js'\nimport progressBar from 'packages/progressBar'\nexport default {\n  data () {\n    return {\n      tx: 0,\n      ty: 0,\n      tz: 0,\n      progressClass: ProgressClass,\n      progressList: ProgressList,\n      show: -1\n    }\n  },\n  computed: {},\n  mounted () {\n    this.query()\n    this.watchScroll()\n  },\n  methods: {\n    query () {\n      this.$http.get('/static/md/me.md')\n          .then((res) => {\n            this.praseMd(res.data)\n          })\n          .catch((err) => {\n            console.log(err)\n          })\n    },\n    praseMd (data) {\n      this.content = Markdown.toHTML(data)\n    },\n    watchScroll () {\n      window.addEventListener('scroll', this.setAnimation)\n    },\n    setAnimation () {\n      this.tx = -window.scrollY / 4\n      this.ty = -window.scrollY / 4\n      this.tz = -window.scrollY / 4\n    }\n  },\n  beforeDestroy () {\n    window.removeEventListener('scroll', this.setAnimation)\n  },\n  components: {\n    progressBar,\n    Markdown\n  }\n}\nconst ProgressClass = {\n  container: {\n    width: '500px'\n  }\n}\nconst ProgressList = [{\n  label: 'HTML',\n  value: '80'\n}, {\n  label: 'CSS',\n  value: '70'\n}, {\n  label: 'Javascript',\n  value: '60'\n}]\n</script>\n\n<style lang=\"css\" scoped>\n@import url(\"./../assets/styles/animation.css\");\n.content p {\n  margin: 20px 0;\n}\n.content {\n  max-width: 50rem;\n  margin: 5rem auto;\n  text-align: center;\n}\n.hero-tree {\n  position: absolute;\n  top: -50px;\n  left: -50px;\n  width: 80px;\n  height: 80px;\n  border: 30px solid #ddf6ff;\n  z-index: -1;\n}\n.hero-flower {\n  position: absolute;\n  bottom: -50px;\n  right: -50px;\n  width: 50px;\n  height: 50px;\n  border-radius: 100px;\n  border: 30px solid #d3e0f3;\n}\n.hero {\n  margin-top: 70px;\n  padding: 130px 0;\n  background-color: #f9f9f9;\n}\n.hero-container {\n  position: relative;\n  max-width: 50rem;\n  margin: 0 auto;\n  text-align: right;\n  line-height: 0;\n}\n.hero-name h1 {\n  font-size: 5rem;\n  color: #b4e3f4;\n  line-height: .9;\n  font-weight: 400;\n  text-transform: uppercase;\n}\n.hero-name h2 {\n  font-size: 1.2rem;\n  font-weight: 200;\n  color: #222;\n  line-height: 1.3;\n}\n.hero-name {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  text-align: left;\n  display: inline-block;\n  line-height: 1.2;\n}\n.progressBar-container {\n  margin: 50px auto;\n}\n.contact-layout {\n  position: absolute;\n  width: 100%;\n  margin: 0 auto;\n}\n.hero-avatar {\n  position: relative;\n  display: inline-block;\n  z-index: 2;\n}\n.hero-avatar-img {\n  width: 300px;\n  height: 300px;\n  background-color: #f3f3f3;\n  background-image: url('./../assets/images/me-1.jpg');\n  background-size: cover;\n  background-position: center;\n  line-height: 0;\n  box-shadow: 0 0 6rem rgba(0,0,0,.3);\n}\n.contact-item-text {\n  font-size: 15px;\n  color: #000;\n  font-weight: 400;\n}\n/*動畫*/\n.fade-item-enter-active, .fade-item-leave-active {\n  transition: all .5s ease-out;\n  opacity: 1;\n}\n.fade-item-enter, .fade-item-leave-active {\n  opacity: 0;\n}\n#particlesJs {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n  /*background-image: url('');*/\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: 50% 50%;\n  overflow: hidden;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// Me.vue?87603f02","<template lang=\"html\">\n  <div class=\"\">\n    <div :style=\"progressClass.container\" class=\"progress-container\" v-for=\"item in progressList\">\n      <div class=\"progress-label\">\n        {{item.label}}\n      </div>\n      <div :style=\"[progressClass.inner, {width: item.value + '%'}]\" class=\"progress-inner\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'progress-bar',\n\n  props: {\n    progressClass: Object,\n    progressList: Array\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.progress-label {\n  position: absolute;\n  left: -10px;\n  top: 1px;\n  transform: translate(-100%, -50%);\n  line-height: 0;\n  margin-right: 10px;\n}\n.progress-container {\n  margin: 20px auto;\n  position: relative;\n  height: 3px;\n  background-color: #d4d4d4;\n}\n.progress-inner {\n  position: absolute;\n  width: 50%;\n  height: 100%;\n  background-color: #000;\n  animation: progress 1s;\n}\n@keyframes progress {\n  0% {\n    width: 0;\n    opacity: 0;\n  }\n  100% {\n    width: 1;\n    opacity: 1;\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// progressBar.vue?d82e188c","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".progress-label[data-v-73a04881]{position:absolute;left:-10px;top:1px;transform:translate(-100%,-50%);line-height:0;margin-right:10px}.progress-container[data-v-73a04881]{margin:20px auto;position:relative;height:3px;background-color:#d4d4d4}.progress-inner[data-v-73a04881]{position:absolute;width:50%;height:100%;background-color:#000;animation:progress 1s}@keyframes progress{0%{width:0;opacity:0}to{width:1;opacity:1}}\", \"\", {\"version\":3,\"sources\":[\"/./src/packages/progressBar.vue\"],\"names\":[],\"mappings\":\"AACA,iCACE,kBAAmB,AACnB,WAAY,AACZ,QAAS,AACT,gCAAkC,AAClC,cAAe,AACf,iBAAmB,CACpB,AACD,qCACE,iBAAkB,AAClB,kBAAmB,AACnB,WAAY,AACZ,wBAA0B,CAC3B,AACD,iCACE,kBAAmB,AACnB,UAAW,AACX,YAAa,AACb,sBAAuB,AACvB,qBAAuB,CACxB,AACD,oBACA,GACI,QAAS,AACT,SAAW,CACd,AACD,GACI,QAAS,AACT,SAAW,CACd,CACA\",\"file\":\"progressBar.vue\",\"sourcesContent\":[\"\\n.progress-label[data-v-73a04881] {\\n  position: absolute;\\n  left: -10px;\\n  top: 1px;\\n  transform: translate(-100%, -50%);\\n  line-height: 0;\\n  margin-right: 10px;\\n}\\n.progress-container[data-v-73a04881] {\\n  margin: 20px auto;\\n  position: relative;\\n  height: 3px;\\n  background-color: #d4d4d4;\\n}\\n.progress-inner[data-v-73a04881] {\\n  position: absolute;\\n  width: 50%;\\n  height: 100%;\\n  background-color: #000;\\n  animation: progress 1s;\\n}\\n@keyframes progress {\\n0% {\\n    width: 0;\\n    opacity: 0;\\n}\\n100% {\\n    width: 1;\\n    opacity: 1;\\n}\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-73a04881&scoped=true!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/packages/progressBar.vue\n// module id = 189\n// module chunks = 5","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\nexports.i(require(\"-!./../../node_modules/css-loader/index.js?sourceMap!./../assets/styles/animation.css\"), \"\");\n\n// module\nexports.push([module.id, \".content p[data-v-ca40f4b8]{margin:20px 0}.content[data-v-ca40f4b8]{max-width:50rem;margin:5rem auto;text-align:center}.hero-tree[data-v-ca40f4b8]{position:absolute;top:-50px;left:-50px;width:80px;height:80px;border:30px solid #ddf6ff;z-index:-1}.hero-flower[data-v-ca40f4b8]{position:absolute;bottom:-50px;right:-50px;width:50px;height:50px;border-radius:100px;border:30px solid #d3e0f3}.hero[data-v-ca40f4b8]{margin-top:70px;padding:130px 0;background-color:#f9f9f9}.hero-container[data-v-ca40f4b8]{position:relative;max-width:50rem;margin:0 auto;text-align:right;line-height:0}.hero-name h1[data-v-ca40f4b8]{font-size:5rem;color:#b4e3f4;line-height:.9;font-weight:400;text-transform:uppercase}.hero-name h2[data-v-ca40f4b8]{font-size:1.2rem;font-weight:200;color:#222;line-height:1.3}.hero-name[data-v-ca40f4b8]{position:absolute;left:0;bottom:0;text-align:left;display:inline-block;line-height:1.2}.progressBar-container[data-v-ca40f4b8]{margin:50px auto}.contact-layout[data-v-ca40f4b8]{position:absolute;width:100%;margin:0 auto}.hero-avatar[data-v-ca40f4b8]{position:relative;display:inline-block;z-index:2}.hero-avatar-img[data-v-ca40f4b8]{width:300px;height:300px;background-color:#f3f3f3;background-image:url(\" + require(\"./../assets/images/me-1.jpg\") + \");background-size:cover;background-position:50%;line-height:0;box-shadow:0 0 6rem rgba(0,0,0,.3)}.contact-item-text[data-v-ca40f4b8]{font-size:15px;color:#000;font-weight:400}.fade-item-enter-active[data-v-ca40f4b8],.fade-item-leave-active[data-v-ca40f4b8]{transition:all .5s ease-out;opacity:1}.fade-item-enter[data-v-ca40f4b8],.fade-item-leave-active[data-v-ca40f4b8]{opacity:0}#particlesJs[data-v-ca40f4b8]{position:absolute;width:100%;height:100%;background-color:#fff;background-repeat:no-repeat;background-size:cover;background-position:50% 50%;overflow:hidden}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/Me.vue\"],\"names\":[],\"mappings\":\"AAEA,4BACE,aAAe,CAChB,AACD,0BACE,gBAAiB,AACjB,iBAAkB,AAClB,iBAAmB,CACpB,AACD,4BACE,kBAAmB,AACnB,UAAW,AACX,WAAY,AACZ,WAAY,AACZ,YAAa,AACb,0BAA2B,AAC3B,UAAY,CACb,AACD,8BACE,kBAAmB,AACnB,aAAc,AACd,YAAa,AACb,WAAY,AACZ,YAAa,AACb,oBAAqB,AACrB,yBAA2B,CAC5B,AACD,uBACE,gBAAiB,AACjB,gBAAiB,AACjB,wBAA0B,CAC3B,AACD,iCACE,kBAAmB,AACnB,gBAAiB,AACjB,cAAe,AACf,iBAAkB,AAClB,aAAe,CAChB,AACD,+BACE,eAAgB,AAChB,cAAe,AACf,eAAgB,AAChB,gBAAiB,AACjB,wBAA0B,CAC3B,AACD,+BACE,iBAAkB,AAClB,gBAAiB,AACjB,WAAY,AACZ,eAAiB,CAClB,AACD,4BACE,kBAAmB,AACnB,OAAQ,AACR,SAAU,AACV,gBAAiB,AACjB,qBAAsB,AACtB,eAAiB,CAClB,AACD,wCACE,gBAAkB,CACnB,AACD,iCACE,kBAAmB,AACnB,WAAY,AACZ,aAAe,CAChB,AACD,8BACE,kBAAmB,AACnB,qBAAsB,AACtB,SAAW,CACZ,AACD,kCACE,YAAa,AACb,aAAc,AACd,yBAA0B,AAC1B,+CAAqD,AACrD,sBAAuB,AACvB,wBAA4B,AAC5B,cAAe,AACf,kCAAoC,CACrC,AACD,oCACE,eAAgB,AAChB,WAAY,AACZ,eAAiB,CAClB,AAED,kFACE,4BAA6B,AAC7B,SAAW,CACZ,AACD,2EACE,SAAW,CACZ,AACD,8BACE,kBAAmB,AACnB,WAAY,AACZ,YAAa,AACb,sBAAuB,AAEvB,4BAA6B,AAC7B,sBAAuB,AACvB,4BAA6B,AAC7B,eAAiB,CAClB\",\"file\":\"Me.vue\",\"sourcesContent\":[\"\\n@import url(\\\"./../assets/styles/animation.css\\\");\\n.content p[data-v-ca40f4b8] {\\n  margin: 20px 0;\\n}\\n.content[data-v-ca40f4b8] {\\n  max-width: 50rem;\\n  margin: 5rem auto;\\n  text-align: center;\\n}\\n.hero-tree[data-v-ca40f4b8] {\\n  position: absolute;\\n  top: -50px;\\n  left: -50px;\\n  width: 80px;\\n  height: 80px;\\n  border: 30px solid #ddf6ff;\\n  z-index: -1;\\n}\\n.hero-flower[data-v-ca40f4b8] {\\n  position: absolute;\\n  bottom: -50px;\\n  right: -50px;\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 100px;\\n  border: 30px solid #d3e0f3;\\n}\\n.hero[data-v-ca40f4b8] {\\n  margin-top: 70px;\\n  padding: 130px 0;\\n  background-color: #f9f9f9;\\n}\\n.hero-container[data-v-ca40f4b8] {\\n  position: relative;\\n  max-width: 50rem;\\n  margin: 0 auto;\\n  text-align: right;\\n  line-height: 0;\\n}\\n.hero-name h1[data-v-ca40f4b8] {\\n  font-size: 5rem;\\n  color: #b4e3f4;\\n  line-height: .9;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n}\\n.hero-name h2[data-v-ca40f4b8] {\\n  font-size: 1.2rem;\\n  font-weight: 200;\\n  color: #222;\\n  line-height: 1.3;\\n}\\n.hero-name[data-v-ca40f4b8] {\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n  text-align: left;\\n  display: inline-block;\\n  line-height: 1.2;\\n}\\n.progressBar-container[data-v-ca40f4b8] {\\n  margin: 50px auto;\\n}\\n.contact-layout[data-v-ca40f4b8] {\\n  position: absolute;\\n  width: 100%;\\n  margin: 0 auto;\\n}\\n.hero-avatar[data-v-ca40f4b8] {\\n  position: relative;\\n  display: inline-block;\\n  z-index: 2;\\n}\\n.hero-avatar-img[data-v-ca40f4b8] {\\n  width: 300px;\\n  height: 300px;\\n  background-color: #f3f3f3;\\n  background-image: url('./../assets/images/me-1.jpg');\\n  background-size: cover;\\n  background-position: center;\\n  line-height: 0;\\n  box-shadow: 0 0 6rem rgba(0,0,0,.3);\\n}\\n.contact-item-text[data-v-ca40f4b8] {\\n  font-size: 15px;\\n  color: #000;\\n  font-weight: 400;\\n}\\n/*動畫*/\\n.fade-item-enter-active[data-v-ca40f4b8], .fade-item-leave-active[data-v-ca40f4b8] {\\n  transition: all .5s ease-out;\\n  opacity: 1;\\n}\\n.fade-item-enter[data-v-ca40f4b8], .fade-item-leave-active[data-v-ca40f4b8] {\\n  opacity: 0;\\n}\\n#particlesJs[data-v-ca40f4b8] {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #fff;\\n  /*background-image: url('');*/\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: 50% 50%;\\n  overflow: hidden;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-ca40f4b8&scoped=true!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Me.vue\n// module id = 198\n// module chunks = 5","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-73a04881&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./progressBar.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-73a04881&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./progressBar.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-73a04881&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./progressBar.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-73a04881&scoped=true!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/packages/progressBar.vue\n// module id = 228\n// module chunks = 5","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-ca40f4b8&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Me.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-ca40f4b8&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Me.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-ca40f4b8&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Me.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-ca40f4b8&scoped=true!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Me.vue\n// module id = 237\n// module chunks = 5","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* styles */\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!vue-loader/lib/style-rewriter?id=data-v-ca40f4b8&scoped=true!vue-loader/lib/selector?type=styles&index=0!./Me.vue\")\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./Me.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-ca40f4b8!vue-loader/lib/selector?type=template&index=0!./Me.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n__vue_options__._scopeId = \"data-v-ca40f4b8\"\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Me.vue\n// module id = 442\n// module chunks = 5","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* styles */\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!vue-loader/lib/style-rewriter?id=data-v-73a04881&scoped=true!vue-loader/lib/selector?type=styles&index=0!./progressBar.vue\")\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./progressBar.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-73a04881!vue-loader/lib/selector?type=template&index=0!./progressBar.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n__vue_options__._scopeId = \"data-v-73a04881\"\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/progressBar.vue\n// module id = 462\n// module chunks = 5","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {}, _vm._l((_vm.progressList), function(item) {\n    return _c('div', {\n      staticClass: \"progress-container\",\n      style: (_vm.progressClass.container)\n    }, [_c('div', {\n      staticClass: \"progress-label\"\n    }, [_vm._v(\"\\n      \" + _vm._s(item.label) + \"\\n    \")]), _vm._v(\" \"), _c('div', {\n      staticClass: \"progress-inner\",\n      style: ([_vm.progressClass.inner, {\n        width: item.value + '%'\n      }])\n    })])\n  }))\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-73a04881!./~/vue-loader/lib/selector.js?type=template&index=0!./src/packages/progressBar.vue\n// module id = 494\n// module chunks = 5","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('transition', {\n    attrs: {\n      \"name\": \"fade-contact\"\n    }\n  }, [_c('div', [_c('div', {\n    staticClass: \"hero\"\n  }, [_c('div', {\n    staticClass: \"hero-container\"\n  }, [_c('div', {\n    staticClass: \"hero-name\"\n  }, [_c('h1', {\n    staticClass: \"Animated_slidedown\",\n    style: ({\n      transform: 'translate3d(' + _vm.tx + 'px,' + 0 + 'px,' + _vm.tz + 'px)'\n    })\n  }, [_vm._v(\"Haowen\"), _c('br'), _vm._v(\"Zheng\")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"Animated_slideleft\",\n    style: ({\n      transform: 'translate3d(' + _vm.tx / 2 + 'px,' + 0 + 'px,' + _vm.tz + 'px)'\n    })\n  }, [_vm._v(\"郑皓文\")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"Animated_slideleft\",\n    style: ({\n      transform: 'translate3d(' + _vm.tx / 3 + 'px,' + 0 + 'px,' + _vm.tz + 'px)'\n    })\n  }, [_vm._v(\"中国 💝 杭州\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"hero-avatar Animated_slideright\"\n  }, [_c('div', {\n    staticClass: \"hero-avatar-img\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"hero-flower\",\n    style: ({\n      transform: 'translate3d(' + -_vm.tx / 2 + 'px,' + _vm.ty + 'px,' + _vm.tz + 'px)'\n    })\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"hero-tree\",\n    style: ({\n      transform: 'translate3d(' + _vm.tx + 'px,' + _vm.ty + 'px,' + _vm.tz + 'px)'\n    })\n  })])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('h2', [_vm._v(\"很高兴认识你\")]), _vm._v(\" \"), _c('p', [_vm._v(\"我叫郑皓文, 我是一名前端开发工程师, 我蛮喜欢新的技术, 设计并且搭建酷炫的项目。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"做出一个改变世界的产品是我的人生理想。\")])])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-ca40f4b8!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Me.vue\n// module id = 503\n// module chunks = 5"],"sourceRoot":""}