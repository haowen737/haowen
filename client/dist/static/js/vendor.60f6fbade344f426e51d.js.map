{"version":3,"sources":["webpack:///static/js/vendor.60f6fbade344f426e51d.js","webpack:///./~/iscroll/build/iscroll.js","webpack:///./~/markdown/lib/markdown.js","webpack:///./~/particles.js/particles.js","webpack:///./~/process/browser.js","webpack:///./~/util/~/inherits/inherits_browser.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/util/util.js","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js"],"names":["webpackJsonp","52","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_RESULT__","window","document","Math","IScroll","el","options","this","wrapper","querySelector","scroller","children","scrollerStyle","style","resizeScrollbars","mouseWheelSpeed","snapThreshold","disablePointer","utils","hasPointer","disableTouch","hasTouch","disableMouse","startX","startY","scrollY","directionLockThreshold","momentum","bounce","bounceTime","bounceEasing","preventDefault","preventDefaultException","tagName","HWCompositing","useTransition","useTransform","bindToWrapper","onmousedown","i","translateZ","hasPerspective","hasTransition","hasTransform","eventPassthrough","scrollX","freeScroll","ease","circular","resizePolling","undefined","tap","shrinkScrollbars","invertWheelDirection","x","y","directionX","directionY","_events","_init","refresh","scrollTo","enable","createDefaultScrollbar","direction","interactive","type","scrollbar","createElement","indicator","cssText","className","height","width","pointerEvents","appendChild","Indicator","wrapperStyle","indicatorStyle","listenX","listenY","resize","defaultScrollbars","shrink","fade","speedRatioX","speedRatioY","sizeRatioX","sizeRatioY","maxPosX","maxPosY","addEvent","prefixPointerEvent","transform","durationProp","transitionDuration","isBadAndroid","self","rAF","opacity","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","_prefixStyle","_vendor","charAt","toUpperCase","substr","me","_elementStyle","vendors","l","length","getTime","Date","now","extend","target","obj","fn","capture","addEventListener","removeEvent","removeEventListener","pointerEvent","MSPointerEvent","current","start","time","lowerMargin","wrapperSize","deceleration","destination","duration","distance","speed","abs","round","_transform","PointerEvent","appVersion","navigator","test","safariVersion","match","parseFloat","transitionTimingFunction","transitionDelay","transformOrigin","hasClass","e","c","re","RegExp","addClass","newclass","split","push","join","removeClass","replace","offset","left","offsetLeft","top","offsetTop","offsetParent","exceptions","eventType","touchstart","touchmove","touchend","mousedown","mousemove","mouseup","pointerdown","pointermove","pointerup","MSPointerDown","MSPointerMove","MSPointerUp","quadratic","k","sqrt","back","b","elastic","f","pow","sin","PI","eventName","ev","createEvent","initEvent","pageX","pageY","dispatchEvent","click","initMouseEvent","view","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","_constructed","prototype","version","_initEvents","scrollbars","indicators","_initIndicators","mouseWheel","_initWheel","snap","_initSnap","keyBindings","_initKeys","destroy","clearTimeout","resizeTimeout","_execEvent","_transitionEnd","isInTransition","_transitionTime","resetPosition","_start","button","which","enabled","initiated","pos","point","touches","moved","distX","distY","directionLocked","startTime","getComputedPosition","_translate","isAnimating","absStartX","absStartY","pointX","pointY","_move","newX","newY","absDistX","absDistY","deltaX","deltaY","timestamp","endTime","hasHorizontalScroll","hasVerticalScroll","maxScrollX","maxScrollY","_end","momentumX","momentumY","changedTouches","distanceX","distanceY","easing","flick","wrapperWidth","wrapperHeight","max","_nearestSnap","currentPage","snapSpeed","min","_resize","that","disable","offsetHeight","clientWidth","clientHeight","scrollerWidth","offsetWidth","scrollerHeight","wrapperOffset","on","off","index","indexOf","splice","apply","slice","call","arguments","scrollBy","transitionType","_transitionTimingFunction","_animate","scrollToElement","offsetX","offsetY","nodeType","transitionTime","updatePosition","remove","matrix","getComputedStyle","_indicatorsMap","interactiveScrollbars","customStyle","fadeScrollbars","concat","wheelTimeout","_wheel","wheelDeltaX","wheelDeltaY","deltaMode","wheelDelta","detail","goToPage","querySelectorAll","n","cx","cy","m","stepX","snapStepX","stepY","snapStepY","pages","snapThresholdX","snapThresholdY","posX","posY","next","prev","keys","pageUp","pageDown","end","home","up","right","down","charCodeAt","_key","prevTime","keyTime","acceleration","keyAcceleration","keyCode","destX","destY","easingFn","step","destTime","handleEvent","stopPropagation","fadeTimeout","parentNode","removeChild","lastPointX","lastPointY","_pos","display","bottom","indicatorWidth","minBoundaryX","maxBoundaryX","indicatorHeight","minBoundaryY","maxBoundaryY","ignoreBoundaries","val","hold","visible","delay","bind","53","expose","mk_block_toSource","uneval","toString","trailing","lineNumber","mk_block_inspect","util","inspect","count_lines","str","strong_em","tag","md","CloseTag","len","len_after","name","state_slot","other_slot","text","orig_match","shift","other","state","unshift","res","processInline","last","pop","consumed","split_meta_hash","meta_string","meta","parts","in_quotes","letter","extract_attr","jsonml","isArray","escapeHTML","render_tree","attributes","content","Array","tag_attrs","a","convert_tree_to_html","tree","references","preprocessTreeNode","attrs","level","code","src","href","ref","original","title","key","merge_text_nodes","Markdown","dialect","dialects","Gruber","Error","String","em_state","strong_state","debug_indent","parse","source","toTree","toHTML","input","toHTMLTree","renderJsonML","refs","html","mk_block","block","trail","line","s","toSource","split_blocks","startLine","blocks","line_no","exec","lastIndex","processBlock","cbs","ord","__order__","__call__","debug","inline","custom_root","old_tree","args","print","console","log","loop_re_over_block","cb","valueOf","atxHeader","header","setextHeader","ret","block_search","substring","horizRule","lists","regex_for_depth","depth","indent_re","any_list","expand_tab","add","li","loose","nl","add_to","what","is_str","get_contained_blocks","paragraphify","stack","list","last_li","sublist","bullet_list","is_list_re","make_list","indent","lines","li_accumulate","line_re","wanted_depth","floor","found","contained","forEach","next_block","hr","blockquote","abutting","processedBlock","attr","isEmpty","referenceDefn","toLowerCase","para","__oneElement__","patterns_or_re","previous_nodes","__patterns__","patterns","out","]","}","__escape__","\\","![","alt","[","link","orig","DialectHelpers","inline_until_char","url","open_parens","<","`","  \n","buildBlockOrder","d","buildInlinePatterns","pattern","want","nodes","subclassDialect","Block","Inline","Maruku","processMetaHash","id","document_meta","pairs","p","value","block_meta","hash","node","result","definition_list","tight","terms","defns","table","_split_on_unescaped","ch","r","leading_pipe","no_leading_pipe","html_attrs","align","trim","row","html_row","matches","before","Object","arr","thisp","hasOwnProperty","root","54","hexToRgb","hex","shorthandRegex","g","parseInt","clamp","number","isInArray","array","pJS","tag_id","params","canvas_el","canvas","w","h","particles","density","value_area","color","shape","stroke","polygon","nb_sides","image","random","anim","opacity_min","sync","size","size_min","line_linked","move","straight","out_mode","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","modes","grab","bubble","repulse","particles_nb","mouse","retina_detect","interact","tmp","deepExtend","size_value","size_anim_speed","move_speed","line_linked_distance","line_linked_width","mode_grab_distance","mode_bubble_distance","mode_bubble_size","mode_repulse_distance","retinaInit","devicePixelRatio","pxratio","retina","canvasInit","ctx","getContext","canvasSize","particlesEmpty","particlesCreate","particlesDraw","densityAutoParticles","canvasPaint","fillRect","canvasClear","clearRect","particle","position","radius","size_status","vs","checkOverlap","color_selected","rgb","hsl","opacity_status","vo","velbase","vx","vy","vx_i","vy_i","shape_type","shape_selected","sh","img","ratio","img_type","source_svg","createSvgImg","pushing","loaded","draw","drawImage","img_obj","radius_bubble","opacity_bubble","color_value","fillStyle","beginPath","arc","rect","drawShape","closePath","strokeStyle","lineWidth","fill","particlesUpdate","ms","new_pos","x_left","x_right","y_top","y_bottom","grabParticle","bubbleParticle","repulseParticle","j","p2","linkParticles","attractParticles","bounceParticles","particlesRefresh","cancelRequestAnimFrame","checkAnimFrame","drawAnimFrame","count_svg","p1","dx","dy","dist","opacity_line","color_line","color_rgb_line","moveTo","lineTo","ax","ay","dist_p","pushParticles","nb","pos_x","pos_y","removeParticles","init","process","bubble_param","particles_param","p_obj_bubble","p_obj","bubble_duration_end","value_tmp","time_spent","dif","dist_mouse","dx_mouse","dy_mouse","status","bubble_clicking","click_pos_x","click_pos_y","click_time","atan2","force","cos","normVec","repulseRadius","velocity","repulseFactor","repulse_finish","repulse_count","repulse_clicking","eventsListeners","area","nb_particles","missing_particles","svgXml","rgbHex","coloredSvgXml","svg","Blob","DOMURL","URL","webkitURL","createObjectURL","Image","revokeObjectURL","destroypJS","cancelAnimationFrame","pJSDom","sideLength","sideCountNumerator","sideCountDenominator","sideCount","decimalSides","interiorAngleDegrees","interiorAngle","save","translate","rotate","restore","exportImg","open","toDataURL","loadImg","img_error","xhr","XMLHttpRequest","onreadystatechange","data","readyState","currentTarget","response","checkBeforeDraw","send","requestAnimFrame","check","property","constructor","callee","webkitCancelRequestAnimationFrame","mozCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","particlesJS","pJS_tag","getElementById","pJS_canvas_class","exist_canvas","getElementsByClassName","load","path_config_json","JSON","55","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","nextTick","browser","env","argv","versions","addListener","once","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","65","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","66","arg","copy","readUInt8","67","global","opts","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","styles","arrayToHash","idx","recurseTimes","isFunction","isString","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","toUTCString","output","formatArray","map","formatProperty","reduceToSingleString","simple","stringify","isNumber","isNull","desc","getOwnPropertyDescriptor","get","set","numLinesEst","reduce","cur","ar","isNullOrUndefined","isSymbol","isObject","objectToString","isPrimitive","o","pad","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","format","objects","Number","_","deprecate","msg","deprecated","warned","throwDeprecation","traceDeprecation","trace","error","noDeprecation","debugEnviron","debugs","debuglog","NODE_ENV","NODE_DEBUG","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","string","date","regexp","isBuffer","inherits","origin","108","Promise$1","executor","PENDING","deferred","promise","resolve","reject","PromiseObj","context","Promise","Util","Vue","config","silent","warn","toLower","toUpper","isPlainObject","getPrototypeOf","isBlob","isFormData","FormData","when","fulfilled","rejected","then","merge","$vm","$options","each","iterator","_merge","defaults","_assign","deep","query","urlParams","Url","expand","variables","tmpl","expanded","vars","template","operators","expression","literal","operator","values","variable","getValues","separator","encodeReserved","modifier","isDefined","encodeValue","isKeyOperator","filter","encodeURIComponent","part","encodeURI","transforms","handler","factory","vm","serialize","scope","plain","xdrClient","request","xdr","XDomainRequest","_ref","respondWith","responseText","abort","method","getUrl","onload","onerror","ontimeout","onprogress","getBody","cors","crossOrigin","SUPPORTS_CORS","client","emulateHTTP","requestUrl","protocol","ORIGIN_URL","host","body","headers","delete","emulateJSON","defineProperty","bodyText","jsonpClient","script","jsonp","async","json","assign","Http","common","custom","has","xhrClient","event","statusText","getAllResponseHeaders","append","progress","upload","responseType","credentials","withCredentials","setRequestHeader","Client","reqHandlers","resHandlers","sendRequest","use","getName","curr","normalizeName","TypeError","blobText","reader","FileReader","readAsText","isBlobText","interceptors","Request","ok","Resource","actions","resource","action","$http","plugin","installed","http","defineProperties","$url","$resource","$promise","_this","RESOLVED","REJECTED","all","iterable","resolver","count","race","p$1","called","notify","reason","onResolved","onRejected","catch","finally","ie","documentMode","escape","port","hostname","pathname","search","location","classCallCheck","instance","Constructor","Headers","getAll","thisArg","_this2","Response","bodyBlob","blob","CUSTOM_HEADERS","X-Requested-With","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","put","post","patch","update","109","Target","path","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","route","eachRoute","baseRoute","addRouteCallback","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","DynamicSegment","StarSegment","EpsilonSegment","names","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","sort","recognizeChar","RecognizeResults","queryParams","findHandler","handlers","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","warn$1","resolvePath","relative","isPromise","getRouteConfig","component","resolveAsyncComponent","components","exports$1","_resolveComponent","Component","mapParams","genQuery","canReuse","transition","childVM","canReuseFn","to","from","canDeactivate","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","deactivate","callHooks","activate","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","router","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","postActivate","$emit","processData","promises","resolvedVal","$set","isPlainOjbect","toArray","applyOverride","_Vue$util","defineReactive","_parent","parent","$router","$route","_children","_defineMeta","_destroy","_isBeingDestroyed","$remove","strats","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","_isDynamicLiteral","parentView","$parent","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","toggleClasses","_bind","onPriority","priority","LINK_UPDATE","activeId","childLinks","existingId","getAttribute","setAttribute","$on","activeIds","updateClasses","$off","unwatch","$watch","onRouteUpdate","removeAttribute","onClick","exact","prevActiveClass","activeClass","defaultPrevented","go","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","regexEscapeRE","isAbsolute","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","willAddRoute","addChild","contextEntered","specials","escapeRegex","validChars","generate","invalidChars","repeat","child","isEqual","chars","returned","oCreate","proto","F","RouteRecognizer","rootState","allSegments","as","handlersFor","hasRoute","generateQueryString","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","listener","stop","replaceState","pageXOffset","pageYOffset","pushState","hashMatch","HashHistory","hashbang","raw","formattedPath","isAbsoloute","prefix","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reverse","matched","reuseQueue","runQueue","_onTransitionValidated","_view","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","nextWithData","exposed","hooks","internalKeysRE","Route","_recognizer","_notFoundHandler","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","beforeEach","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","install","externalVue","110","hasOwn","_isVue","_data","ob","__ob__","convert","dep","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","_toString","toNumber","parsed","isNaN","toBoolean","stripQuotes","camelize","camelizeRE","hyphenate","hyphenateRE","classify","classifyRE","OBJECT_STRING","def","_debounce","func","wait","later","cancellable","cancelled","cancel","looseEqual","isNative","Cache","limit","head","tail","_keymap","peek","eof","eatSpace","spaceChr","isStringStart","chr","doubleChr","singleChr","isExpStart","expStartChr","isExpEnd","expChrPair","parseString","stringQuote","escapeChr","parseSpecialExp","inExp","startChr","parseExpression","pipeChr","startState","filterArgState","filterState","filterNameState","parseFilterList","filters","parseFilter","parseFilterArguments","processFilterArg","reservedArgRE","dynamic","stripped","parseDirective","hit","cache$1","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","first","oneTime","tokens","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","removeWithTransition","op","__v_trans","transitionEndEvent","_isCompiled","inDoc","doc","ownerDocument","documentElement","contains","getAttr","_attr","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","useCapture","getClass","classname","baseVal","setClass","cls","isIE9","namespaceURI","classList","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","createAnchor","persist","createComment","createTextNode","__v_anchor","findRef","hasAttributes","refRE","mapNodeRange","removeNodeRange","frag","onRemoved","removed","getOuterHTML","outerHTML","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","guardArrayAssets","guardComponents","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","defaultStrat","mixins","mixin","mixinOptions","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","getter","setter","childOb","depend","newVal","initMixin","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_vForRemoving","_unlinkFn","_context","_scope","_frag","_updateRef","_callHook","_initState","$mount","getPathCharType","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression$1","setPath","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","userQueue","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","watcher","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","suffix","nodeToFragment","textContent","clonedNode","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","Fragment","linker","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","attach","shouldCallRemove","beforeRemove","detach","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","range","getTrackByKey","trackByKey","findVmFromFrag","__vue__","getValue","multi","selected","_value","indexOf$1","keyFilter","codes","charCode","keyCodes","stopFilter","preventFilter","selfFilter","normalize","propCache","camel","upper","testEl","prefixed","prefixes","kebab","camelPrefixes","normalize$1","callActivateHooks","total","compileProps","propOptions","propsData","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","pushJob","job","queue$1","flush","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","typeCache","isHidden","getBoundingClientRect","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sortDirectives","groupedMap","priorities","descriptor","DEFAULT_PRIORITY","group","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","skip","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","modifiers","componentLinkFn","previousElementSibling","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","methods","metas","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","watch","_initDOMHooks","noop$1","Directive","_locked","_listeners","_host","lifecycleMixin","_compile","_initElement","rootLinker","contentLinkFn","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","miscMixin","_applyFilters","oldValue","write","read","resolved","requested","pendingCallbacks","dataAPI","clean","asStatement","$arguments","$delete","immediate","filterRE$1","$interpolate","$log","domAPI","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","definition","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","userAgent","isIE","isAndroid","isIOS","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","91","123","40","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","instanceData","defaultData","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","addSub","sub","removeSub","addDep","arrayProto","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident",".","0","'","\"","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","_withLock","$index","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","defs","symbol","circle","ellipse","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","on$1","acceptStatement","iframeBind","contentWindow","prevent","reset","importantRE","handleObject","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","prevKeys","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","invalidatePending","resolveComponent","mountComponent","ComponentName","activateHooks","cached","getCached","newComponent","waitingFor","extraOptions","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","waitForTransitionStart","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","capitalize","uppercase","lowercase","currency","_currency","decimals","isFinite","stringified","toFixed","_int","_float","sign","pluralize","111","modules","mediaQuery","alreadyImportedModules","112","addStylesToDom","domStyle","stylesInDom","addStyle","listToStyles","newStyles","media","sourceMap","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","createStyleElement","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","sources","btoa","unescape","memoize","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.60f6fbade344f426e51d.js","sourcesContent":["webpackJsonp([2,0],{\n\n/***/ 52:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*! iScroll v5.2.0 ~ (c) 2008-2016 Matteo Spinelli ~ http://cubiq.org/license */\n\t(function (window, document, Math) {\n\tvar rAF = window.requestAnimationFrame\t||\n\t\twindow.webkitRequestAnimationFrame\t||\n\t\twindow.mozRequestAnimationFrame\t\t||\n\t\twindow.oRequestAnimationFrame\t\t||\n\t\twindow.msRequestAnimationFrame\t\t||\n\t\tfunction (callback) { window.setTimeout(callback, 1000 / 60); };\n\t\n\tvar utils = (function () {\n\t\tvar me = {};\n\t\n\t\tvar _elementStyle = document.createElement('div').style;\n\t\tvar _vendor = (function () {\n\t\t\tvar vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\n\t\t\t\ttransform,\n\t\t\t\ti = 0,\n\t\t\t\tl = vendors.length;\n\t\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\ttransform = vendors[i] + 'ransform';\n\t\t\t\tif ( transform in _elementStyle ) return vendors[i].substr(0, vendors[i].length-1);\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t})();\n\t\n\t\tfunction _prefixStyle (style) {\n\t\t\tif ( _vendor === false ) return false;\n\t\t\tif ( _vendor === '' ) return style;\n\t\t\treturn _vendor + style.charAt(0).toUpperCase() + style.substr(1);\n\t\t}\n\t\n\t\tme.getTime = Date.now || function getTime () { return new Date().getTime(); };\n\t\n\t\tme.extend = function (target, obj) {\n\t\t\tfor ( var i in obj ) {\n\t\t\t\ttarget[i] = obj[i];\n\t\t\t}\n\t\t};\n\t\n\t\tme.addEvent = function (el, type, fn, capture) {\n\t\t\tel.addEventListener(type, fn, !!capture);\n\t\t};\n\t\n\t\tme.removeEvent = function (el, type, fn, capture) {\n\t\t\tel.removeEventListener(type, fn, !!capture);\n\t\t};\n\t\n\t\tme.prefixPointerEvent = function (pointerEvent) {\n\t\t\treturn window.MSPointerEvent ?\n\t\t\t\t'MSPointer' + pointerEvent.charAt(7).toUpperCase() + pointerEvent.substr(8):\n\t\t\t\tpointerEvent;\n\t\t};\n\t\n\t\tme.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {\n\t\t\tvar distance = current - start,\n\t\t\t\tspeed = Math.abs(distance) / time,\n\t\t\t\tdestination,\n\t\t\t\tduration;\n\t\n\t\t\tdeceleration = deceleration === undefined ? 0.0006 : deceleration;\n\t\n\t\t\tdestination = current + ( speed * speed ) / ( 2 * deceleration ) * ( distance < 0 ? -1 : 1 );\n\t\t\tduration = speed / deceleration;\n\t\n\t\t\tif ( destination < lowerMargin ) {\n\t\t\t\tdestination = wrapperSize ? lowerMargin - ( wrapperSize / 2.5 * ( speed / 8 ) ) : lowerMargin;\n\t\t\t\tdistance = Math.abs(destination - current);\n\t\t\t\tduration = distance / speed;\n\t\t\t} else if ( destination > 0 ) {\n\t\t\t\tdestination = wrapperSize ? wrapperSize / 2.5 * ( speed / 8 ) : 0;\n\t\t\t\tdistance = Math.abs(current) + destination;\n\t\t\t\tduration = distance / speed;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tdestination: Math.round(destination),\n\t\t\t\tduration: duration\n\t\t\t};\n\t\t};\n\t\n\t\tvar _transform = _prefixStyle('transform');\n\t\n\t\tme.extend(me, {\n\t\t\thasTransform: _transform !== false,\n\t\t\thasPerspective: _prefixStyle('perspective') in _elementStyle,\n\t\t\thasTouch: 'ontouchstart' in window,\n\t\t\thasPointer: !!(window.PointerEvent || window.MSPointerEvent), // IE10 is prefixed\n\t\t\thasTransition: _prefixStyle('transition') in _elementStyle\n\t\t});\n\t\n\t\t/*\n\t\tThis should find all Android browsers lower than build 535.19 (both stock browser and webview)\n\t\t- galaxy S2 is ok\n\t    - 2.3.6 : `AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1`\n\t    - 4.0.4 : `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\n\t   - galaxy S3 is badAndroid (stock brower, webview)\n\t     `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\n\t   - galaxy S4 is badAndroid (stock brower, webview)\n\t     `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\n\t   - galaxy S5 is OK\n\t     `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`\n\t   - galaxy S6 is OK\n\t     `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`\n\t  */\n\t\tme.isBadAndroid = (function() {\n\t\t\tvar appVersion = window.navigator.appVersion;\n\t\t\t// Android browser is not a chrome browser.\n\t\t\tif (/Android/.test(appVersion) && !(/Chrome\\/\\d/.test(appVersion))) {\n\t\t\t\tvar safariVersion = appVersion.match(/Safari\\/(\\d+.\\d)/);\n\t\t\t\tif(safariVersion && typeof safariVersion === \"object\" && safariVersion.length >= 2) {\n\t\t\t\t\treturn parseFloat(safariVersion[1]) < 535.19;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t})();\n\t\n\t\tme.extend(me.style = {}, {\n\t\t\ttransform: _transform,\n\t\t\ttransitionTimingFunction: _prefixStyle('transitionTimingFunction'),\n\t\t\ttransitionDuration: _prefixStyle('transitionDuration'),\n\t\t\ttransitionDelay: _prefixStyle('transitionDelay'),\n\t\t\ttransformOrigin: _prefixStyle('transformOrigin')\n\t\t});\n\t\n\t\tme.hasClass = function (e, c) {\n\t\t\tvar re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\");\n\t\t\treturn re.test(e.className);\n\t\t};\n\t\n\t\tme.addClass = function (e, c) {\n\t\t\tif ( me.hasClass(e, c) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar newclass = e.className.split(' ');\n\t\t\tnewclass.push(c);\n\t\t\te.className = newclass.join(' ');\n\t\t};\n\t\n\t\tme.removeClass = function (e, c) {\n\t\t\tif ( !me.hasClass(e, c) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\", 'g');\n\t\t\te.className = e.className.replace(re, ' ');\n\t\t};\n\t\n\t\tme.offset = function (el) {\n\t\t\tvar left = -el.offsetLeft,\n\t\t\t\ttop = -el.offsetTop;\n\t\n\t\t\t// jshint -W084\n\t\t\twhile (el = el.offsetParent) {\n\t\t\t\tleft -= el.offsetLeft;\n\t\t\t\ttop -= el.offsetTop;\n\t\t\t}\n\t\t\t// jshint +W084\n\t\n\t\t\treturn {\n\t\t\t\tleft: left,\n\t\t\t\ttop: top\n\t\t\t};\n\t\t};\n\t\n\t\tme.preventDefaultException = function (el, exceptions) {\n\t\t\tfor ( var i in exceptions ) {\n\t\t\t\tif ( exceptions[i].test(el[i]) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t};\n\t\n\t\tme.extend(me.eventType = {}, {\n\t\t\ttouchstart: 1,\n\t\t\ttouchmove: 1,\n\t\t\ttouchend: 1,\n\t\n\t\t\tmousedown: 2,\n\t\t\tmousemove: 2,\n\t\t\tmouseup: 2,\n\t\n\t\t\tpointerdown: 3,\n\t\t\tpointermove: 3,\n\t\t\tpointerup: 3,\n\t\n\t\t\tMSPointerDown: 3,\n\t\t\tMSPointerMove: 3,\n\t\t\tMSPointerUp: 3\n\t\t});\n\t\n\t\tme.extend(me.ease = {}, {\n\t\t\tquadratic: {\n\t\t\t\tstyle: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n\t\t\t\tfn: function (k) {\n\t\t\t\t\treturn k * ( 2 - k );\n\t\t\t\t}\n\t\t\t},\n\t\t\tcircular: {\n\t\t\t\tstyle: 'cubic-bezier(0.1, 0.57, 0.1, 1)',\t// Not properly \"circular\" but this looks better, it should be (0.075, 0.82, 0.165, 1)\n\t\t\t\tfn: function (k) {\n\t\t\t\t\treturn Math.sqrt( 1 - ( --k * k ) );\n\t\t\t\t}\n\t\t\t},\n\t\t\tback: {\n\t\t\t\tstyle: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n\t\t\t\tfn: function (k) {\n\t\t\t\t\tvar b = 4;\n\t\t\t\t\treturn ( k = k - 1 ) * k * ( ( b + 1 ) * k + b ) + 1;\n\t\t\t\t}\n\t\t\t},\n\t\t\tbounce: {\n\t\t\t\tstyle: '',\n\t\t\t\tfn: function (k) {\n\t\t\t\t\tif ( ( k /= 1 ) < ( 1 / 2.75 ) ) {\n\t\t\t\t\t\treturn 7.5625 * k * k;\n\t\t\t\t\t} else if ( k < ( 2 / 2.75 ) ) {\n\t\t\t\t\t\treturn 7.5625 * ( k -= ( 1.5 / 2.75 ) ) * k + 0.75;\n\t\t\t\t\t} else if ( k < ( 2.5 / 2.75 ) ) {\n\t\t\t\t\t\treturn 7.5625 * ( k -= ( 2.25 / 2.75 ) ) * k + 0.9375;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 7.5625 * ( k -= ( 2.625 / 2.75 ) ) * k + 0.984375;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\telastic: {\n\t\t\t\tstyle: '',\n\t\t\t\tfn: function (k) {\n\t\t\t\t\tvar f = 0.22,\n\t\t\t\t\t\te = 0.4;\n\t\n\t\t\t\t\tif ( k === 0 ) { return 0; }\n\t\t\t\t\tif ( k == 1 ) { return 1; }\n\t\n\t\t\t\t\treturn ( e * Math.pow( 2, - 10 * k ) * Math.sin( ( k - f / 4 ) * ( 2 * Math.PI ) / f ) + 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\tme.tap = function (e, eventName) {\n\t\t\tvar ev = document.createEvent('Event');\n\t\t\tev.initEvent(eventName, true, true);\n\t\t\tev.pageX = e.pageX;\n\t\t\tev.pageY = e.pageY;\n\t\t\te.target.dispatchEvent(ev);\n\t\t};\n\t\n\t\tme.click = function (e) {\n\t\t\tvar target = e.target,\n\t\t\t\tev;\n\t\n\t\t\tif ( !(/(SELECT|INPUT|TEXTAREA)/i).test(target.tagName) ) {\n\t\t\t\tev = document.createEvent('MouseEvents');\n\t\t\t\tev.initMouseEvent('click', true, true, e.view, 1,\n\t\t\t\t\ttarget.screenX, target.screenY, target.clientX, target.clientY,\n\t\t\t\t\te.ctrlKey, e.altKey, e.shiftKey, e.metaKey,\n\t\t\t\t\t0, null);\n\t\n\t\t\t\tev._constructed = true;\n\t\t\t\ttarget.dispatchEvent(ev);\n\t\t\t}\n\t\t};\n\t\n\t\treturn me;\n\t})();\n\tfunction IScroll (el, options) {\n\t\tthis.wrapper = typeof el == 'string' ? document.querySelector(el) : el;\n\t\tthis.scroller = this.wrapper.children[0];\n\t\tthis.scrollerStyle = this.scroller.style;\t\t// cache style for better performance\n\t\n\t\tthis.options = {\n\t\n\t\t\tresizeScrollbars: true,\n\t\n\t\t\tmouseWheelSpeed: 20,\n\t\n\t\t\tsnapThreshold: 0.334,\n\t\n\t// INSERT POINT: OPTIONS\n\t\t\tdisablePointer : !utils.hasPointer,\n\t\t\tdisableTouch : utils.hasPointer || !utils.hasTouch,\n\t\t\tdisableMouse : utils.hasPointer || utils.hasTouch,\n\t\t\tstartX: 0,\n\t\t\tstartY: 0,\n\t\t\tscrollY: true,\n\t\t\tdirectionLockThreshold: 5,\n\t\t\tmomentum: true,\n\t\n\t\t\tbounce: true,\n\t\t\tbounceTime: 600,\n\t\t\tbounceEasing: '',\n\t\n\t\t\tpreventDefault: true,\n\t\t\tpreventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },\n\t\n\t\t\tHWCompositing: true,\n\t\t\tuseTransition: true,\n\t\t\tuseTransform: true,\n\t\t\tbindToWrapper: typeof window.onmousedown === \"undefined\"\n\t\t};\n\t\n\t\tfor ( var i in options ) {\n\t\t\tthis.options[i] = options[i];\n\t\t}\n\t\n\t\t// Normalize options\n\t\tthis.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';\n\t\n\t\tthis.options.useTransition = utils.hasTransition && this.options.useTransition;\n\t\tthis.options.useTransform = utils.hasTransform && this.options.useTransform;\n\t\n\t\tthis.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;\n\t\tthis.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;\n\t\n\t\t// If you want eventPassthrough I have to lock one of the axes\n\t\tthis.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;\n\t\tthis.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;\n\t\n\t\t// With eventPassthrough we also need lockDirection mechanism\n\t\tthis.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;\n\t\tthis.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;\n\t\n\t\tthis.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;\n\t\n\t\tthis.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;\n\t\n\t\tif ( this.options.tap === true ) {\n\t\t\tthis.options.tap = 'tap';\n\t\t}\n\t\n\t\tif ( this.options.shrinkScrollbars == 'scale' ) {\n\t\t\tthis.options.useTransition = false;\n\t\t}\n\t\n\t\tthis.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;\n\t\n\t// INSERT POINT: NORMALIZATION\n\t\n\t\t// Some defaults\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.directionX = 0;\n\t\tthis.directionY = 0;\n\t\tthis._events = {};\n\t\n\t// INSERT POINT: DEFAULTS\n\t\n\t\tthis._init();\n\t\tthis.refresh();\n\t\n\t\tthis.scrollTo(this.options.startX, this.options.startY);\n\t\tthis.enable();\n\t}\n\t\n\tIScroll.prototype = {\n\t\tversion: '5.2.0',\n\t\n\t\t_init: function () {\n\t\t\tthis._initEvents();\n\t\n\t\t\tif ( this.options.scrollbars || this.options.indicators ) {\n\t\t\t\tthis._initIndicators();\n\t\t\t}\n\t\n\t\t\tif ( this.options.mouseWheel ) {\n\t\t\t\tthis._initWheel();\n\t\t\t}\n\t\n\t\t\tif ( this.options.snap ) {\n\t\t\t\tthis._initSnap();\n\t\t\t}\n\t\n\t\t\tif ( this.options.keyBindings ) {\n\t\t\t\tthis._initKeys();\n\t\t\t}\n\t\n\t// INSERT POINT: _init\n\t\n\t\t},\n\t\n\t\tdestroy: function () {\n\t\t\tthis._initEvents(true);\n\t\t\tclearTimeout(this.resizeTimeout);\n\t \t\tthis.resizeTimeout = null;\n\t\t\tthis._execEvent('destroy');\n\t\t},\n\t\n\t\t_transitionEnd: function (e) {\n\t\t\tif ( e.target != this.scroller || !this.isInTransition ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis._transitionTime();\n\t\t\tif ( !this.resetPosition(this.options.bounceTime) ) {\n\t\t\t\tthis.isInTransition = false;\n\t\t\t\tthis._execEvent('scrollEnd');\n\t\t\t}\n\t\t},\n\t\n\t\t_start: function (e) {\n\t\t\t// React to left mouse button only\n\t\t\tif ( utils.eventType[e.type] != 1 ) {\n\t\t\t  // for button property\n\t\t\t  // http://unixpapa.com/js/mouse.html\n\t\t\t  var button;\n\t\t    if (!e.which) {\n\t\t      /* IE case */\n\t\t      button = (e.button < 2) ? 0 :\n\t\t               ((e.button == 4) ? 1 : 2);\n\t\t    } else {\n\t\t      /* All others */\n\t\t      button = e.button;\n\t\t    }\n\t\t\t\tif ( button !== 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( !this.enabled || (this.initiated && utils.eventType[e.type] !== this.initiated) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\n\t\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\t\tpos;\n\t\n\t\t\tthis.initiated\t= utils.eventType[e.type];\n\t\t\tthis.moved\t\t= false;\n\t\t\tthis.distX\t\t= 0;\n\t\t\tthis.distY\t\t= 0;\n\t\t\tthis.directionX = 0;\n\t\t\tthis.directionY = 0;\n\t\t\tthis.directionLocked = 0;\n\t\n\t\t\tthis.startTime = utils.getTime();\n\t\n\t\t\tif ( this.options.useTransition && this.isInTransition ) {\n\t\t\t\tthis._transitionTime();\n\t\t\t\tthis.isInTransition = false;\n\t\t\t\tpos = this.getComputedPosition();\n\t\t\t\tthis._translate(Math.round(pos.x), Math.round(pos.y));\n\t\t\t\tthis._execEvent('scrollEnd');\n\t\t\t} else if ( !this.options.useTransition && this.isAnimating ) {\n\t\t\t\tthis.isAnimating = false;\n\t\t\t\tthis._execEvent('scrollEnd');\n\t\t\t}\n\t\n\t\t\tthis.startX    = this.x;\n\t\t\tthis.startY    = this.y;\n\t\t\tthis.absStartX = this.x;\n\t\t\tthis.absStartY = this.y;\n\t\t\tthis.pointX    = point.pageX;\n\t\t\tthis.pointY    = point.pageY;\n\t\n\t\t\tthis._execEvent('beforeScrollStart');\n\t\t},\n\t\n\t\t_move: function (e) {\n\t\t\tif ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( this.options.preventDefault ) {\t// increases performance on Android? TODO: check!\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\n\t\t\tvar point\t\t= e.touches ? e.touches[0] : e,\n\t\t\t\tdeltaX\t\t= point.pageX - this.pointX,\n\t\t\t\tdeltaY\t\t= point.pageY - this.pointY,\n\t\t\t\ttimestamp\t= utils.getTime(),\n\t\t\t\tnewX, newY,\n\t\t\t\tabsDistX, absDistY;\n\t\n\t\t\tthis.pointX\t\t= point.pageX;\n\t\t\tthis.pointY\t\t= point.pageY;\n\t\n\t\t\tthis.distX\t\t+= deltaX;\n\t\t\tthis.distY\t\t+= deltaY;\n\t\t\tabsDistX\t\t= Math.abs(this.distX);\n\t\t\tabsDistY\t\t= Math.abs(this.distY);\n\t\n\t\t\t// We need to move at least 10 pixels for the scrolling to initiate\n\t\t\tif ( timestamp - this.endTime > 300 && (absDistX < 10 && absDistY < 10) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If you are scrolling in one direction lock the other\n\t\t\tif ( !this.directionLocked && !this.options.freeScroll ) {\n\t\t\t\tif ( absDistX > absDistY + this.options.directionLockThreshold ) {\n\t\t\t\t\tthis.directionLocked = 'h';\t\t// lock horizontally\n\t\t\t\t} else if ( absDistY >= absDistX + this.options.directionLockThreshold ) {\n\t\t\t\t\tthis.directionLocked = 'v';\t\t// lock vertically\n\t\t\t\t} else {\n\t\t\t\t\tthis.directionLocked = 'n';\t\t// no lock\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( this.directionLocked == 'h' ) {\n\t\t\t\tif ( this.options.eventPassthrough == 'vertical' ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else if ( this.options.eventPassthrough == 'horizontal' ) {\n\t\t\t\t\tthis.initiated = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tdeltaY = 0;\n\t\t\t} else if ( this.directionLocked == 'v' ) {\n\t\t\t\tif ( this.options.eventPassthrough == 'horizontal' ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else if ( this.options.eventPassthrough == 'vertical' ) {\n\t\t\t\t\tthis.initiated = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tdeltaX = 0;\n\t\t\t}\n\t\n\t\t\tdeltaX = this.hasHorizontalScroll ? deltaX : 0;\n\t\t\tdeltaY = this.hasVerticalScroll ? deltaY : 0;\n\t\n\t\t\tnewX = this.x + deltaX;\n\t\t\tnewY = this.y + deltaY;\n\t\n\t\t\t// Slow down if outside of the boundaries\n\t\t\tif ( newX > 0 || newX < this.maxScrollX ) {\n\t\t\t\tnewX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;\n\t\t\t}\n\t\t\tif ( newY > 0 || newY < this.maxScrollY ) {\n\t\t\t\tnewY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;\n\t\t\t}\n\t\n\t\t\tthis.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;\n\t\t\tthis.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;\n\t\n\t\t\tif ( !this.moved ) {\n\t\t\t\tthis._execEvent('scrollStart');\n\t\t\t}\n\t\n\t\t\tthis.moved = true;\n\t\n\t\t\tthis._translate(newX, newY);\n\t\n\t/* REPLACE START: _move */\n\t\n\t\t\tif ( timestamp - this.startTime > 300 ) {\n\t\t\t\tthis.startTime = timestamp;\n\t\t\t\tthis.startX = this.x;\n\t\t\t\tthis.startY = this.y;\n\t\t\t}\n\t\n\t/* REPLACE END: _move */\n\t\n\t\t},\n\t\n\t\t_end: function (e) {\n\t\t\tif ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\n\t\t\tvar point = e.changedTouches ? e.changedTouches[0] : e,\n\t\t\t\tmomentumX,\n\t\t\t\tmomentumY,\n\t\t\t\tduration = utils.getTime() - this.startTime,\n\t\t\t\tnewX = Math.round(this.x),\n\t\t\t\tnewY = Math.round(this.y),\n\t\t\t\tdistanceX = Math.abs(newX - this.startX),\n\t\t\t\tdistanceY = Math.abs(newY - this.startY),\n\t\t\t\ttime = 0,\n\t\t\t\teasing = '';\n\t\n\t\t\tthis.isInTransition = 0;\n\t\t\tthis.initiated = 0;\n\t\t\tthis.endTime = utils.getTime();\n\t\n\t\t\t// reset if we are outside of the boundaries\n\t\t\tif ( this.resetPosition(this.options.bounceTime) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis.scrollTo(newX, newY);\t// ensures that the last position is rounded\n\t\n\t\t\t// we scrolled less than 10 pixels\n\t\t\tif ( !this.moved ) {\n\t\t\t\tif ( this.options.tap ) {\n\t\t\t\t\tutils.tap(e, this.options.tap);\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.options.click ) {\n\t\t\t\t\tutils.click(e);\n\t\t\t\t}\n\t\n\t\t\t\tthis._execEvent('scrollCancel');\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100 ) {\n\t\t\t\tthis._execEvent('flick');\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// start momentum animation if needed\n\t\t\tif ( this.options.momentum && duration < 300 ) {\n\t\t\t\tmomentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };\n\t\t\t\tmomentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };\n\t\t\t\tnewX = momentumX.destination;\n\t\t\t\tnewY = momentumY.destination;\n\t\t\t\ttime = Math.max(momentumX.duration, momentumY.duration);\n\t\t\t\tthis.isInTransition = 1;\n\t\t\t}\n\t\n\t\n\t\t\tif ( this.options.snap ) {\n\t\t\t\tvar snap = this._nearestSnap(newX, newY);\n\t\t\t\tthis.currentPage = snap;\n\t\t\t\ttime = this.options.snapSpeed || Math.max(\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\tMath.min(Math.abs(newX - snap.x), 1000),\n\t\t\t\t\t\t\tMath.min(Math.abs(newY - snap.y), 1000)\n\t\t\t\t\t\t), 300);\n\t\t\t\tnewX = snap.x;\n\t\t\t\tnewY = snap.y;\n\t\n\t\t\t\tthis.directionX = 0;\n\t\t\t\tthis.directionY = 0;\n\t\t\t\teasing = this.options.bounceEasing;\n\t\t\t}\n\t\n\t// INSERT POINT: _end\n\t\n\t\t\tif ( newX != this.x || newY != this.y ) {\n\t\t\t\t// change easing function when scroller goes out of the boundaries\n\t\t\t\tif ( newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY ) {\n\t\t\t\t\teasing = utils.ease.quadratic;\n\t\t\t\t}\n\t\n\t\t\t\tthis.scrollTo(newX, newY, time, easing);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis._execEvent('scrollEnd');\n\t\t},\n\t\n\t\t_resize: function () {\n\t\t\tvar that = this;\n\t\n\t\t\tclearTimeout(this.resizeTimeout);\n\t\n\t\t\tthis.resizeTimeout = setTimeout(function () {\n\t\t\t\tthat.refresh();\n\t\t\t}, this.options.resizePolling);\n\t\t},\n\t\n\t\tresetPosition: function (time) {\n\t\t\tvar x = this.x,\n\t\t\t\ty = this.y;\n\t\n\t\t\ttime = time || 0;\n\t\n\t\t\tif ( !this.hasHorizontalScroll || this.x > 0 ) {\n\t\t\t\tx = 0;\n\t\t\t} else if ( this.x < this.maxScrollX ) {\n\t\t\t\tx = this.maxScrollX;\n\t\t\t}\n\t\n\t\t\tif ( !this.hasVerticalScroll || this.y > 0 ) {\n\t\t\t\ty = 0;\n\t\t\t} else if ( this.y < this.maxScrollY ) {\n\t\t\t\ty = this.maxScrollY;\n\t\t\t}\n\t\n\t\t\tif ( x == this.x && y == this.y ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tthis.scrollTo(x, y, time, this.options.bounceEasing);\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\tdisable: function () {\n\t\t\tthis.enabled = false;\n\t\t},\n\t\n\t\tenable: function () {\n\t\t\tthis.enabled = true;\n\t\t},\n\t\n\t\trefresh: function () {\n\t\t\tvar rf = this.wrapper.offsetHeight;\t\t// Force reflow\n\t\n\t\t\tthis.wrapperWidth\t= this.wrapper.clientWidth;\n\t\t\tthis.wrapperHeight\t= this.wrapper.clientHeight;\n\t\n\t/* REPLACE START: refresh */\n\t\n\t\t\tthis.scrollerWidth\t= this.scroller.offsetWidth;\n\t\t\tthis.scrollerHeight\t= this.scroller.offsetHeight;\n\t\n\t\t\tthis.maxScrollX\t\t= this.wrapperWidth - this.scrollerWidth;\n\t\t\tthis.maxScrollY\t\t= this.wrapperHeight - this.scrollerHeight;\n\t\n\t/* REPLACE END: refresh */\n\t\n\t\t\tthis.hasHorizontalScroll\t= this.options.scrollX && this.maxScrollX < 0;\n\t\t\tthis.hasVerticalScroll\t\t= this.options.scrollY && this.maxScrollY < 0;\n\t\n\t\t\tif ( !this.hasHorizontalScroll ) {\n\t\t\t\tthis.maxScrollX = 0;\n\t\t\t\tthis.scrollerWidth = this.wrapperWidth;\n\t\t\t}\n\t\n\t\t\tif ( !this.hasVerticalScroll ) {\n\t\t\t\tthis.maxScrollY = 0;\n\t\t\t\tthis.scrollerHeight = this.wrapperHeight;\n\t\t\t}\n\t\n\t\t\tthis.endTime = 0;\n\t\t\tthis.directionX = 0;\n\t\t\tthis.directionY = 0;\n\t\n\t\t\tthis.wrapperOffset = utils.offset(this.wrapper);\n\t\n\t\t\tthis._execEvent('refresh');\n\t\n\t\t\tthis.resetPosition();\n\t\n\t// INSERT POINT: _refresh\n\t\n\t\t},\n\t\n\t\ton: function (type, fn) {\n\t\t\tif ( !this._events[type] ) {\n\t\t\t\tthis._events[type] = [];\n\t\t\t}\n\t\n\t\t\tthis._events[type].push(fn);\n\t\t},\n\t\n\t\toff: function (type, fn) {\n\t\t\tif ( !this._events[type] ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar index = this._events[type].indexOf(fn);\n\t\n\t\t\tif ( index > -1 ) {\n\t\t\t\tthis._events[type].splice(index, 1);\n\t\t\t}\n\t\t},\n\t\n\t\t_execEvent: function (type) {\n\t\t\tif ( !this._events[type] ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar i = 0,\n\t\t\t\tl = this._events[type].length;\n\t\n\t\t\tif ( !l ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tthis._events[type][i].apply(this, [].slice.call(arguments, 1));\n\t\t\t}\n\t\t},\n\t\n\t\tscrollBy: function (x, y, time, easing) {\n\t\t\tx = this.x + x;\n\t\t\ty = this.y + y;\n\t\t\ttime = time || 0;\n\t\n\t\t\tthis.scrollTo(x, y, time, easing);\n\t\t},\n\t\n\t\tscrollTo: function (x, y, time, easing) {\n\t\t\teasing = easing || utils.ease.circular;\n\t\n\t\t\tthis.isInTransition = this.options.useTransition && time > 0;\n\t\t\tvar transitionType = this.options.useTransition && easing.style;\n\t\t\tif ( !time || transitionType ) {\n\t\t\t\t\tif(transitionType) {\n\t\t\t\t\t\tthis._transitionTimingFunction(easing.style);\n\t\t\t\t\t\tthis._transitionTime(time);\n\t\t\t\t\t}\n\t\t\t\tthis._translate(x, y);\n\t\t\t} else {\n\t\t\t\tthis._animate(x, y, time, easing.fn);\n\t\t\t}\n\t\t},\n\t\n\t\tscrollToElement: function (el, time, offsetX, offsetY, easing) {\n\t\t\tel = el.nodeType ? el : this.scroller.querySelector(el);\n\t\n\t\t\tif ( !el ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar pos = utils.offset(el);\n\t\n\t\t\tpos.left -= this.wrapperOffset.left;\n\t\t\tpos.top  -= this.wrapperOffset.top;\n\t\n\t\t\t// if offsetX/Y are true we center the element to the screen\n\t\t\tif ( offsetX === true ) {\n\t\t\t\toffsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);\n\t\t\t}\n\t\t\tif ( offsetY === true ) {\n\t\t\t\toffsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);\n\t\t\t}\n\t\n\t\t\tpos.left -= offsetX || 0;\n\t\t\tpos.top  -= offsetY || 0;\n\t\n\t\t\tpos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;\n\t\t\tpos.top  = pos.top  > 0 ? 0 : pos.top  < this.maxScrollY ? this.maxScrollY : pos.top;\n\t\n\t\t\ttime = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x-pos.left), Math.abs(this.y-pos.top)) : time;\n\t\n\t\t\tthis.scrollTo(pos.left, pos.top, time, easing);\n\t\t},\n\t\n\t\t_transitionTime: function (time) {\n\t\t\ttime = time || 0;\n\t\n\t\t\tvar durationProp = utils.style.transitionDuration;\n\t\t\tthis.scrollerStyle[durationProp] = time + 'ms';\n\t\n\t\t\tif ( !time && utils.isBadAndroid ) {\n\t\t\t\tthis.scrollerStyle[durationProp] = '0.0001ms';\n\t\t\t\t// remove 0.0001ms\n\t\t\t\tvar self = this;\n\t\t\t\trAF(function() {\n\t\t\t\t\tif(self.scrollerStyle[durationProp] === '0.0001ms') {\n\t\t\t\t\t\tself.scrollerStyle[durationProp] = '0s';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\n\t\t\tif ( this.indicators ) {\n\t\t\t\tfor ( var i = this.indicators.length; i--; ) {\n\t\t\t\t\tthis.indicators[i].transitionTime(time);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\n\t// INSERT POINT: _transitionTime\n\t\n\t\t},\n\t\n\t\t_transitionTimingFunction: function (easing) {\n\t\t\tthis.scrollerStyle[utils.style.transitionTimingFunction] = easing;\n\t\n\t\n\t\t\tif ( this.indicators ) {\n\t\t\t\tfor ( var i = this.indicators.length; i--; ) {\n\t\t\t\t\tthis.indicators[i].transitionTimingFunction(easing);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\n\t// INSERT POINT: _transitionTimingFunction\n\t\n\t\t},\n\t\n\t\t_translate: function (x, y) {\n\t\t\tif ( this.options.useTransform ) {\n\t\n\t/* REPLACE START: _translate */\n\t\n\t\t\t\tthis.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;\n\t\n\t/* REPLACE END: _translate */\n\t\n\t\t\t} else {\n\t\t\t\tx = Math.round(x);\n\t\t\t\ty = Math.round(y);\n\t\t\t\tthis.scrollerStyle.left = x + 'px';\n\t\t\t\tthis.scrollerStyle.top = y + 'px';\n\t\t\t}\n\t\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\n\t\n\t\tif ( this.indicators ) {\n\t\t\tfor ( var i = this.indicators.length; i--; ) {\n\t\t\t\tthis.indicators[i].updatePosition();\n\t\t\t}\n\t\t}\n\t\n\t\n\t// INSERT POINT: _translate\n\t\n\t\t},\n\t\n\t\t_initEvents: function (remove) {\n\t\t\tvar eventType = remove ? utils.removeEvent : utils.addEvent,\n\t\t\t\ttarget = this.options.bindToWrapper ? this.wrapper : window;\n\t\n\t\t\teventType(window, 'orientationchange', this);\n\t\t\teventType(window, 'resize', this);\n\t\n\t\t\tif ( this.options.click ) {\n\t\t\t\teventType(this.wrapper, 'click', this, true);\n\t\t\t}\n\t\n\t\t\tif ( !this.options.disableMouse ) {\n\t\t\t\teventType(this.wrapper, 'mousedown', this);\n\t\t\t\teventType(target, 'mousemove', this);\n\t\t\t\teventType(target, 'mousecancel', this);\n\t\t\t\teventType(target, 'mouseup', this);\n\t\t\t}\n\t\n\t\t\tif ( utils.hasPointer && !this.options.disablePointer ) {\n\t\t\t\teventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\t\teventType(target, utils.prefixPointerEvent('pointermove'), this);\n\t\t\t\teventType(target, utils.prefixPointerEvent('pointercancel'), this);\n\t\t\t\teventType(target, utils.prefixPointerEvent('pointerup'), this);\n\t\t\t}\n\t\n\t\t\tif ( utils.hasTouch && !this.options.disableTouch ) {\n\t\t\t\teventType(this.wrapper, 'touchstart', this);\n\t\t\t\teventType(target, 'touchmove', this);\n\t\t\t\teventType(target, 'touchcancel', this);\n\t\t\t\teventType(target, 'touchend', this);\n\t\t\t}\n\t\n\t\t\teventType(this.scroller, 'transitionend', this);\n\t\t\teventType(this.scroller, 'webkitTransitionEnd', this);\n\t\t\teventType(this.scroller, 'oTransitionEnd', this);\n\t\t\teventType(this.scroller, 'MSTransitionEnd', this);\n\t\t},\n\t\n\t\tgetComputedPosition: function () {\n\t\t\tvar matrix = window.getComputedStyle(this.scroller, null),\n\t\t\t\tx, y;\n\t\n\t\t\tif ( this.options.useTransform ) {\n\t\t\t\tmatrix = matrix[utils.style.transform].split(')')[0].split(', ');\n\t\t\t\tx = +(matrix[12] || matrix[4]);\n\t\t\t\ty = +(matrix[13] || matrix[5]);\n\t\t\t} else {\n\t\t\t\tx = +matrix.left.replace(/[^-\\d.]/g, '');\n\t\t\t\ty = +matrix.top.replace(/[^-\\d.]/g, '');\n\t\t\t}\n\t\n\t\t\treturn { x: x, y: y };\n\t\t},\n\t\t_initIndicators: function () {\n\t\t\tvar interactive = this.options.interactiveScrollbars,\n\t\t\t\tcustomStyle = typeof this.options.scrollbars != 'string',\n\t\t\t\tindicators = [],\n\t\t\t\tindicator;\n\t\n\t\t\tvar that = this;\n\t\n\t\t\tthis.indicators = [];\n\t\n\t\t\tif ( this.options.scrollbars ) {\n\t\t\t\t// Vertical scrollbar\n\t\t\t\tif ( this.options.scrollY ) {\n\t\t\t\t\tindicator = {\n\t\t\t\t\t\tel: createDefaultScrollbar('v', interactive, this.options.scrollbars),\n\t\t\t\t\t\tinteractive: interactive,\n\t\t\t\t\t\tdefaultScrollbars: true,\n\t\t\t\t\t\tcustomStyle: customStyle,\n\t\t\t\t\t\tresize: this.options.resizeScrollbars,\n\t\t\t\t\t\tshrink: this.options.shrinkScrollbars,\n\t\t\t\t\t\tfade: this.options.fadeScrollbars,\n\t\t\t\t\t\tlistenX: false\n\t\t\t\t\t};\n\t\n\t\t\t\t\tthis.wrapper.appendChild(indicator.el);\n\t\t\t\t\tindicators.push(indicator);\n\t\t\t\t}\n\t\n\t\t\t\t// Horizontal scrollbar\n\t\t\t\tif ( this.options.scrollX ) {\n\t\t\t\t\tindicator = {\n\t\t\t\t\t\tel: createDefaultScrollbar('h', interactive, this.options.scrollbars),\n\t\t\t\t\t\tinteractive: interactive,\n\t\t\t\t\t\tdefaultScrollbars: true,\n\t\t\t\t\t\tcustomStyle: customStyle,\n\t\t\t\t\t\tresize: this.options.resizeScrollbars,\n\t\t\t\t\t\tshrink: this.options.shrinkScrollbars,\n\t\t\t\t\t\tfade: this.options.fadeScrollbars,\n\t\t\t\t\t\tlistenY: false\n\t\t\t\t\t};\n\t\n\t\t\t\t\tthis.wrapper.appendChild(indicator.el);\n\t\t\t\t\tindicators.push(indicator);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( this.options.indicators ) {\n\t\t\t\t// TODO: check concat compatibility\n\t\t\t\tindicators = indicators.concat(this.options.indicators);\n\t\t\t}\n\t\n\t\t\tfor ( var i = indicators.length; i--; ) {\n\t\t\t\tthis.indicators.push( new Indicator(this, indicators[i]) );\n\t\t\t}\n\t\n\t\t\t// TODO: check if we can use array.map (wide compatibility and performance issues)\n\t\t\tfunction _indicatorsMap (fn) {\n\t\t\t\tif (that.indicators) {\n\t\t\t\t\tfor ( var i = that.indicators.length; i--; ) {\n\t\t\t\t\t\tfn.call(that.indicators[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( this.options.fadeScrollbars ) {\n\t\t\t\tthis.on('scrollEnd', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\n\t\t\t\tthis.on('scrollCancel', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\n\t\t\t\tthis.on('scrollStart', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade(1);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\n\t\t\t\tthis.on('beforeScrollStart', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade(1, true);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\n\t\n\t\t\tthis.on('refresh', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t});\n\t\t\t});\n\t\n\t\t\tthis.on('destroy', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t});\n\t\n\t\t\t\tdelete this.indicators;\n\t\t\t});\n\t\t},\n\t\n\t\t_initWheel: function () {\n\t\t\tutils.addEvent(this.wrapper, 'wheel', this);\n\t\t\tutils.addEvent(this.wrapper, 'mousewheel', this);\n\t\t\tutils.addEvent(this.wrapper, 'DOMMouseScroll', this);\n\t\n\t\t\tthis.on('destroy', function () {\n\t\t\t\tclearTimeout(this.wheelTimeout);\n\t\t\t\tthis.wheelTimeout = null;\n\t\t\t\tutils.removeEvent(this.wrapper, 'wheel', this);\n\t\t\t\tutils.removeEvent(this.wrapper, 'mousewheel', this);\n\t\t\t\tutils.removeEvent(this.wrapper, 'DOMMouseScroll', this);\n\t\t\t});\n\t\t},\n\t\n\t\t_wheel: function (e) {\n\t\t\tif ( !this.enabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\te.preventDefault();\n\t\n\t\t\tvar wheelDeltaX, wheelDeltaY,\n\t\t\t\tnewX, newY,\n\t\t\t\tthat = this;\n\t\n\t\t\tif ( this.wheelTimeout === undefined ) {\n\t\t\t\tthat._execEvent('scrollStart');\n\t\t\t}\n\t\n\t\t\t// Execute the scrollEnd event after 400ms the wheel stopped scrolling\n\t\t\tclearTimeout(this.wheelTimeout);\n\t\t\tthis.wheelTimeout = setTimeout(function () {\n\t\t\t\tif(!that.options.snap) {\n\t\t\t\t\tthat._execEvent('scrollEnd');\n\t\t\t\t}\n\t\t\t\tthat.wheelTimeout = undefined;\n\t\t\t}, 400);\n\t\n\t\t\tif ( 'deltaX' in e ) {\n\t\t\t\tif (e.deltaMode === 1) {\n\t\t\t\t\twheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;\n\t\t\t\t\twheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;\n\t\t\t\t} else {\n\t\t\t\t\twheelDeltaX = -e.deltaX;\n\t\t\t\t\twheelDeltaY = -e.deltaY;\n\t\t\t\t}\n\t\t\t} else if ( 'wheelDeltaX' in e ) {\n\t\t\t\twheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;\n\t\t\t\twheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;\n\t\t\t} else if ( 'wheelDelta' in e ) {\n\t\t\t\twheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;\n\t\t\t} else if ( 'detail' in e ) {\n\t\t\t\twheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\twheelDeltaX *= this.options.invertWheelDirection;\n\t\t\twheelDeltaY *= this.options.invertWheelDirection;\n\t\n\t\t\tif ( !this.hasVerticalScroll ) {\n\t\t\t\twheelDeltaX = wheelDeltaY;\n\t\t\t\twheelDeltaY = 0;\n\t\t\t}\n\t\n\t\t\tif ( this.options.snap ) {\n\t\t\t\tnewX = this.currentPage.pageX;\n\t\t\t\tnewY = this.currentPage.pageY;\n\t\n\t\t\t\tif ( wheelDeltaX > 0 ) {\n\t\t\t\t\tnewX--;\n\t\t\t\t} else if ( wheelDeltaX < 0 ) {\n\t\t\t\t\tnewX++;\n\t\t\t\t}\n\t\n\t\t\t\tif ( wheelDeltaY > 0 ) {\n\t\t\t\t\tnewY--;\n\t\t\t\t} else if ( wheelDeltaY < 0 ) {\n\t\t\t\t\tnewY++;\n\t\t\t\t}\n\t\n\t\t\t\tthis.goToPage(newX, newY);\n\t\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tnewX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);\n\t\t\tnewY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);\n\t\n\t\t\tthis.directionX = wheelDeltaX > 0 ? -1 : wheelDeltaX < 0 ? 1 : 0;\n\t\t\tthis.directionY = wheelDeltaY > 0 ? -1 : wheelDeltaY < 0 ? 1 : 0;\n\t\n\t\t\tif ( newX > 0 ) {\n\t\t\t\tnewX = 0;\n\t\t\t} else if ( newX < this.maxScrollX ) {\n\t\t\t\tnewX = this.maxScrollX;\n\t\t\t}\n\t\n\t\t\tif ( newY > 0 ) {\n\t\t\t\tnewY = 0;\n\t\t\t} else if ( newY < this.maxScrollY ) {\n\t\t\t\tnewY = this.maxScrollY;\n\t\t\t}\n\t\n\t\t\tthis.scrollTo(newX, newY, 0);\n\t\n\t// INSERT POINT: _wheel\n\t\t},\n\t\n\t\t_initSnap: function () {\n\t\t\tthis.currentPage = {};\n\t\n\t\t\tif ( typeof this.options.snap == 'string' ) {\n\t\t\t\tthis.options.snap = this.scroller.querySelectorAll(this.options.snap);\n\t\t\t}\n\t\n\t\t\tthis.on('refresh', function () {\n\t\t\t\tvar i = 0, l,\n\t\t\t\t\tm = 0, n,\n\t\t\t\t\tcx, cy,\n\t\t\t\t\tx = 0, y,\n\t\t\t\t\tstepX = this.options.snapStepX || this.wrapperWidth,\n\t\t\t\t\tstepY = this.options.snapStepY || this.wrapperHeight,\n\t\t\t\t\tel;\n\t\n\t\t\t\tthis.pages = [];\n\t\n\t\t\t\tif ( !this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.options.snap === true ) {\n\t\t\t\t\tcx = Math.round( stepX / 2 );\n\t\t\t\t\tcy = Math.round( stepY / 2 );\n\t\n\t\t\t\t\twhile ( x > -this.scrollerWidth ) {\n\t\t\t\t\t\tthis.pages[i] = [];\n\t\t\t\t\t\tl = 0;\n\t\t\t\t\t\ty = 0;\n\t\n\t\t\t\t\t\twhile ( y > -this.scrollerHeight ) {\n\t\t\t\t\t\t\tthis.pages[i][l] = {\n\t\t\t\t\t\t\t\tx: Math.max(x, this.maxScrollX),\n\t\t\t\t\t\t\t\ty: Math.max(y, this.maxScrollY),\n\t\t\t\t\t\t\t\twidth: stepX,\n\t\t\t\t\t\t\t\theight: stepY,\n\t\t\t\t\t\t\t\tcx: x - cx,\n\t\t\t\t\t\t\t\tcy: y - cy\n\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\ty -= stepY;\n\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tx -= stepX;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tel = this.options.snap;\n\t\t\t\t\tl = el.length;\n\t\t\t\t\tn = -1;\n\t\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\tif ( i === 0 || el[i].offsetLeft <= el[i-1].offsetLeft ) {\n\t\t\t\t\t\t\tm = 0;\n\t\t\t\t\t\t\tn++;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( !this.pages[m] ) {\n\t\t\t\t\t\t\tthis.pages[m] = [];\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tx = Math.max(-el[i].offsetLeft, this.maxScrollX);\n\t\t\t\t\t\ty = Math.max(-el[i].offsetTop, this.maxScrollY);\n\t\t\t\t\t\tcx = x - Math.round(el[i].offsetWidth / 2);\n\t\t\t\t\t\tcy = y - Math.round(el[i].offsetHeight / 2);\n\t\n\t\t\t\t\t\tthis.pages[m][n] = {\n\t\t\t\t\t\t\tx: x,\n\t\t\t\t\t\t\ty: y,\n\t\t\t\t\t\t\twidth: el[i].offsetWidth,\n\t\t\t\t\t\t\theight: el[i].offsetHeight,\n\t\t\t\t\t\t\tcx: cx,\n\t\t\t\t\t\t\tcy: cy\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( x > this.maxScrollX ) {\n\t\t\t\t\t\t\tm++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tthis.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);\n\t\n\t\t\t\t// Update snap threshold if needed\n\t\t\t\tif ( this.options.snapThreshold % 1 === 0 ) {\n\t\t\t\t\tthis.snapThresholdX = this.options.snapThreshold;\n\t\t\t\t\tthis.snapThresholdY = this.options.snapThreshold;\n\t\t\t\t} else {\n\t\t\t\t\tthis.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);\n\t\t\t\t\tthis.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tthis.on('flick', function () {\n\t\t\t\tvar time = this.options.snapSpeed || Math.max(\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\tMath.min(Math.abs(this.x - this.startX), 1000),\n\t\t\t\t\t\t\tMath.min(Math.abs(this.y - this.startY), 1000)\n\t\t\t\t\t\t), 300);\n\t\n\t\t\t\tthis.goToPage(\n\t\t\t\t\tthis.currentPage.pageX + this.directionX,\n\t\t\t\t\tthis.currentPage.pageY + this.directionY,\n\t\t\t\t\ttime\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\t\n\t\t_nearestSnap: function (x, y) {\n\t\t\tif ( !this.pages.length ) {\n\t\t\t\treturn { x: 0, y: 0, pageX: 0, pageY: 0 };\n\t\t\t}\n\t\n\t\t\tvar i = 0,\n\t\t\t\tl = this.pages.length,\n\t\t\t\tm = 0;\n\t\n\t\t\t// Check if we exceeded the snap threshold\n\t\t\tif ( Math.abs(x - this.absStartX) < this.snapThresholdX &&\n\t\t\t\tMath.abs(y - this.absStartY) < this.snapThresholdY ) {\n\t\t\t\treturn this.currentPage;\n\t\t\t}\n\t\n\t\t\tif ( x > 0 ) {\n\t\t\t\tx = 0;\n\t\t\t} else if ( x < this.maxScrollX ) {\n\t\t\t\tx = this.maxScrollX;\n\t\t\t}\n\t\n\t\t\tif ( y > 0 ) {\n\t\t\t\ty = 0;\n\t\t\t} else if ( y < this.maxScrollY ) {\n\t\t\t\ty = this.maxScrollY;\n\t\t\t}\n\t\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( x >= this.pages[i][0].cx ) {\n\t\t\t\t\tx = this.pages[i][0].x;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tl = this.pages[i].length;\n\t\n\t\t\tfor ( ; m < l; m++ ) {\n\t\t\t\tif ( y >= this.pages[0][m].cy ) {\n\t\t\t\t\ty = this.pages[0][m].y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( i == this.currentPage.pageX ) {\n\t\t\t\ti += this.directionX;\n\t\n\t\t\t\tif ( i < 0 ) {\n\t\t\t\t\ti = 0;\n\t\t\t\t} else if ( i >= this.pages.length ) {\n\t\t\t\t\ti = this.pages.length - 1;\n\t\t\t\t}\n\t\n\t\t\t\tx = this.pages[i][0].x;\n\t\t\t}\n\t\n\t\t\tif ( m == this.currentPage.pageY ) {\n\t\t\t\tm += this.directionY;\n\t\n\t\t\t\tif ( m < 0 ) {\n\t\t\t\t\tm = 0;\n\t\t\t\t} else if ( m >= this.pages[0].length ) {\n\t\t\t\t\tm = this.pages[0].length - 1;\n\t\t\t\t}\n\t\n\t\t\t\ty = this.pages[0][m].y;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tpageX: i,\n\t\t\t\tpageY: m\n\t\t\t};\n\t\t},\n\t\n\t\tgoToPage: function (x, y, time, easing) {\n\t\t\teasing = easing || this.options.bounceEasing;\n\t\n\t\t\tif ( x >= this.pages.length ) {\n\t\t\t\tx = this.pages.length - 1;\n\t\t\t} else if ( x < 0 ) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\n\t\t\tif ( y >= this.pages[x].length ) {\n\t\t\t\ty = this.pages[x].length - 1;\n\t\t\t} else if ( y < 0 ) {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\n\t\t\tvar posX = this.pages[x][y].x,\n\t\t\t\tposY = this.pages[x][y].y;\n\t\n\t\t\ttime = time === undefined ? this.options.snapSpeed || Math.max(\n\t\t\t\tMath.max(\n\t\t\t\t\tMath.min(Math.abs(posX - this.x), 1000),\n\t\t\t\t\tMath.min(Math.abs(posY - this.y), 1000)\n\t\t\t\t), 300) : time;\n\t\n\t\t\tthis.currentPage = {\n\t\t\t\tx: posX,\n\t\t\t\ty: posY,\n\t\t\t\tpageX: x,\n\t\t\t\tpageY: y\n\t\t\t};\n\t\n\t\t\tthis.scrollTo(posX, posY, time, easing);\n\t\t},\n\t\n\t\tnext: function (time, easing) {\n\t\t\tvar x = this.currentPage.pageX,\n\t\t\t\ty = this.currentPage.pageY;\n\t\n\t\t\tx++;\n\t\n\t\t\tif ( x >= this.pages.length && this.hasVerticalScroll ) {\n\t\t\t\tx = 0;\n\t\t\t\ty++;\n\t\t\t}\n\t\n\t\t\tthis.goToPage(x, y, time, easing);\n\t\t},\n\t\n\t\tprev: function (time, easing) {\n\t\t\tvar x = this.currentPage.pageX,\n\t\t\t\ty = this.currentPage.pageY;\n\t\n\t\t\tx--;\n\t\n\t\t\tif ( x < 0 && this.hasVerticalScroll ) {\n\t\t\t\tx = 0;\n\t\t\t\ty--;\n\t\t\t}\n\t\n\t\t\tthis.goToPage(x, y, time, easing);\n\t\t},\n\t\n\t\t_initKeys: function (e) {\n\t\t\t// default key bindings\n\t\t\tvar keys = {\n\t\t\t\tpageUp: 33,\n\t\t\t\tpageDown: 34,\n\t\t\t\tend: 35,\n\t\t\t\thome: 36,\n\t\t\t\tleft: 37,\n\t\t\t\tup: 38,\n\t\t\t\tright: 39,\n\t\t\t\tdown: 40\n\t\t\t};\n\t\t\tvar i;\n\t\n\t\t\t// if you give me characters I give you keycode\n\t\t\tif ( typeof this.options.keyBindings == 'object' ) {\n\t\t\t\tfor ( i in this.options.keyBindings ) {\n\t\t\t\t\tif ( typeof this.options.keyBindings[i] == 'string' ) {\n\t\t\t\t\t\tthis.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.options.keyBindings = {};\n\t\t\t}\n\t\n\t\t\tfor ( i in keys ) {\n\t\t\t\tthis.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];\n\t\t\t}\n\t\n\t\t\tutils.addEvent(window, 'keydown', this);\n\t\n\t\t\tthis.on('destroy', function () {\n\t\t\t\tutils.removeEvent(window, 'keydown', this);\n\t\t\t});\n\t\t},\n\t\n\t\t_key: function (e) {\n\t\t\tif ( !this.enabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar snap = this.options.snap,\t// we are using this alot, better to cache it\n\t\t\t\tnewX = snap ? this.currentPage.pageX : this.x,\n\t\t\t\tnewY = snap ? this.currentPage.pageY : this.y,\n\t\t\t\tnow = utils.getTime(),\n\t\t\t\tprevTime = this.keyTime || 0,\n\t\t\t\tacceleration = 0.250,\n\t\t\t\tpos;\n\t\n\t\t\tif ( this.options.useTransition && this.isInTransition ) {\n\t\t\t\tpos = this.getComputedPosition();\n\t\n\t\t\t\tthis._translate(Math.round(pos.x), Math.round(pos.y));\n\t\t\t\tthis.isInTransition = false;\n\t\t\t}\n\t\n\t\t\tthis.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;\n\t\n\t\t\tswitch ( e.keyCode ) {\n\t\t\t\tcase this.options.keyBindings.pageUp:\n\t\t\t\t\tif ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {\n\t\t\t\t\t\tnewX += snap ? 1 : this.wrapperWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewY += snap ? 1 : this.wrapperHeight;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.pageDown:\n\t\t\t\t\tif ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {\n\t\t\t\t\t\tnewX -= snap ? 1 : this.wrapperWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewY -= snap ? 1 : this.wrapperHeight;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.end:\n\t\t\t\t\tnewX = snap ? this.pages.length-1 : this.maxScrollX;\n\t\t\t\t\tnewY = snap ? this.pages[0].length-1 : this.maxScrollY;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.home:\n\t\t\t\t\tnewX = 0;\n\t\t\t\t\tnewY = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.left:\n\t\t\t\t\tnewX += snap ? -1 : 5 + this.keyAcceleration>>0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.up:\n\t\t\t\t\tnewY += snap ? 1 : 5 + this.keyAcceleration>>0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.right:\n\t\t\t\t\tnewX -= snap ? -1 : 5 + this.keyAcceleration>>0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.down:\n\t\t\t\t\tnewY -= snap ? 1 : 5 + this.keyAcceleration>>0;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( snap ) {\n\t\t\t\tthis.goToPage(newX, newY);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( newX > 0 ) {\n\t\t\t\tnewX = 0;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t} else if ( newX < this.maxScrollX ) {\n\t\t\t\tnewX = this.maxScrollX;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t}\n\t\n\t\t\tif ( newY > 0 ) {\n\t\t\t\tnewY = 0;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t} else if ( newY < this.maxScrollY ) {\n\t\t\t\tnewY = this.maxScrollY;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t}\n\t\n\t\t\tthis.scrollTo(newX, newY, 0);\n\t\n\t\t\tthis.keyTime = now;\n\t\t},\n\t\n\t\t_animate: function (destX, destY, duration, easingFn) {\n\t\t\tvar that = this,\n\t\t\t\tstartX = this.x,\n\t\t\t\tstartY = this.y,\n\t\t\t\tstartTime = utils.getTime(),\n\t\t\t\tdestTime = startTime + duration;\n\t\n\t\t\tfunction step () {\n\t\t\t\tvar now = utils.getTime(),\n\t\t\t\t\tnewX, newY,\n\t\t\t\t\teasing;\n\t\n\t\t\t\tif ( now >= destTime ) {\n\t\t\t\t\tthat.isAnimating = false;\n\t\t\t\t\tthat._translate(destX, destY);\n\t\n\t\t\t\t\tif ( !that.resetPosition(that.options.bounceTime) ) {\n\t\t\t\t\t\tthat._execEvent('scrollEnd');\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tnow = ( now - startTime ) / duration;\n\t\t\t\teasing = easingFn(now);\n\t\t\t\tnewX = ( destX - startX ) * easing + startX;\n\t\t\t\tnewY = ( destY - startY ) * easing + startY;\n\t\t\t\tthat._translate(newX, newY);\n\t\n\t\t\t\tif ( that.isAnimating ) {\n\t\t\t\t\trAF(step);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis.isAnimating = true;\n\t\t\tstep();\n\t\t},\n\t\thandleEvent: function (e) {\n\t\t\tswitch ( e.type ) {\n\t\t\t\tcase 'touchstart':\n\t\t\t\tcase 'pointerdown':\n\t\t\t\tcase 'MSPointerDown':\n\t\t\t\tcase 'mousedown':\n\t\t\t\t\tthis._start(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchmove':\n\t\t\t\tcase 'pointermove':\n\t\t\t\tcase 'MSPointerMove':\n\t\t\t\tcase 'mousemove':\n\t\t\t\t\tthis._move(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchend':\n\t\t\t\tcase 'pointerup':\n\t\t\t\tcase 'MSPointerUp':\n\t\t\t\tcase 'mouseup':\n\t\t\t\tcase 'touchcancel':\n\t\t\t\tcase 'pointercancel':\n\t\t\t\tcase 'MSPointerCancel':\n\t\t\t\tcase 'mousecancel':\n\t\t\t\t\tthis._end(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'orientationchange':\n\t\t\t\tcase 'resize':\n\t\t\t\t\tthis._resize();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'transitionend':\n\t\t\t\tcase 'webkitTransitionEnd':\n\t\t\t\tcase 'oTransitionEnd':\n\t\t\t\tcase 'MSTransitionEnd':\n\t\t\t\t\tthis._transitionEnd(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'wheel':\n\t\t\t\tcase 'DOMMouseScroll':\n\t\t\t\tcase 'mousewheel':\n\t\t\t\t\tthis._wheel(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'keydown':\n\t\t\t\t\tthis._key(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'click':\n\t\t\t\t\tif ( this.enabled && !e._constructed ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\tfunction createDefaultScrollbar (direction, interactive, type) {\n\t\tvar scrollbar = document.createElement('div'),\n\t\t\tindicator = document.createElement('div');\n\t\n\t\tif ( type === true ) {\n\t\t\tscrollbar.style.cssText = 'position:absolute;z-index:9999';\n\t\t\tindicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';\n\t\t}\n\t\n\t\tindicator.className = 'iScrollIndicator';\n\t\n\t\tif ( direction == 'h' ) {\n\t\t\tif ( type === true ) {\n\t\t\t\tscrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';\n\t\t\t\tindicator.style.height = '100%';\n\t\t\t}\n\t\t\tscrollbar.className = 'iScrollHorizontalScrollbar';\n\t\t} else {\n\t\t\tif ( type === true ) {\n\t\t\t\tscrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';\n\t\t\t\tindicator.style.width = '100%';\n\t\t\t}\n\t\t\tscrollbar.className = 'iScrollVerticalScrollbar';\n\t\t}\n\t\n\t\tscrollbar.style.cssText += ';overflow:hidden';\n\t\n\t\tif ( !interactive ) {\n\t\t\tscrollbar.style.pointerEvents = 'none';\n\t\t}\n\t\n\t\tscrollbar.appendChild(indicator);\n\t\n\t\treturn scrollbar;\n\t}\n\t\n\tfunction Indicator (scroller, options) {\n\t\tthis.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;\n\t\tthis.wrapperStyle = this.wrapper.style;\n\t\tthis.indicator = this.wrapper.children[0];\n\t\tthis.indicatorStyle = this.indicator.style;\n\t\tthis.scroller = scroller;\n\t\n\t\tthis.options = {\n\t\t\tlistenX: true,\n\t\t\tlistenY: true,\n\t\t\tinteractive: false,\n\t\t\tresize: true,\n\t\t\tdefaultScrollbars: false,\n\t\t\tshrink: false,\n\t\t\tfade: false,\n\t\t\tspeedRatioX: 0,\n\t\t\tspeedRatioY: 0\n\t\t};\n\t\n\t\tfor ( var i in options ) {\n\t\t\tthis.options[i] = options[i];\n\t\t}\n\t\n\t\tthis.sizeRatioX = 1;\n\t\tthis.sizeRatioY = 1;\n\t\tthis.maxPosX = 0;\n\t\tthis.maxPosY = 0;\n\t\n\t\tif ( this.options.interactive ) {\n\t\t\tif ( !this.options.disableTouch ) {\n\t\t\t\tutils.addEvent(this.indicator, 'touchstart', this);\n\t\t\t\tutils.addEvent(window, 'touchend', this);\n\t\t\t}\n\t\t\tif ( !this.options.disablePointer ) {\n\t\t\t\tutils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\t\tutils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);\n\t\t\t}\n\t\t\tif ( !this.options.disableMouse ) {\n\t\t\t\tutils.addEvent(this.indicator, 'mousedown', this);\n\t\t\t\tutils.addEvent(window, 'mouseup', this);\n\t\t\t}\n\t\t}\n\t\n\t\tif ( this.options.fade ) {\n\t\t\tthis.wrapperStyle[utils.style.transform] = this.scroller.translateZ;\n\t\t\tvar durationProp = utils.style.transitionDuration;\n\t\t\tthis.wrapperStyle[durationProp] = utils.isBadAndroid ? '0.0001ms' : '0ms';\n\t\t\t// remove 0.0001ms\n\t\t\tvar self = this;\n\t\t\tif(utils.isBadAndroid) {\n\t\t\t\trAF(function() {\n\t\t\t\t\tif(self.wrapperStyle[durationProp] === '0.0001ms') {\n\t\t\t\t\t\tself.wrapperStyle[durationProp] = '0s';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.wrapperStyle.opacity = '0';\n\t\t}\n\t}\n\t\n\tIndicator.prototype = {\n\t\thandleEvent: function (e) {\n\t\t\tswitch ( e.type ) {\n\t\t\t\tcase 'touchstart':\n\t\t\t\tcase 'pointerdown':\n\t\t\t\tcase 'MSPointerDown':\n\t\t\t\tcase 'mousedown':\n\t\t\t\t\tthis._start(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchmove':\n\t\t\t\tcase 'pointermove':\n\t\t\t\tcase 'MSPointerMove':\n\t\t\t\tcase 'mousemove':\n\t\t\t\t\tthis._move(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchend':\n\t\t\t\tcase 'pointerup':\n\t\t\t\tcase 'MSPointerUp':\n\t\t\t\tcase 'mouseup':\n\t\t\t\tcase 'touchcancel':\n\t\t\t\tcase 'pointercancel':\n\t\t\t\tcase 'MSPointerCancel':\n\t\t\t\tcase 'mousecancel':\n\t\t\t\t\tthis._end(e);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\n\t\tdestroy: function () {\n\t\t\tif ( this.options.fadeScrollbars ) {\n\t\t\t\tclearTimeout(this.fadeTimeout);\n\t\t\t\tthis.fadeTimeout = null;\n\t\t\t}\n\t\t\tif ( this.options.interactive ) {\n\t\t\t\tutils.removeEvent(this.indicator, 'touchstart', this);\n\t\t\t\tutils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\t\tutils.removeEvent(this.indicator, 'mousedown', this);\n\t\n\t\t\t\tutils.removeEvent(window, 'touchmove', this);\n\t\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\t\tutils.removeEvent(window, 'mousemove', this);\n\t\n\t\t\t\tutils.removeEvent(window, 'touchend', this);\n\t\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);\n\t\t\t\tutils.removeEvent(window, 'mouseup', this);\n\t\t\t}\n\t\n\t\t\tif ( this.options.defaultScrollbars ) {\n\t\t\t\tthis.wrapper.parentNode.removeChild(this.wrapper);\n\t\t\t}\n\t\t},\n\t\n\t\t_start: function (e) {\n\t\t\tvar point = e.touches ? e.touches[0] : e;\n\t\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\n\t\t\tthis.transitionTime();\n\t\n\t\t\tthis.initiated = true;\n\t\t\tthis.moved = false;\n\t\t\tthis.lastPointX\t= point.pageX;\n\t\t\tthis.lastPointY\t= point.pageY;\n\t\n\t\t\tthis.startTime\t= utils.getTime();\n\t\n\t\t\tif ( !this.options.disableTouch ) {\n\t\t\t\tutils.addEvent(window, 'touchmove', this);\n\t\t\t}\n\t\t\tif ( !this.options.disablePointer ) {\n\t\t\t\tutils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\t}\n\t\t\tif ( !this.options.disableMouse ) {\n\t\t\t\tutils.addEvent(window, 'mousemove', this);\n\t\t\t}\n\t\n\t\t\tthis.scroller._execEvent('beforeScrollStart');\n\t\t},\n\t\n\t\t_move: function (e) {\n\t\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\t\tdeltaX, deltaY,\n\t\t\t\tnewX, newY,\n\t\t\t\ttimestamp = utils.getTime();\n\t\n\t\t\tif ( !this.moved ) {\n\t\t\t\tthis.scroller._execEvent('scrollStart');\n\t\t\t}\n\t\n\t\t\tthis.moved = true;\n\t\n\t\t\tdeltaX = point.pageX - this.lastPointX;\n\t\t\tthis.lastPointX = point.pageX;\n\t\n\t\t\tdeltaY = point.pageY - this.lastPointY;\n\t\t\tthis.lastPointY = point.pageY;\n\t\n\t\t\tnewX = this.x + deltaX;\n\t\t\tnewY = this.y + deltaY;\n\t\n\t\t\tthis._pos(newX, newY);\n\t\n\t// INSERT POINT: indicator._move\n\t\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t},\n\t\n\t\t_end: function (e) {\n\t\t\tif ( !this.initiated ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis.initiated = false;\n\t\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\n\t\t\tutils.removeEvent(window, 'touchmove', this);\n\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\tutils.removeEvent(window, 'mousemove', this);\n\t\n\t\t\tif ( this.scroller.options.snap ) {\n\t\t\t\tvar snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);\n\t\n\t\t\t\tvar time = this.options.snapSpeed || Math.max(\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\tMath.min(Math.abs(this.scroller.x - snap.x), 1000),\n\t\t\t\t\t\t\tMath.min(Math.abs(this.scroller.y - snap.y), 1000)\n\t\t\t\t\t\t), 300);\n\t\n\t\t\t\tif ( this.scroller.x != snap.x || this.scroller.y != snap.y ) {\n\t\t\t\t\tthis.scroller.directionX = 0;\n\t\t\t\t\tthis.scroller.directionY = 0;\n\t\t\t\t\tthis.scroller.currentPage = snap;\n\t\t\t\t\tthis.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( this.moved ) {\n\t\t\t\tthis.scroller._execEvent('scrollEnd');\n\t\t\t}\n\t\t},\n\t\n\t\ttransitionTime: function (time) {\n\t\t\ttime = time || 0;\n\t\t\tvar durationProp = utils.style.transitionDuration;\n\t\t\tthis.indicatorStyle[durationProp] = time + 'ms';\n\t\n\t\t\tif ( !time && utils.isBadAndroid ) {\n\t\t\t\tthis.indicatorStyle[durationProp] = '0.0001ms';\n\t\t\t\t// remove 0.0001ms\n\t\t\t\tvar self = this;\n\t\t\t\trAF(function() {\n\t\t\t\t\tif(self.indicatorStyle[durationProp] === '0.0001ms') {\n\t\t\t\t\t\tself.indicatorStyle[durationProp] = '0s';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\n\t\ttransitionTimingFunction: function (easing) {\n\t\t\tthis.indicatorStyle[utils.style.transitionTimingFunction] = easing;\n\t\t},\n\t\n\t\trefresh: function () {\n\t\t\tthis.transitionTime();\n\t\n\t\t\tif ( this.options.listenX && !this.options.listenY ) {\n\t\t\t\tthis.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';\n\t\t\t} else if ( this.options.listenY && !this.options.listenX ) {\n\t\t\t\tthis.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';\n\t\t\t} else {\n\t\t\t\tthis.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';\n\t\t\t}\n\t\n\t\t\tif ( this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll ) {\n\t\t\t\tutils.addClass(this.wrapper, 'iScrollBothScrollbars');\n\t\t\t\tutils.removeClass(this.wrapper, 'iScrollLoneScrollbar');\n\t\n\t\t\t\tif ( this.options.defaultScrollbars && this.options.customStyle ) {\n\t\t\t\t\tif ( this.options.listenX ) {\n\t\t\t\t\t\tthis.wrapper.style.right = '8px';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.wrapper.style.bottom = '8px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tutils.removeClass(this.wrapper, 'iScrollBothScrollbars');\n\t\t\t\tutils.addClass(this.wrapper, 'iScrollLoneScrollbar');\n\t\n\t\t\t\tif ( this.options.defaultScrollbars && this.options.customStyle ) {\n\t\t\t\t\tif ( this.options.listenX ) {\n\t\t\t\t\t\tthis.wrapper.style.right = '2px';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.wrapper.style.bottom = '2px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar r = this.wrapper.offsetHeight;\t// force refresh\n\t\n\t\t\tif ( this.options.listenX ) {\n\t\t\t\tthis.wrapperWidth = this.wrapper.clientWidth;\n\t\t\t\tif ( this.options.resize ) {\n\t\t\t\t\tthis.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);\n\t\t\t\t\tthis.indicatorStyle.width = this.indicatorWidth + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tthis.indicatorWidth = this.indicator.clientWidth;\n\t\t\t\t}\n\t\n\t\t\t\tthis.maxPosX = this.wrapperWidth - this.indicatorWidth;\n\t\n\t\t\t\tif ( this.options.shrink == 'clip' ) {\n\t\t\t\t\tthis.minBoundaryX = -this.indicatorWidth + 8;\n\t\t\t\t\tthis.maxBoundaryX = this.wrapperWidth - 8;\n\t\t\t\t} else {\n\t\t\t\t\tthis.minBoundaryX = 0;\n\t\t\t\t\tthis.maxBoundaryX = this.maxPosX;\n\t\t\t\t}\n\t\n\t\t\t\tthis.sizeRatioX = this.options.speedRatioX || (this.scroller.maxScrollX && (this.maxPosX / this.scroller.maxScrollX));\n\t\t\t}\n\t\n\t\t\tif ( this.options.listenY ) {\n\t\t\t\tthis.wrapperHeight = this.wrapper.clientHeight;\n\t\t\t\tif ( this.options.resize ) {\n\t\t\t\t\tthis.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);\n\t\t\t\t\tthis.indicatorStyle.height = this.indicatorHeight + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tthis.indicatorHeight = this.indicator.clientHeight;\n\t\t\t\t}\n\t\n\t\t\t\tthis.maxPosY = this.wrapperHeight - this.indicatorHeight;\n\t\n\t\t\t\tif ( this.options.shrink == 'clip' ) {\n\t\t\t\t\tthis.minBoundaryY = -this.indicatorHeight + 8;\n\t\t\t\t\tthis.maxBoundaryY = this.wrapperHeight - 8;\n\t\t\t\t} else {\n\t\t\t\t\tthis.minBoundaryY = 0;\n\t\t\t\t\tthis.maxBoundaryY = this.maxPosY;\n\t\t\t\t}\n\t\n\t\t\t\tthis.maxPosY = this.wrapperHeight - this.indicatorHeight;\n\t\t\t\tthis.sizeRatioY = this.options.speedRatioY || (this.scroller.maxScrollY && (this.maxPosY / this.scroller.maxScrollY));\n\t\t\t}\n\t\n\t\t\tthis.updatePosition();\n\t\t},\n\t\n\t\tupdatePosition: function () {\n\t\t\tvar x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,\n\t\t\t\ty = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;\n\t\n\t\t\tif ( !this.options.ignoreBoundaries ) {\n\t\t\t\tif ( x < this.minBoundaryX ) {\n\t\t\t\t\tif ( this.options.shrink == 'scale' ) {\n\t\t\t\t\t\tthis.width = Math.max(this.indicatorWidth + x, 8);\n\t\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\tx = this.minBoundaryX;\n\t\t\t\t} else if ( x > this.maxBoundaryX ) {\n\t\t\t\t\tif ( this.options.shrink == 'scale' ) {\n\t\t\t\t\t\tthis.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);\n\t\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t\t\tx = this.maxPosX + this.indicatorWidth - this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = this.maxBoundaryX;\n\t\t\t\t\t}\n\t\t\t\t} else if ( this.options.shrink == 'scale' && this.width != this.indicatorWidth ) {\n\t\t\t\t\tthis.width = this.indicatorWidth;\n\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t}\n\t\n\t\t\t\tif ( y < this.minBoundaryY ) {\n\t\t\t\t\tif ( this.options.shrink == 'scale' ) {\n\t\t\t\t\t\tthis.height = Math.max(this.indicatorHeight + y * 3, 8);\n\t\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\ty = this.minBoundaryY;\n\t\t\t\t} else if ( y > this.maxBoundaryY ) {\n\t\t\t\t\tif ( this.options.shrink == 'scale' ) {\n\t\t\t\t\t\tthis.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);\n\t\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t\t\ty = this.maxPosY + this.indicatorHeight - this.height;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = this.maxBoundaryY;\n\t\t\t\t\t}\n\t\t\t\t} else if ( this.options.shrink == 'scale' && this.height != this.indicatorHeight ) {\n\t\t\t\t\tthis.height = this.indicatorHeight;\n\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\n\t\t\tif ( this.scroller.options.useTransform ) {\n\t\t\t\tthis.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;\n\t\t\t} else {\n\t\t\t\tthis.indicatorStyle.left = x + 'px';\n\t\t\t\tthis.indicatorStyle.top = y + 'px';\n\t\t\t}\n\t\t},\n\t\n\t\t_pos: function (x, y) {\n\t\t\tif ( x < 0 ) {\n\t\t\t\tx = 0;\n\t\t\t} else if ( x > this.maxPosX ) {\n\t\t\t\tx = this.maxPosX;\n\t\t\t}\n\t\n\t\t\tif ( y < 0 ) {\n\t\t\t\ty = 0;\n\t\t\t} else if ( y > this.maxPosY ) {\n\t\t\t\ty = this.maxPosY;\n\t\t\t}\n\t\n\t\t\tx = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;\n\t\t\ty = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;\n\t\n\t\t\tthis.scroller.scrollTo(x, y);\n\t\t},\n\t\n\t\tfade: function (val, hold) {\n\t\t\tif ( hold && !this.visible ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tclearTimeout(this.fadeTimeout);\n\t\t\tthis.fadeTimeout = null;\n\t\n\t\t\tvar time = val ? 250 : 500,\n\t\t\t\tdelay = val ? 0 : 300;\n\t\n\t\t\tval = val ? '1' : '0';\n\t\n\t\t\tthis.wrapperStyle[utils.style.transitionDuration] = time + 'ms';\n\t\n\t\t\tthis.fadeTimeout = setTimeout((function (val) {\n\t\t\t\tthis.wrapperStyle.opacity = val;\n\t\t\t\tthis.visible = +val;\n\t\t\t}).bind(this, val), delay);\n\t\t}\n\t};\n\t\n\tIScroll.utils = utils;\n\t\n\tif ( typeof module != 'undefined' && module.exports ) {\n\t\tmodule.exports = IScroll;\n\t} else if ( true ) {\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return IScroll; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t\twindow.IScroll = IScroll;\n\t}\n\t\n\t})(window, document, Math);\n\n\n/***/ },\n\n/***/ 53:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Released under MIT license\n\t// Copyright (c) 2009-2010 Dominic Baggott\n\t// Copyright (c) 2009-2010 Ash Berlin\n\t// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\t\n\t/*jshint browser:true, devel:true */\n\t\n\t(function( expose ) {\n\t\n\t/**\n\t *  class Markdown\n\t *\n\t *  Markdown processing in Javascript done right. We have very particular views\n\t *  on what constitutes 'right' which include:\n\t *\n\t *  - produces well-formed HTML (this means that em and strong nesting is\n\t *    important)\n\t *\n\t *  - has an intermediate representation to allow processing of parsed data (We\n\t *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n\t *\n\t *  - is easily extensible to add new dialects without having to rewrite the\n\t *    entire parsing mechanics\n\t *\n\t *  - has a good test suite\n\t *\n\t *  This implementation fulfills all of these (except that the test suite could\n\t *  do with expanding to automatically run all the fixtures from other Markdown\n\t *  implementations.)\n\t *\n\t *  ##### Intermediate Representation\n\t *\n\t *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n\t *\n\t *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n\t **/\n\tvar Markdown = expose.Markdown = function(dialect) {\n\t  switch (typeof dialect) {\n\t    case \"undefined\":\n\t      this.dialect = Markdown.dialects.Gruber;\n\t      break;\n\t    case \"object\":\n\t      this.dialect = dialect;\n\t      break;\n\t    default:\n\t      if ( dialect in Markdown.dialects ) {\n\t        this.dialect = Markdown.dialects[dialect];\n\t      }\n\t      else {\n\t        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n\t      }\n\t      break;\n\t  }\n\t  this.em_state = [];\n\t  this.strong_state = [];\n\t  this.debug_indent = \"\";\n\t};\n\t\n\t/**\n\t *  parse( markdown, [dialect] ) -> JsonML\n\t *  - markdown (String): markdown string to parse\n\t *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n\t *\n\t *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n\t **/\n\texpose.parse = function( source, dialect ) {\n\t  // dialect will default if undefined\n\t  var md = new Markdown( dialect );\n\t  return md.toTree( source );\n\t};\n\t\n\t/**\n\t *  toHTML( markdown, [dialect]  ) -> String\n\t *  toHTML( md_tree ) -> String\n\t *  - markdown (String): markdown string to parse\n\t *  - md_tree (Markdown.JsonML): parsed markdown tree\n\t *\n\t *  Take markdown (either as a string or as a JsonML tree) and run it through\n\t *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n\t **/\n\texpose.toHTML = function toHTML( source , dialect , options ) {\n\t  var input = expose.toHTMLTree( source , dialect , options );\n\t\n\t  return expose.renderJsonML( input );\n\t};\n\t\n\t/**\n\t *  toHTMLTree( markdown, [dialect] ) -> JsonML\n\t *  toHTMLTree( md_tree ) -> JsonML\n\t *  - markdown (String): markdown string to parse\n\t *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n\t *  - md_tree (Markdown.JsonML): parsed markdown tree\n\t *\n\t *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n\t *  to this function, it is first parsed into a markdown tree by calling\n\t *  [[parse]].\n\t **/\n\texpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n\t  // convert string input to an MD tree\n\t  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\t\n\t  // Now convert the MD tree to an HTML tree\n\t\n\t  // remove references from the tree\n\t  var attrs = extract_attr( input ),\n\t      refs = {};\n\t\n\t  if ( attrs && attrs.references ) {\n\t    refs = attrs.references;\n\t  }\n\t\n\t  var html = convert_tree_to_html( input, refs , options );\n\t  merge_text_nodes( html );\n\t  return html;\n\t};\n\t\n\t// For Spidermonkey based engines\n\tfunction mk_block_toSource() {\n\t  return \"Markdown.mk_block( \" +\n\t          uneval(this.toString()) +\n\t          \", \" +\n\t          uneval(this.trailing) +\n\t          \", \" +\n\t          uneval(this.lineNumber) +\n\t          \" )\";\n\t}\n\t\n\t// node\n\tfunction mk_block_inspect() {\n\t  var util = __webpack_require__(67);\n\t  return \"Markdown.mk_block( \" +\n\t          util.inspect(this.toString()) +\n\t          \", \" +\n\t          util.inspect(this.trailing) +\n\t          \", \" +\n\t          util.inspect(this.lineNumber) +\n\t          \" )\";\n\t\n\t}\n\t\n\tvar mk_block = Markdown.mk_block = function(block, trail, line) {\n\t  // Be helpful for default case in tests.\n\t  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\t\n\t  var s = new String(block);\n\t  s.trailing = trail;\n\t  // To make it clear its not just a string\n\t  s.inspect = mk_block_inspect;\n\t  s.toSource = mk_block_toSource;\n\t\n\t  if ( line != undefined )\n\t    s.lineNumber = line;\n\t\n\t  return s;\n\t};\n\t\n\tfunction count_lines( str ) {\n\t  var n = 0, i = -1;\n\t  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n\t  return n;\n\t}\n\t\n\t// Internal - split source into rough blocks\n\tMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n\t  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n\t  // [\\s\\S] matches _anything_ (newline or space)\n\t  // [^] is equivalent but doesn't work in IEs.\n\t  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n\t      blocks = [],\n\t      m;\n\t\n\t  var line_no = 1;\n\t\n\t  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n\t    // skip (but count) leading blank lines\n\t    line_no += count_lines( m[0] );\n\t    re.lastIndex = m[0].length;\n\t  }\n\t\n\t  while ( ( m = re.exec(input) ) !== null ) {\n\t    if (m[2] == \"\\n#\") {\n\t      m[2] = \"\\n\";\n\t      re.lastIndex--;\n\t    }\n\t    blocks.push( mk_block( m[1], m[2], line_no ) );\n\t    line_no += count_lines( m[0] );\n\t  }\n\t\n\t  return blocks;\n\t};\n\t\n\t/**\n\t *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n\t *  - block (String): the block to process\n\t *  - next (Array): the following blocks\n\t *\n\t * Process `block` and return an array of JsonML nodes representing `block`.\n\t *\n\t * It does this by asking each block level function in the dialect to process\n\t * the block until one can. Succesful handling is indicated by returning an\n\t * array (with zero or more JsonML nodes), failure by a false value.\n\t *\n\t * Blocks handlers are responsible for calling [[Markdown#processInline]]\n\t * themselves as appropriate.\n\t *\n\t * If the blocks were split incorrectly or adjacent blocks need collapsing you\n\t * can adjust `next` in place using shift/splice etc.\n\t *\n\t * If any of this default behaviour is not right for the dialect, you can\n\t * define a `__call__` method on the dialect that will get invoked to handle\n\t * the block processing.\n\t */\n\tMarkdown.prototype.processBlock = function processBlock( block, next ) {\n\t  var cbs = this.dialect.block,\n\t      ord = cbs.__order__;\n\t\n\t  if ( \"__call__\" in cbs ) {\n\t    return cbs.__call__.call(this, block, next);\n\t  }\n\t\n\t  for ( var i = 0; i < ord.length; i++ ) {\n\t    //D:this.debug( \"Testing\", ord[i] );\n\t    var res = cbs[ ord[i] ].call( this, block, next );\n\t    if ( res ) {\n\t      //D:this.debug(\"  matched\");\n\t      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n\t        this.debug(ord[i], \"didn't return a proper array\");\n\t      //D:this.debug( \"\" );\n\t      return res;\n\t    }\n\t  }\n\t\n\t  // Uhoh! no match! Should we throw an error?\n\t  return [];\n\t};\n\t\n\tMarkdown.prototype.processInline = function processInline( block ) {\n\t  return this.dialect.inline.__call__.call( this, String( block ) );\n\t};\n\t\n\t/**\n\t *  Markdown#toTree( source ) -> JsonML\n\t *  - source (String): markdown source to parse\n\t *\n\t *  Parse `source` into a JsonML tree representing the markdown document.\n\t **/\n\t// custom_tree means set this.tree to `custom_tree` and restore old value on return\n\tMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n\t  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\t\n\t  // Make tree a member variable so its easier to mess with in extensions\n\t  var old_tree = this.tree;\n\t  try {\n\t    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\t\n\t    blocks:\n\t    while ( blocks.length ) {\n\t      var b = this.processBlock( blocks.shift(), blocks );\n\t\n\t      // Reference blocks and the like won't return any content\n\t      if ( !b.length ) continue blocks;\n\t\n\t      this.tree.push.apply( this.tree, b );\n\t    }\n\t    return this.tree;\n\t  }\n\t  finally {\n\t    if ( custom_root ) {\n\t      this.tree = old_tree;\n\t    }\n\t  }\n\t};\n\t\n\t// Noop by default\n\tMarkdown.prototype.debug = function () {\n\t  var args = Array.prototype.slice.call( arguments);\n\t  args.unshift(this.debug_indent);\n\t  if ( typeof print !== \"undefined\" )\n\t      print.apply( print, args );\n\t  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n\t      console.log.apply( null, args );\n\t}\n\t\n\tMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n\t  // Dont use /g regexps with this\n\t  var m,\n\t      b = block.valueOf();\n\t\n\t  while ( b.length && (m = re.exec(b) ) != null ) {\n\t    b = b.substr( m[0].length );\n\t    cb.call(this, m);\n\t  }\n\t  return b;\n\t};\n\t\n\t/**\n\t * Markdown.dialects\n\t *\n\t * Namespace of built-in dialects.\n\t **/\n\tMarkdown.dialects = {};\n\t\n\t/**\n\t * Markdown.dialects.Gruber\n\t *\n\t * The default dialect that follows the rules set out by John Gruber's\n\t * markdown.pl as closely as possible. Well actually we follow the behaviour of\n\t * that script which in some places is not exactly what the syntax web page\n\t * says.\n\t **/\n\tMarkdown.dialects.Gruber = {\n\t  block: {\n\t    atxHeader: function atxHeader( block, next ) {\n\t      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\t\n\t      if ( !m ) return undefined;\n\t\n\t      var header = [ \"header\", { level: m[ 1 ].length } ];\n\t      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\t\n\t      if ( m[0].length < block.length )\n\t        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\t\n\t      return [ header ];\n\t    },\n\t\n\t    setextHeader: function setextHeader( block, next ) {\n\t      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\t\n\t      if ( !m ) return undefined;\n\t\n\t      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n\t      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\t\n\t      if ( m[0].length < block.length )\n\t        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\t\n\t      return [ header ];\n\t    },\n\t\n\t    code: function code( block, next ) {\n\t      // |    Foo\n\t      // |bar\n\t      // should be a code block followed by a paragraph. Fun\n\t      //\n\t      // There might also be adjacent code block to merge.\n\t\n\t      var ret = [],\n\t          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n\t          lines;\n\t\n\t      // 4 spaces + content\n\t      if ( !block.match( re ) ) return undefined;\n\t\n\t      block_search:\n\t      do {\n\t        // Now pull out the rest of the lines\n\t        var b = this.loop_re_over_block(\n\t                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\t\n\t        if ( b.length ) {\n\t          // Case alluded to in first comment. push it back on as a new block\n\t          next.unshift( mk_block(b, block.trailing) );\n\t          break block_search;\n\t        }\n\t        else if ( next.length ) {\n\t          // Check the next block - it might be code too\n\t          if ( !next[0].match( re ) ) break block_search;\n\t\n\t          // Pull how how many blanks lines follow - minus two to account for .join\n\t          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\t\n\t          block = next.shift();\n\t        }\n\t        else {\n\t          break block_search;\n\t        }\n\t      } while ( true );\n\t\n\t      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n\t    },\n\t\n\t    horizRule: function horizRule( block, next ) {\n\t      // this needs to find any hr in the block to handle abutting blocks\n\t      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\t\n\t      if ( !m ) {\n\t        return undefined;\n\t      }\n\t\n\t      var jsonml = [ [ \"hr\" ] ];\n\t\n\t      // if there's a leading abutting block, process it\n\t      if ( m[ 1 ] ) {\n\t        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n\t      }\n\t\n\t      // if there's a trailing abutting block, stick it into next\n\t      if ( m[ 3 ] ) {\n\t        next.unshift( mk_block( m[ 3 ] ) );\n\t      }\n\t\n\t      return jsonml;\n\t    },\n\t\n\t    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n\t    // between the items (and result in text just in the <li>) and loose lists,\n\t    // which have an empty line between list items, resulting in (one or more)\n\t    // paragraphs inside the <li>.\n\t    //\n\t    // There are all sorts weird edge cases about the original markdown.pl's\n\t    // handling of lists:\n\t    //\n\t    // * Nested lists are supposed to be indented by four chars per level. But\n\t    //   if they aren't, you can get a nested list by indenting by less than\n\t    //   four so long as the indent doesn't match an indent of an existing list\n\t    //   item in the 'nest stack'.\n\t    //\n\t    // * The type of the list (bullet or number) is controlled just by the\n\t    //    first item at the indent. Subsequent changes are ignored unless they\n\t    //    are for nested lists\n\t    //\n\t    lists: (function( ) {\n\t      // Use a closure to hide a few variables.\n\t      var any_list = \"[*+-]|\\\\d+\\\\.\",\n\t          bullet_list = /[*+-]/,\n\t          number_list = /\\d+\\./,\n\t          // Capture leading indent as it matters for determining nested lists.\n\t          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n\t          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\t\n\t      // TODO: Cache this regexp for certain depths.\n\t      // Create a regexp suitable for matching an li for a given stack depth\n\t      function regex_for_depth( depth ) {\n\t\n\t        return new RegExp(\n\t          // m[1] = indent, m[2] = list_type\n\t          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n\t          // m[3] = cont\n\t          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n\t        );\n\t      }\n\t      function expand_tab( input ) {\n\t        return input.replace( / {0,3}\\t/g, \"    \" );\n\t      }\n\t\n\t      // Add inline content `inline` to `li`. inline comes from processInline\n\t      // so is an array of content\n\t      function add(li, loose, inline, nl) {\n\t        if ( loose ) {\n\t          li.push( [ \"para\" ].concat(inline) );\n\t          return;\n\t        }\n\t        // Hmmm, should this be any block level element or just paras?\n\t        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n\t                   ? li[li.length -1]\n\t                   : li;\n\t\n\t        // If there is already some content in this list, add the new line in\n\t        if ( nl && li.length > 1 ) inline.unshift(nl);\n\t\n\t        for ( var i = 0; i < inline.length; i++ ) {\n\t          var what = inline[i],\n\t              is_str = typeof what == \"string\";\n\t          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n\t            add_to[ add_to.length-1 ] += what;\n\t          }\n\t          else {\n\t            add_to.push( what );\n\t          }\n\t        }\n\t      }\n\t\n\t      // contained means have an indent greater than the current one. On\n\t      // *every* line in the block\n\t      function get_contained_blocks( depth, blocks ) {\n\t\n\t        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n\t            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n\t            ret = [];\n\t\n\t        while ( blocks.length > 0 ) {\n\t          if ( re.exec( blocks[0] ) ) {\n\t            var b = blocks.shift(),\n\t                // Now remove that indent\n\t                x = b.replace( replace, \"\");\n\t\n\t            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n\t          }\n\t          else {\n\t            break;\n\t          }\n\t        }\n\t        return ret;\n\t      }\n\t\n\t      // passed to stack.forEach to turn list items up the stack into paras\n\t      function paragraphify(s, i, stack) {\n\t        var list = s.list;\n\t        var last_li = list[list.length-1];\n\t\n\t        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n\t          return;\n\t        }\n\t        if ( i + 1 == stack.length ) {\n\t          // Last stack frame\n\t          // Keep the same array, but replace the contents\n\t          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n\t        }\n\t        else {\n\t          var sublist = last_li.pop();\n\t          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n\t        }\n\t      }\n\t\n\t      // The matcher function\n\t      return function( block, next ) {\n\t        var m = block.match( is_list_re );\n\t        if ( !m ) return undefined;\n\t\n\t        function make_list( m ) {\n\t          var list = bullet_list.exec( m[2] )\n\t                   ? [\"bulletlist\"]\n\t                   : [\"numberlist\"];\n\t\n\t          stack.push( { list: list, indent: m[1] } );\n\t          return list;\n\t        }\n\t\n\t\n\t        var stack = [], // Stack of lists for nesting.\n\t            list = make_list( m ),\n\t            last_li,\n\t            loose = false,\n\t            ret = [ stack[0].list ],\n\t            i;\n\t\n\t        // Loop to search over block looking for inner block elements and loose lists\n\t        loose_search:\n\t        while ( true ) {\n\t          // Split into lines preserving new lines at end of line\n\t          var lines = block.split( /(?=\\n)/ );\n\t\n\t          // We have to grab all lines for a li and call processInline on them\n\t          // once as there are some inline things that can span lines.\n\t          var li_accumulate = \"\";\n\t\n\t          // Loop over the lines in this block looking for tight lists.\n\t          tight_search:\n\t          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n\t            var nl = \"\",\n\t                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\t\n\t            // TODO: really should cache this\n\t            var line_re = regex_for_depth( stack.length );\n\t\n\t            m = l.match( line_re );\n\t            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\t\n\t            // We have a list item\n\t            if ( m[1] !== undefined ) {\n\t              // Process the previous list item, if any\n\t              if ( li_accumulate.length ) {\n\t                add( last_li, loose, this.processInline( li_accumulate ), nl );\n\t                // Loose mode will have been dealt with. Reset it\n\t                loose = false;\n\t                li_accumulate = \"\";\n\t              }\n\t\n\t              m[1] = expand_tab( m[1] );\n\t              var wanted_depth = Math.floor(m[1].length/4)+1;\n\t              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n\t              if ( wanted_depth > stack.length ) {\n\t                // Deep enough for a nested list outright\n\t                //print ( \"new nested list\" );\n\t                list = make_list( m );\n\t                last_li.push( list );\n\t                last_li = list[1] = [ \"listitem\" ];\n\t              }\n\t              else {\n\t                // We aren't deep enough to be strictly a new level. This is\n\t                // where Md.pl goes nuts. If the indent matches a level in the\n\t                // stack, put it there, else put it one deeper then the\n\t                // wanted_depth deserves.\n\t                var found = false;\n\t                for ( i = 0; i < stack.length; i++ ) {\n\t                  if ( stack[ i ].indent != m[1] ) continue;\n\t                  list = stack[ i ].list;\n\t                  stack.splice( i+1, stack.length - (i+1) );\n\t                  found = true;\n\t                  break;\n\t                }\n\t\n\t                if (!found) {\n\t                  //print(\"not found. l:\", uneval(l));\n\t                  wanted_depth++;\n\t                  if ( wanted_depth <= stack.length ) {\n\t                    stack.splice(wanted_depth, stack.length - wanted_depth);\n\t                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n\t                    list = stack[wanted_depth-1].list;\n\t                    //print(\"list:\", uneval(list) );\n\t                  }\n\t                  else {\n\t                    //print (\"made new stack for messy indent\");\n\t                    list = make_list(m);\n\t                    last_li.push(list);\n\t                  }\n\t                }\n\t\n\t                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n\t                last_li = [ \"listitem\" ];\n\t                list.push(last_li);\n\t              } // end depth of shenegains\n\t              nl = \"\";\n\t            }\n\t\n\t            // Add content\n\t            if ( l.length > m[0].length ) {\n\t              li_accumulate += nl + l.substr( m[0].length );\n\t            }\n\t          } // tight_search\n\t\n\t          if ( li_accumulate.length ) {\n\t            add( last_li, loose, this.processInline( li_accumulate ), nl );\n\t            // Loose mode will have been dealt with. Reset it\n\t            loose = false;\n\t            li_accumulate = \"\";\n\t          }\n\t\n\t          // Look at the next block - we might have a loose list. Or an extra\n\t          // paragraph for the current li\n\t          var contained = get_contained_blocks( stack.length, next );\n\t\n\t          // Deal with code blocks or properly nested lists\n\t          if ( contained.length > 0 ) {\n\t            // Make sure all listitems up the stack are paragraphs\n\t            forEach( stack, paragraphify, this);\n\t\n\t            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n\t          }\n\t\n\t          var next_block = next[0] && next[0].valueOf() || \"\";\n\t\n\t          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n\t            block = next.shift();\n\t\n\t            // Check for an HR following a list: features/lists/hr_abutting\n\t            var hr = this.dialect.block.horizRule( block, next );\n\t\n\t            if ( hr ) {\n\t              ret.push.apply(ret, hr);\n\t              break;\n\t            }\n\t\n\t            // Make sure all listitems up the stack are paragraphs\n\t            forEach( stack, paragraphify, this);\n\t\n\t            loose = true;\n\t            continue loose_search;\n\t          }\n\t          break;\n\t        } // loose_search\n\t\n\t        return ret;\n\t      };\n\t    })(),\n\t\n\t    blockquote: function blockquote( block, next ) {\n\t      if ( !block.match( /^>/m ) )\n\t        return undefined;\n\t\n\t      var jsonml = [];\n\t\n\t      // separate out the leading abutting block, if any. I.e. in this case:\n\t      //\n\t      //  a\n\t      //  > b\n\t      //\n\t      if ( block[ 0 ] != \">\" ) {\n\t        var lines = block.split( /\\n/ ),\n\t            prev = [],\n\t            line_no = block.lineNumber;\n\t\n\t        // keep shifting lines until you find a crotchet\n\t        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n\t            prev.push( lines.shift() );\n\t            line_no++;\n\t        }\n\t\n\t        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n\t        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n\t        // reassemble new block of just block quotes!\n\t        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n\t      }\n\t\n\t\n\t      // if the next block is also a blockquote merge it in\n\t      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n\t        var b = next.shift();\n\t        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n\t      }\n\t\n\t      // Strip off the leading \"> \" and re-process as a block.\n\t      var input = block.replace( /^> ?/gm, \"\" ),\n\t          old_tree = this.tree,\n\t          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n\t          attr = extract_attr( processedBlock );\n\t\n\t      // If any link references were found get rid of them\n\t      if ( attr && attr.references ) {\n\t        delete attr.references;\n\t        // And then remove the attribute object if it's empty\n\t        if ( isEmpty( attr ) ) {\n\t          processedBlock.splice( 1, 1 );\n\t        }\n\t      }\n\t\n\t      jsonml.push( processedBlock );\n\t      return jsonml;\n\t    },\n\t\n\t    referenceDefn: function referenceDefn( block, next) {\n\t      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n\t      // interesting matches are [ , ref_id, url, , title, title ]\n\t\n\t      if ( !block.match(re) )\n\t        return undefined;\n\t\n\t      // make an attribute node if it doesn't exist\n\t      if ( !extract_attr( this.tree ) ) {\n\t        this.tree.splice( 1, 0, {} );\n\t      }\n\t\n\t      var attrs = extract_attr( this.tree );\n\t\n\t      // make a references hash if it doesn't exist\n\t      if ( attrs.references === undefined ) {\n\t        attrs.references = {};\n\t      }\n\t\n\t      var b = this.loop_re_over_block(re, block, function( m ) {\n\t\n\t        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n\t          m[2] = m[2].substring( 1, m[2].length - 1 );\n\t\n\t        var ref = attrs.references[ m[1].toLowerCase() ] = {\n\t          href: m[2]\n\t        };\n\t\n\t        if ( m[4] !== undefined )\n\t          ref.title = m[4];\n\t        else if ( m[5] !== undefined )\n\t          ref.title = m[5];\n\t\n\t      } );\n\t\n\t      if ( b.length )\n\t        next.unshift( mk_block( b, block.trailing ) );\n\t\n\t      return [];\n\t    },\n\t\n\t    para: function para( block, next ) {\n\t      // everything's a para!\n\t      return [ [\"para\"].concat( this.processInline( block ) ) ];\n\t    }\n\t  }\n\t};\n\t\n\tMarkdown.dialects.Gruber.inline = {\n\t\n\t    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n\t      var m,\n\t          res,\n\t          lastIndex = 0;\n\t\n\t      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n\t      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\t\n\t      m = re.exec( text );\n\t      if (!m) {\n\t        // Just boring text\n\t        return [ text.length, text ];\n\t      }\n\t      else if ( m[1] ) {\n\t        // Some un-interesting text matched. Return that first\n\t        return [ m[1].length, m[1] ];\n\t      }\n\t\n\t      var res;\n\t      if ( m[2] in this.dialect.inline ) {\n\t        res = this.dialect.inline[ m[2] ].call(\n\t                  this,\n\t                  text.substr( m.index ), m, previous_nodes || [] );\n\t      }\n\t      // Default for now to make dev easier. just slurp special and output it.\n\t      res = res || [ m[2].length, m[2] ];\n\t      return res;\n\t    },\n\t\n\t    __call__: function inline( text, patterns ) {\n\t\n\t      var out = [],\n\t          res;\n\t\n\t      function add(x) {\n\t        //D:self.debug(\"  adding output\", uneval(x));\n\t        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n\t          out[ out.length-1 ] += x;\n\t        else\n\t          out.push(x);\n\t      }\n\t\n\t      while ( text.length > 0 ) {\n\t        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n\t        text = text.substr( res.shift() );\n\t        forEach(res, add )\n\t      }\n\t\n\t      return out;\n\t    },\n\t\n\t    // These characters are intersting elsewhere, so have rules for them so that\n\t    // chunks of plain text blocks don't include them\n\t    \"]\": function () {},\n\t    \"}\": function () {},\n\t\n\t    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\t\n\t    \"\\\\\": function escaped( text ) {\n\t      // [ length of input processed, node/children to add... ]\n\t      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n\t      if ( this.dialect.inline.__escape__.exec( text ) )\n\t        return [ 2, text.charAt( 1 ) ];\n\t      else\n\t        // Not an esacpe\n\t        return [ 1, \"\\\\\" ];\n\t    },\n\t\n\t    \"![\": function image( text ) {\n\t\n\t      // Unlike images, alt text is plain text only. no other elements are\n\t      // allowed in there\n\t\n\t      // ![Alt text](/path/to/img.jpg \"Optional title\")\n\t      //      1          2            3       4         <--- captures\n\t      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\t\n\t      if ( m ) {\n\t        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n\t          m[2] = m[2].substring( 1, m[2].length - 1 );\n\t\n\t        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\t\n\t        var attrs = { alt: m[1], href: m[2] || \"\" };\n\t        if ( m[4] !== undefined)\n\t          attrs.title = m[4];\n\t\n\t        return [ m[0].length, [ \"img\", attrs ] ];\n\t      }\n\t\n\t      // ![Alt text][id]\n\t      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\t\n\t      if ( m ) {\n\t        // We can't check if the reference is known here as it likely wont be\n\t        // found till after. Check it in md tree->hmtl tree conversion\n\t        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n\t      }\n\t\n\t      // Just consume the '!['\n\t      return [ 2, \"![\" ];\n\t    },\n\t\n\t    \"[\": function link( text ) {\n\t\n\t      var orig = String(text);\n\t      // Inline content is possible inside `link text`\n\t      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\t\n\t      // No closing ']' found. Just consume the [\n\t      if ( !res ) return [ 1, \"[\" ];\n\t\n\t      var consumed = 1 + res[ 0 ],\n\t          children = res[ 1 ],\n\t          link,\n\t          attrs;\n\t\n\t      // At this point the first [...] has been parsed. See what follows to find\n\t      // out which kind of link we are (reference or direct url)\n\t      text = text.substr( consumed );\n\t\n\t      // [link text](/path/to/img.jpg \"Optional title\")\n\t      //                 1            2       3         <--- captures\n\t      // This will capture up to the last paren in the block. We then pull\n\t      // back based on if there a matching ones in the url\n\t      //    ([here](/url/(test))\n\t      // The parens have to be balanced\n\t      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n\t      if ( m ) {\n\t        var url = m[1];\n\t        consumed += m[0].length;\n\t\n\t        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n\t          url = url.substring( 1, url.length - 1 );\n\t\n\t        // If there is a title we don't have to worry about parens in the url\n\t        if ( !m[3] ) {\n\t          var open_parens = 1; // One open that isn't in the capture\n\t          for ( var len = 0; len < url.length; len++ ) {\n\t            switch ( url[len] ) {\n\t            case \"(\":\n\t              open_parens++;\n\t              break;\n\t            case \")\":\n\t              if ( --open_parens == 0) {\n\t                consumed -= url.length - len;\n\t                url = url.substring(0, len);\n\t              }\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Process escapes only\n\t        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\t\n\t        attrs = { href: url || \"\" };\n\t        if ( m[3] !== undefined)\n\t          attrs.title = m[3];\n\t\n\t        link = [ \"link\", attrs ].concat( children );\n\t        return [ consumed, link ];\n\t      }\n\t\n\t      // [Alt text][id]\n\t      // [Alt text] [id]\n\t      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\t\n\t      if ( m ) {\n\t\n\t        consumed += m[ 0 ].length;\n\t\n\t        // [links][] uses links as its reference\n\t        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\t\n\t        link = [ \"link_ref\", attrs ].concat( children );\n\t\n\t        // We can't check if the reference is known here as it likely wont be\n\t        // found till after. Check it in md tree->hmtl tree conversion.\n\t        // Store the original so that conversion can revert if the ref isn't found.\n\t        return [ consumed, link ];\n\t      }\n\t\n\t      // [id]\n\t      // Only if id is plain (no formatting.)\n\t      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\t\n\t        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n\t        link = [ \"link_ref\", attrs, children[0] ];\n\t        return [ consumed, link ];\n\t      }\n\t\n\t      // Just consume the \"[\"\n\t      return [ 1, \"[\" ];\n\t    },\n\t\n\t\n\t    \"<\": function autoLink( text ) {\n\t      var m;\n\t\n\t      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n\t        if ( m[3] ) {\n\t          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\t\n\t        }\n\t        else if ( m[2] == \"mailto\" ) {\n\t          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n\t        }\n\t        else\n\t          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n\t      }\n\t\n\t      return [ 1, \"<\" ];\n\t    },\n\t\n\t    \"`\": function inlineCode( text ) {\n\t      // Inline code block. as many backticks as you like to start it\n\t      // Always skip over the opening ticks.\n\t      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\t\n\t      if ( m && m[2] )\n\t        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n\t      else {\n\t        // TODO: No matching end code found - warn!\n\t        return [ 1, \"`\" ];\n\t      }\n\t    },\n\t\n\t    \"  \\n\": function lineBreak( text ) {\n\t      return [ 3, [ \"linebreak\" ] ];\n\t    }\n\t\n\t};\n\t\n\t// Meta Helper/generator method for em and strong handling\n\tfunction strong_em( tag, md ) {\n\t\n\t  var state_slot = tag + \"_state\",\n\t      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\t\n\t  function CloseTag(len) {\n\t    this.len_after = len;\n\t    this.name = \"close_\" + md;\n\t  }\n\t\n\t  return function ( text, orig_match ) {\n\t\n\t    if ( this[state_slot][0] == md ) {\n\t      // Most recent em is of this type\n\t      //D:this.debug(\"closing\", md);\n\t      this[state_slot].shift();\n\t\n\t      // \"Consume\" everything to go back to the recrusion in the else-block below\n\t      return[ text.length, new CloseTag(text.length-md.length) ];\n\t    }\n\t    else {\n\t      // Store a clone of the em/strong states\n\t      var other = this[other_slot].slice(),\n\t          state = this[state_slot].slice();\n\t\n\t      this[state_slot].unshift(md);\n\t\n\t      //D:this.debug_indent += \"  \";\n\t\n\t      // Recurse\n\t      var res = this.processInline( text.substr( md.length ) );\n\t      //D:this.debug_indent = this.debug_indent.substr(2);\n\t\n\t      var last = res[res.length - 1];\n\t\n\t      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\t\n\t      var check = this[state_slot].shift();\n\t      if ( last instanceof CloseTag ) {\n\t        res.pop();\n\t        // We matched! Huzzah.\n\t        var consumed = text.length - last.len_after;\n\t        return [ consumed, [ tag ].concat(res) ];\n\t      }\n\t      else {\n\t        // Restore the state of the other kind. We might have mistakenly closed it.\n\t        this[other_slot] = other;\n\t        this[state_slot] = state;\n\t\n\t        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n\t        return [ md.length, md ];\n\t      }\n\t    }\n\t  }; // End returned function\n\t}\n\t\n\tMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\n\tMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\n\tMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\n\tMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\t\n\t\n\t// Build default order from insertion order.\n\tMarkdown.buildBlockOrder = function(d) {\n\t  var ord = [];\n\t  for ( var i in d ) {\n\t    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n\t    ord.push( i );\n\t  }\n\t  d.__order__ = ord;\n\t};\n\t\n\t// Build patterns for inline matcher\n\tMarkdown.buildInlinePatterns = function(d) {\n\t  var patterns = [];\n\t\n\t  for ( var i in d ) {\n\t    // __foo__ is reserved and not a pattern\n\t    if ( i.match( /^__.*__$/) ) continue;\n\t    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n\t             .replace( /\\n/, \"\\\\n\" );\n\t    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n\t  }\n\t\n\t  patterns = patterns.join(\"|\");\n\t  d.__patterns__ = patterns;\n\t  //print(\"patterns:\", uneval( patterns ) );\n\t\n\t  var fn = d.__call__;\n\t  d.__call__ = function(text, pattern) {\n\t    if ( pattern != undefined ) {\n\t      return fn.call(this, text, pattern);\n\t    }\n\t    else\n\t    {\n\t      return fn.call(this, text, patterns);\n\t    }\n\t  };\n\t};\n\t\n\tMarkdown.DialectHelpers = {};\n\tMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n\t  var consumed = 0,\n\t      nodes = [];\n\t\n\t  while ( true ) {\n\t    if ( text.charAt( consumed ) == want ) {\n\t      // Found the character we were looking for\n\t      consumed++;\n\t      return [ consumed, nodes ];\n\t    }\n\t\n\t    if ( consumed >= text.length ) {\n\t      // No closing char found. Abort.\n\t      return null;\n\t    }\n\t\n\t    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n\t    consumed += res[ 0 ];\n\t    // Add any returned nodes.\n\t    nodes.push.apply( nodes, res.slice( 1 ) );\n\t  }\n\t}\n\t\n\t// Helper function to make sub-classing a dialect easier\n\tMarkdown.subclassDialect = function( d ) {\n\t  function Block() {}\n\t  Block.prototype = d.block;\n\t  function Inline() {}\n\t  Inline.prototype = d.inline;\n\t\n\t  return { block: new Block(), inline: new Inline() };\n\t};\n\t\n\tMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\n\tMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\t\n\tMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\t\n\tMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n\t  var meta = split_meta_hash( meta_string ),\n\t      attr = {};\n\t\n\t  for ( var i = 0; i < meta.length; ++i ) {\n\t    // id: #foo\n\t    if ( /^#/.test( meta[ i ] ) ) {\n\t      attr.id = meta[ i ].substring( 1 );\n\t    }\n\t    // class: .foo\n\t    else if ( /^\\./.test( meta[ i ] ) ) {\n\t      // if class already exists, append the new one\n\t      if ( attr[\"class\"] ) {\n\t        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n\t      }\n\t      else {\n\t        attr[\"class\"] = meta[ i ].substring( 1 );\n\t      }\n\t    }\n\t    // attribute: foo=bar\n\t    else if ( /\\=/.test( meta[ i ] ) ) {\n\t      var s = meta[ i ].split( /\\=/ );\n\t      attr[ s[ 0 ] ] = s[ 1 ];\n\t    }\n\t  }\n\t\n\t  return attr;\n\t}\n\t\n\tfunction split_meta_hash( meta_string ) {\n\t  var meta = meta_string.split( \"\" ),\n\t      parts = [ \"\" ],\n\t      in_quotes = false;\n\t\n\t  while ( meta.length ) {\n\t    var letter = meta.shift();\n\t    switch ( letter ) {\n\t      case \" \" :\n\t        // if we're in a quoted section, keep it\n\t        if ( in_quotes ) {\n\t          parts[ parts.length - 1 ] += letter;\n\t        }\n\t        // otherwise make a new part\n\t        else {\n\t          parts.push( \"\" );\n\t        }\n\t        break;\n\t      case \"'\" :\n\t      case '\"' :\n\t        // reverse the quotes and move straight on\n\t        in_quotes = !in_quotes;\n\t        break;\n\t      case \"\\\\\" :\n\t        // shift off the next letter to be used straight away.\n\t        // it was escaped so we'll keep it whatever it is\n\t        letter = meta.shift();\n\t      default :\n\t        parts[ parts.length - 1 ] += letter;\n\t        break;\n\t    }\n\t  }\n\t\n\t  return parts;\n\t}\n\t\n\tMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n\t  // we're only interested in the first block\n\t  if ( block.lineNumber > 1 ) return undefined;\n\t\n\t  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n\t  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\t\n\t  // make an attribute node if it doesn't exist\n\t  if ( !extract_attr( this.tree ) ) {\n\t    this.tree.splice( 1, 0, {} );\n\t  }\n\t\n\t  var pairs = block.split( /\\n/ );\n\t  for ( p in pairs ) {\n\t    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n\t        key = m[ 1 ].toLowerCase(),\n\t        value = m[ 2 ];\n\t\n\t    this.tree[ 1 ][ key ] = value;\n\t  }\n\t\n\t  // document_meta produces no content!\n\t  return [];\n\t};\n\t\n\tMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n\t  // check if the last line of the block is an meta hash\n\t  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n\t  if ( !m ) return undefined;\n\t\n\t  // process the meta hash\n\t  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\t\n\t  var hash;\n\t\n\t  // if we matched ^ then we need to apply meta to the previous block\n\t  if ( m[ 1 ] === \"\" ) {\n\t    var node = this.tree[ this.tree.length - 1 ];\n\t    hash = extract_attr( node );\n\t\n\t    // if the node is a string (rather than JsonML), bail\n\t    if ( typeof node === \"string\" ) return undefined;\n\t\n\t    // create the attribute hash if it doesn't exist\n\t    if ( !hash ) {\n\t      hash = {};\n\t      node.splice( 1, 0, hash );\n\t    }\n\t\n\t    // add the attributes in\n\t    for ( a in attr ) {\n\t      hash[ a ] = attr[ a ];\n\t    }\n\t\n\t    // return nothing so the meta hash is removed\n\t    return [];\n\t  }\n\t\n\t  // pull the meta hash off the block and process what's left\n\t  var b = block.replace( /\\n.*$/, \"\" ),\n\t      result = this.processBlock( b, [] );\n\t\n\t  // get or make the attributes hash\n\t  hash = extract_attr( result[ 0 ] );\n\t  if ( !hash ) {\n\t    hash = {};\n\t    result[ 0 ].splice( 1, 0, hash );\n\t  }\n\t\n\t  // attach the attributes to the block\n\t  for ( a in attr ) {\n\t    hash[ a ] = attr[ a ];\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\tMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n\t  // one or more terms followed by one or more definitions, in a single block\n\t  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n\t      list = [ \"dl\" ],\n\t      i, m;\n\t\n\t  // see if we're dealing with a tight or loose block\n\t  if ( ( m = block.match( tight ) ) ) {\n\t    // pull subsequent tight DL blocks out of `next`\n\t    var blocks = [ block ];\n\t    while ( next.length && tight.exec( next[ 0 ] ) ) {\n\t      blocks.push( next.shift() );\n\t    }\n\t\n\t    for ( var b = 0; b < blocks.length; ++b ) {\n\t      var m = blocks[ b ].match( tight ),\n\t          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n\t          defns = m[ 2 ].split( /\\n:\\s+/ );\n\t\n\t      // print( uneval( m ) );\n\t\n\t      for ( i = 0; i < terms.length; ++i ) {\n\t        list.push( [ \"dt\", terms[ i ] ] );\n\t      }\n\t\n\t      for ( i = 0; i < defns.length; ++i ) {\n\t        // run inline processing over the definition\n\t        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    return undefined;\n\t  }\n\t\n\t  return [ list ];\n\t};\n\t\n\t// splits on unescaped instances of @ch. If @ch is not a character the result\n\t// can be unpredictable\n\t\n\tMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\t\n\t    var _split_on_unescaped = function(s, ch) {\n\t        ch = ch || '\\\\s';\n\t        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n\t        var res = [ ],\n\t            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n\t            m;\n\t        while(m = s.match(r)) {\n\t            res.push(m[1]);\n\t            s = m[2];\n\t        }\n\t        res.push(s);\n\t        return res;\n\t    }\n\t\n\t    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n\t        // find at least an unescaped pipe in each line\n\t        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n\t        i, m;\n\t    if (m = block.match(leading_pipe)) {\n\t        // remove leading pipes in contents\n\t        // (header and horizontal rule already have the leading pipe left out)\n\t        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n\t    } else if (! ( m = block.match(no_leading_pipe))) {\n\t        return undefined;\n\t    }\n\t\n\t    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\t\n\t    // remove trailing pipes, then split on pipes\n\t    // (no escaped pipes are allowed in horizontal rule)\n\t    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\t\n\t    // process alignment\n\t    var html_attrs = [ ];\n\t    forEach (m[2], function (s) {\n\t        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n\t        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n\t        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n\t        else                              html_attrs.push({});\n\t    });\n\t\n\t    // now for the header, avoid escaped pipes\n\t    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n\t    for (i = 0; i < m[1].length; i++) {\n\t        table[1][1].push(['th', html_attrs[i] || {}].concat(\n\t            this.processInline(m[1][i].trim())));\n\t    }\n\t\n\t    // now for body contents\n\t    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n\t        var html_row = ['tr'];\n\t        row = _split_on_unescaped(row, '|');\n\t        for (i = 0; i < row.length; i++) {\n\t            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n\t        }\n\t        table[2].push(html_row);\n\t    }, this);\n\t\n\t    return [table];\n\t}\n\t\n\tMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n\t  if ( !out.length ) {\n\t    return [ 2, \"{:\" ];\n\t  }\n\t\n\t  // get the preceeding element\n\t  var before = out[ out.length - 1 ];\n\t\n\t  if ( typeof before === \"string\" ) {\n\t    return [ 2, \"{:\" ];\n\t  }\n\t\n\t  // match a meta hash\n\t  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\t\n\t  // no match, false alarm\n\t  if ( !m ) {\n\t    return [ 2, \"{:\" ];\n\t  }\n\t\n\t  // attach the attributes to the preceeding element\n\t  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n\t      attr = extract_attr( before );\n\t\n\t  if ( !attr ) {\n\t    attr = {};\n\t    before.splice( 1, 0, attr );\n\t  }\n\t\n\t  for ( var k in meta ) {\n\t    attr[ k ] = meta[ k ];\n\t  }\n\t\n\t  // cut out the string and replace it with nothing\n\t  return [ m[ 0 ].length, \"\" ];\n\t};\n\t\n\tMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\t\n\tMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\n\tMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\t\n\tvar isArray = Array.isArray || function(obj) {\n\t  return Object.prototype.toString.call(obj) == \"[object Array]\";\n\t};\n\t\n\tvar forEach;\n\t// Don't mess with Array.prototype. Its not friendly\n\tif ( Array.prototype.forEach ) {\n\t  forEach = function( arr, cb, thisp ) {\n\t    return arr.forEach( cb, thisp );\n\t  };\n\t}\n\telse {\n\t  forEach = function(arr, cb, thisp) {\n\t    for (var i = 0; i < arr.length; i++) {\n\t      cb.call(thisp || arr, arr[i], i, arr);\n\t    }\n\t  }\n\t}\n\t\n\tvar isEmpty = function( obj ) {\n\t  for ( var key in obj ) {\n\t    if ( hasOwnProperty.call( obj, key ) ) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tfunction extract_attr( jsonml ) {\n\t  return isArray(jsonml)\n\t      && jsonml.length > 1\n\t      && typeof jsonml[ 1 ] === \"object\"\n\t      && !( isArray(jsonml[ 1 ]) )\n\t      ? jsonml[ 1 ]\n\t      : undefined;\n\t}\n\t\n\t\n\t\n\t/**\n\t *  renderJsonML( jsonml[, options] ) -> String\n\t *  - jsonml (Array): JsonML array to render to XML\n\t *  - options (Object): options\n\t *\n\t *  Converts the given JsonML into well-formed XML.\n\t *\n\t *  The options currently understood are:\n\t *\n\t *  - root (Boolean): wether or not the root node should be included in the\n\t *    output, or just its children. The default `false` is to not include the\n\t *    root itself.\n\t */\n\texpose.renderJsonML = function( jsonml, options ) {\n\t  options = options || {};\n\t  // include the root element in the rendered output?\n\t  options.root = options.root || false;\n\t\n\t  var content = [];\n\t\n\t  if ( options.root ) {\n\t    content.push( render_tree( jsonml ) );\n\t  }\n\t  else {\n\t    jsonml.shift(); // get rid of the tag\n\t    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n\t      jsonml.shift(); // get rid of the attributes\n\t    }\n\t\n\t    while ( jsonml.length ) {\n\t      content.push( render_tree( jsonml.shift() ) );\n\t    }\n\t  }\n\t\n\t  return content.join( \"\\n\\n\" );\n\t};\n\t\n\tfunction escapeHTML( text ) {\n\t  return text.replace( /&/g, \"&amp;\" )\n\t             .replace( /</g, \"&lt;\" )\n\t             .replace( />/g, \"&gt;\" )\n\t             .replace( /\"/g, \"&quot;\" )\n\t             .replace( /'/g, \"&#39;\" );\n\t}\n\t\n\tfunction render_tree( jsonml ) {\n\t  // basic case\n\t  if ( typeof jsonml === \"string\" ) {\n\t    return escapeHTML( jsonml );\n\t  }\n\t\n\t  var tag = jsonml.shift(),\n\t      attributes = {},\n\t      content = [];\n\t\n\t  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n\t    attributes = jsonml.shift();\n\t  }\n\t\n\t  while ( jsonml.length ) {\n\t    content.push( render_tree( jsonml.shift() ) );\n\t  }\n\t\n\t  var tag_attrs = \"\";\n\t  for ( var a in attributes ) {\n\t    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n\t  }\n\t\n\t  // be careful about adding whitespace here for inline elements\n\t  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n\t    return \"<\"+ tag + tag_attrs + \"/>\";\n\t  }\n\t  else {\n\t    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n\t  }\n\t}\n\t\n\tfunction convert_tree_to_html( tree, references, options ) {\n\t  var i;\n\t  options = options || {};\n\t\n\t  // shallow clone\n\t  var jsonml = tree.slice( 0 );\n\t\n\t  if ( typeof options.preprocessTreeNode === \"function\" ) {\n\t      jsonml = options.preprocessTreeNode(jsonml, references);\n\t  }\n\t\n\t  // Clone attributes if they exist\n\t  var attrs = extract_attr( jsonml );\n\t  if ( attrs ) {\n\t    jsonml[ 1 ] = {};\n\t    for ( i in attrs ) {\n\t      jsonml[ 1 ][ i ] = attrs[ i ];\n\t    }\n\t    attrs = jsonml[ 1 ];\n\t  }\n\t\n\t  // basic case\n\t  if ( typeof jsonml === \"string\" ) {\n\t    return jsonml;\n\t  }\n\t\n\t  // convert this node\n\t  switch ( jsonml[ 0 ] ) {\n\t    case \"header\":\n\t      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n\t      delete jsonml[ 1 ].level;\n\t      break;\n\t    case \"bulletlist\":\n\t      jsonml[ 0 ] = \"ul\";\n\t      break;\n\t    case \"numberlist\":\n\t      jsonml[ 0 ] = \"ol\";\n\t      break;\n\t    case \"listitem\":\n\t      jsonml[ 0 ] = \"li\";\n\t      break;\n\t    case \"para\":\n\t      jsonml[ 0 ] = \"p\";\n\t      break;\n\t    case \"markdown\":\n\t      jsonml[ 0 ] = \"html\";\n\t      if ( attrs ) delete attrs.references;\n\t      break;\n\t    case \"code_block\":\n\t      jsonml[ 0 ] = \"pre\";\n\t      i = attrs ? 2 : 1;\n\t      var code = [ \"code\" ];\n\t      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n\t      jsonml[ i ] = code;\n\t      break;\n\t    case \"inlinecode\":\n\t      jsonml[ 0 ] = \"code\";\n\t      break;\n\t    case \"img\":\n\t      jsonml[ 1 ].src = jsonml[ 1 ].href;\n\t      delete jsonml[ 1 ].href;\n\t      break;\n\t    case \"linebreak\":\n\t      jsonml[ 0 ] = \"br\";\n\t    break;\n\t    case \"link\":\n\t      jsonml[ 0 ] = \"a\";\n\t      break;\n\t    case \"link_ref\":\n\t      jsonml[ 0 ] = \"a\";\n\t\n\t      // grab this ref and clean up the attribute node\n\t      var ref = references[ attrs.ref ];\n\t\n\t      // if the reference exists, make the link\n\t      if ( ref ) {\n\t        delete attrs.ref;\n\t\n\t        // add in the href and title, if present\n\t        attrs.href = ref.href;\n\t        if ( ref.title ) {\n\t          attrs.title = ref.title;\n\t        }\n\t\n\t        // get rid of the unneeded original text\n\t        delete attrs.original;\n\t      }\n\t      // the reference doesn't exist, so revert to plain text\n\t      else {\n\t        return attrs.original;\n\t      }\n\t      break;\n\t    case \"img_ref\":\n\t      jsonml[ 0 ] = \"img\";\n\t\n\t      // grab this ref and clean up the attribute node\n\t      var ref = references[ attrs.ref ];\n\t\n\t      // if the reference exists, make the link\n\t      if ( ref ) {\n\t        delete attrs.ref;\n\t\n\t        // add in the href and title, if present\n\t        attrs.src = ref.href;\n\t        if ( ref.title ) {\n\t          attrs.title = ref.title;\n\t        }\n\t\n\t        // get rid of the unneeded original text\n\t        delete attrs.original;\n\t      }\n\t      // the reference doesn't exist, so revert to plain text\n\t      else {\n\t        return attrs.original;\n\t      }\n\t      break;\n\t  }\n\t\n\t  // convert all the children\n\t  i = 1;\n\t\n\t  // deal with the attribute node, if it exists\n\t  if ( attrs ) {\n\t    // if there are keys, skip over it\n\t    for ( var key in jsonml[ 1 ] ) {\n\t        i = 2;\n\t        break;\n\t    }\n\t    // if there aren't, remove it\n\t    if ( i === 1 ) {\n\t      jsonml.splice( i, 1 );\n\t    }\n\t  }\n\t\n\t  for ( ; i < jsonml.length; ++i ) {\n\t    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n\t  }\n\t\n\t  return jsonml;\n\t}\n\t\n\t\n\t// merges adjacent text nodes into a single node\n\tfunction merge_text_nodes( jsonml ) {\n\t  // skip the tag name and attribute hash\n\t  var i = extract_attr( jsonml ) ? 2 : 1;\n\t\n\t  while ( i < jsonml.length ) {\n\t    // if it's a string check the next item too\n\t    if ( typeof jsonml[ i ] === \"string\" ) {\n\t      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n\t        // merge the second string into the first and remove it\n\t        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n\t      }\n\t      else {\n\t        ++i;\n\t      }\n\t    }\n\t    // if it's not a string recurse\n\t    else {\n\t      merge_text_nodes( jsonml[ i ] );\n\t      ++i;\n\t    }\n\t  }\n\t}\n\t\n\t} )( (function() {\n\t  if ( false ) {\n\t    window.markdown = {};\n\t    return window.markdown;\n\t  }\n\t  else {\n\t    return exports;\n\t  }\n\t} )() );\n\n\n/***/ },\n\n/***/ 54:\n/***/ function(module, exports) {\n\n\t/* -----------------------------------------------\n\t/* Author : Vincent Garreau  - vincentgarreau.com\n\t/* MIT license: http://opensource.org/licenses/MIT\n\t/* Demo / Generator : vincentgarreau.com/particles.js\n\t/* GitHub : github.com/VincentGarreau/particles.js\n\t/* How to use? : Check the GitHub README\n\t/* v2.0.0\n\t/* ----------------------------------------------- */\n\t\n\tvar pJS = function(tag_id, params){\n\t\n\t  var canvas_el = document.querySelector('#'+tag_id+' > .particles-js-canvas-el');\n\t\n\t  /* particles.js variables with default values */\n\t  this.pJS = {\n\t    canvas: {\n\t      el: canvas_el,\n\t      w: canvas_el.offsetWidth,\n\t      h: canvas_el.offsetHeight\n\t    },\n\t    particles: {\n\t      number: {\n\t        value: 400,\n\t        density: {\n\t          enable: true,\n\t          value_area: 800\n\t        }\n\t      },\n\t      color: {\n\t        value: '#fff'\n\t      },\n\t      shape: {\n\t        type: 'circle',\n\t        stroke: {\n\t          width: 0,\n\t          color: '#ff0000'\n\t        },\n\t        polygon: {\n\t          nb_sides: 5\n\t        },\n\t        image: {\n\t          src: '',\n\t          width: 100,\n\t          height: 100\n\t        }\n\t      },\n\t      opacity: {\n\t        value: 1,\n\t        random: false,\n\t        anim: {\n\t          enable: false,\n\t          speed: 2,\n\t          opacity_min: 0,\n\t          sync: false\n\t        }\n\t      },\n\t      size: {\n\t        value: 20,\n\t        random: false,\n\t        anim: {\n\t          enable: false,\n\t          speed: 20,\n\t          size_min: 0,\n\t          sync: false\n\t        }\n\t      },\n\t      line_linked: {\n\t        enable: true,\n\t        distance: 100,\n\t        color: '#fff',\n\t        opacity: 1,\n\t        width: 1\n\t      },\n\t      move: {\n\t        enable: true,\n\t        speed: 2,\n\t        direction: 'none',\n\t        random: false,\n\t        straight: false,\n\t        out_mode: 'out',\n\t        bounce: false,\n\t        attract: {\n\t          enable: false,\n\t          rotateX: 3000,\n\t          rotateY: 3000\n\t        }\n\t      },\n\t      array: []\n\t    },\n\t    interactivity: {\n\t      detect_on: 'canvas',\n\t      events: {\n\t        onhover: {\n\t          enable: true,\n\t          mode: 'grab'\n\t        },\n\t        onclick: {\n\t          enable: true,\n\t          mode: 'push'\n\t        },\n\t        resize: true\n\t      },\n\t      modes: {\n\t        grab:{\n\t          distance: 100,\n\t          line_linked:{\n\t            opacity: 1\n\t          }\n\t        },\n\t        bubble:{\n\t          distance: 200,\n\t          size: 80,\n\t          duration: 0.4\n\t        },\n\t        repulse:{\n\t          distance: 200,\n\t          duration: 0.4\n\t        },\n\t        push:{\n\t          particles_nb: 4\n\t        },\n\t        remove:{\n\t          particles_nb: 2\n\t        }\n\t      },\n\t      mouse:{}\n\t    },\n\t    retina_detect: false,\n\t    fn: {\n\t      interact: {},\n\t      modes: {},\n\t      vendors:{}\n\t    },\n\t    tmp: {}\n\t  };\n\t\n\t  var pJS = this.pJS;\n\t\n\t  /* params settings */\n\t  if(params){\n\t    Object.deepExtend(pJS, params);\n\t  }\n\t\n\t  pJS.tmp.obj = {\n\t    size_value: pJS.particles.size.value,\n\t    size_anim_speed: pJS.particles.size.anim.speed,\n\t    move_speed: pJS.particles.move.speed,\n\t    line_linked_distance: pJS.particles.line_linked.distance,\n\t    line_linked_width: pJS.particles.line_linked.width,\n\t    mode_grab_distance: pJS.interactivity.modes.grab.distance,\n\t    mode_bubble_distance: pJS.interactivity.modes.bubble.distance,\n\t    mode_bubble_size: pJS.interactivity.modes.bubble.size,\n\t    mode_repulse_distance: pJS.interactivity.modes.repulse.distance\n\t  };\n\t\n\t\n\t  pJS.fn.retinaInit = function(){\n\t\n\t    if(pJS.retina_detect && window.devicePixelRatio > 1){\n\t      pJS.canvas.pxratio = window.devicePixelRatio; \n\t      pJS.tmp.retina = true;\n\t    } \n\t    else{\n\t      pJS.canvas.pxratio = 1;\n\t      pJS.tmp.retina = false;\n\t    }\n\t\n\t    pJS.canvas.w = pJS.canvas.el.offsetWidth * pJS.canvas.pxratio;\n\t    pJS.canvas.h = pJS.canvas.el.offsetHeight * pJS.canvas.pxratio;\n\t\n\t    pJS.particles.size.value = pJS.tmp.obj.size_value * pJS.canvas.pxratio;\n\t    pJS.particles.size.anim.speed = pJS.tmp.obj.size_anim_speed * pJS.canvas.pxratio;\n\t    pJS.particles.move.speed = pJS.tmp.obj.move_speed * pJS.canvas.pxratio;\n\t    pJS.particles.line_linked.distance = pJS.tmp.obj.line_linked_distance * pJS.canvas.pxratio;\n\t    pJS.interactivity.modes.grab.distance = pJS.tmp.obj.mode_grab_distance * pJS.canvas.pxratio;\n\t    pJS.interactivity.modes.bubble.distance = pJS.tmp.obj.mode_bubble_distance * pJS.canvas.pxratio;\n\t    pJS.particles.line_linked.width = pJS.tmp.obj.line_linked_width * pJS.canvas.pxratio;\n\t    pJS.interactivity.modes.bubble.size = pJS.tmp.obj.mode_bubble_size * pJS.canvas.pxratio;\n\t    pJS.interactivity.modes.repulse.distance = pJS.tmp.obj.mode_repulse_distance * pJS.canvas.pxratio;\n\t\n\t  };\n\t\n\t\n\t\n\t  /* ---------- pJS functions - canvas ------------ */\n\t\n\t  pJS.fn.canvasInit = function(){\n\t    pJS.canvas.ctx = pJS.canvas.el.getContext('2d');\n\t  };\n\t\n\t  pJS.fn.canvasSize = function(){\n\t\n\t    pJS.canvas.el.width = pJS.canvas.w;\n\t    pJS.canvas.el.height = pJS.canvas.h;\n\t\n\t    if(pJS && pJS.interactivity.events.resize){\n\t\n\t      window.addEventListener('resize', function(){\n\t\n\t          pJS.canvas.w = pJS.canvas.el.offsetWidth;\n\t          pJS.canvas.h = pJS.canvas.el.offsetHeight;\n\t\n\t          /* resize canvas */\n\t          if(pJS.tmp.retina){\n\t            pJS.canvas.w *= pJS.canvas.pxratio;\n\t            pJS.canvas.h *= pJS.canvas.pxratio;\n\t          }\n\t\n\t          pJS.canvas.el.width = pJS.canvas.w;\n\t          pJS.canvas.el.height = pJS.canvas.h;\n\t\n\t          /* repaint canvas on anim disabled */\n\t          if(!pJS.particles.move.enable){\n\t            pJS.fn.particlesEmpty();\n\t            pJS.fn.particlesCreate();\n\t            pJS.fn.particlesDraw();\n\t            pJS.fn.vendors.densityAutoParticles();\n\t          }\n\t\n\t        /* density particles enabled */\n\t        pJS.fn.vendors.densityAutoParticles();\n\t\n\t      });\n\t\n\t    }\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.canvasPaint = function(){\n\t    pJS.canvas.ctx.fillRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n\t  };\n\t\n\t  pJS.fn.canvasClear = function(){\n\t    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n\t  };\n\t\n\t\n\t  /* --------- pJS functions - particles ----------- */\n\t\n\t  pJS.fn.particle = function(color, opacity, position){\n\t\n\t    /* size */\n\t    this.radius = (pJS.particles.size.random ? Math.random() : 1) * pJS.particles.size.value;\n\t    if(pJS.particles.size.anim.enable){\n\t      this.size_status = false;\n\t      this.vs = pJS.particles.size.anim.speed / 100;\n\t      if(!pJS.particles.size.anim.sync){\n\t        this.vs = this.vs * Math.random();\n\t      }\n\t    }\n\t\n\t    /* position */\n\t    this.x = position ? position.x : Math.random() * pJS.canvas.w;\n\t    this.y = position ? position.y : Math.random() * pJS.canvas.h;\n\t\n\t    /* check position  - into the canvas */\n\t    if(this.x > pJS.canvas.w - this.radius*2) this.x = this.x - this.radius;\n\t    else if(this.x < this.radius*2) this.x = this.x + this.radius;\n\t    if(this.y > pJS.canvas.h - this.radius*2) this.y = this.y - this.radius;\n\t    else if(this.y < this.radius*2) this.y = this.y + this.radius;\n\t\n\t    /* check position - avoid overlap */\n\t    if(pJS.particles.move.bounce){\n\t      pJS.fn.vendors.checkOverlap(this, position);\n\t    }\n\t\n\t    /* color */\n\t    this.color = {};\n\t    if(typeof(color.value) == 'object'){\n\t\n\t      if(color.value instanceof Array){\n\t        var color_selected = color.value[Math.floor(Math.random() * pJS.particles.color.value.length)];\n\t        this.color.rgb = hexToRgb(color_selected);\n\t      }else{\n\t        if(color.value.r != undefined && color.value.g != undefined && color.value.b != undefined){\n\t          this.color.rgb = {\n\t            r: color.value.r,\n\t            g: color.value.g,\n\t            b: color.value.b\n\t          }\n\t        }\n\t        if(color.value.h != undefined && color.value.s != undefined && color.value.l != undefined){\n\t          this.color.hsl = {\n\t            h: color.value.h,\n\t            s: color.value.s,\n\t            l: color.value.l\n\t          }\n\t        }\n\t      }\n\t\n\t    }\n\t    else if(color.value == 'random'){\n\t      this.color.rgb = {\n\t        r: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n\t        g: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n\t        b: (Math.floor(Math.random() * (255 - 0 + 1)) + 0)\n\t      }\n\t    }\n\t    else if(typeof(color.value) == 'string'){\n\t      this.color = color;\n\t      this.color.rgb = hexToRgb(this.color.value);\n\t    }\n\t\n\t    /* opacity */\n\t    this.opacity = (pJS.particles.opacity.random ? Math.random() : 1) * pJS.particles.opacity.value;\n\t    if(pJS.particles.opacity.anim.enable){\n\t      this.opacity_status = false;\n\t      this.vo = pJS.particles.opacity.anim.speed / 100;\n\t      if(!pJS.particles.opacity.anim.sync){\n\t        this.vo = this.vo * Math.random();\n\t      }\n\t    }\n\t\n\t    /* animation - velocity for speed */\n\t    var velbase = {}\n\t    switch(pJS.particles.move.direction){\n\t      case 'top':\n\t        velbase = { x:0, y:-1 };\n\t      break;\n\t      case 'top-right':\n\t        velbase = { x:0.5, y:-0.5 };\n\t      break;\n\t      case 'right':\n\t        velbase = { x:1, y:-0 };\n\t      break;\n\t      case 'bottom-right':\n\t        velbase = { x:0.5, y:0.5 };\n\t      break;\n\t      case 'bottom':\n\t        velbase = { x:0, y:1 };\n\t      break;\n\t      case 'bottom-left':\n\t        velbase = { x:-0.5, y:1 };\n\t      break;\n\t      case 'left':\n\t        velbase = { x:-1, y:0 };\n\t      break;\n\t      case 'top-left':\n\t        velbase = { x:-0.5, y:-0.5 };\n\t      break;\n\t      default:\n\t        velbase = { x:0, y:0 };\n\t      break;\n\t    }\n\t\n\t    if(pJS.particles.move.straight){\n\t      this.vx = velbase.x;\n\t      this.vy = velbase.y;\n\t      if(pJS.particles.move.random){\n\t        this.vx = this.vx * (Math.random());\n\t        this.vy = this.vy * (Math.random());\n\t      }\n\t    }else{\n\t      this.vx = velbase.x + Math.random()-0.5;\n\t      this.vy = velbase.y + Math.random()-0.5;\n\t    }\n\t\n\t    // var theta = 2.0 * Math.PI * Math.random();\n\t    // this.vx = Math.cos(theta);\n\t    // this.vy = Math.sin(theta);\n\t\n\t    this.vx_i = this.vx;\n\t    this.vy_i = this.vy;\n\t\n\t    \n\t\n\t    /* if shape is image */\n\t\n\t    var shape_type = pJS.particles.shape.type;\n\t    if(typeof(shape_type) == 'object'){\n\t      if(shape_type instanceof Array){\n\t        var shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];\n\t        this.shape = shape_selected;\n\t      }\n\t    }else{\n\t      this.shape = shape_type;\n\t    }\n\t\n\t    if(this.shape == 'image'){\n\t      var sh = pJS.particles.shape;\n\t      this.img = {\n\t        src: sh.image.src,\n\t        ratio: sh.image.width / sh.image.height\n\t      }\n\t      if(!this.img.ratio) this.img.ratio = 1;\n\t      if(pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg != undefined){\n\t        pJS.fn.vendors.createSvgImg(this);\n\t        if(pJS.tmp.pushing){\n\t          this.img.loaded = false;\n\t        }\n\t      }\n\t    }\n\t\n\t    \n\t\n\t  };\n\t\n\t\n\t  pJS.fn.particle.prototype.draw = function() {\n\t\n\t    var p = this;\n\t\n\t    if(p.radius_bubble != undefined){\n\t      var radius = p.radius_bubble; \n\t    }else{\n\t      var radius = p.radius;\n\t    }\n\t\n\t    if(p.opacity_bubble != undefined){\n\t      var opacity = p.opacity_bubble;\n\t    }else{\n\t      var opacity = p.opacity;\n\t    }\n\t\n\t    if(p.color.rgb){\n\t      var color_value = 'rgba('+p.color.rgb.r+','+p.color.rgb.g+','+p.color.rgb.b+','+opacity+')';\n\t    }else{\n\t      var color_value = 'hsla('+p.color.hsl.h+','+p.color.hsl.s+'%,'+p.color.hsl.l+'%,'+opacity+')';\n\t    }\n\t\n\t    pJS.canvas.ctx.fillStyle = color_value;\n\t    pJS.canvas.ctx.beginPath();\n\t\n\t    switch(p.shape){\n\t\n\t      case 'circle':\n\t        pJS.canvas.ctx.arc(p.x, p.y, radius, 0, Math.PI * 2, false);\n\t      break;\n\t\n\t      case 'edge':\n\t        pJS.canvas.ctx.rect(p.x-radius, p.y-radius, radius*2, radius*2);\n\t      break;\n\t\n\t      case 'triangle':\n\t        pJS.fn.vendors.drawShape(pJS.canvas.ctx, p.x-radius, p.y+radius / 1.66, radius*2, 3, 2);\n\t      break;\n\t\n\t      case 'polygon':\n\t        pJS.fn.vendors.drawShape(\n\t          pJS.canvas.ctx,\n\t          p.x - radius / (pJS.particles.shape.polygon.nb_sides/3.5), // startX\n\t          p.y - radius / (2.66/3.5), // startY\n\t          radius*2.66 / (pJS.particles.shape.polygon.nb_sides/3), // sideLength\n\t          pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\n\t          1 // sideCountDenominator\n\t        );\n\t      break;\n\t\n\t      case 'star':\n\t        pJS.fn.vendors.drawShape(\n\t          pJS.canvas.ctx,\n\t          p.x - radius*2 / (pJS.particles.shape.polygon.nb_sides/4), // startX\n\t          p.y - radius / (2*2.66/3.5), // startY\n\t          radius*2*2.66 / (pJS.particles.shape.polygon.nb_sides/3), // sideLength\n\t          pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\n\t          2 // sideCountDenominator\n\t        );\n\t      break;\n\t\n\t      case 'image':\n\t\n\t        function draw(){\n\t          pJS.canvas.ctx.drawImage(\n\t            img_obj,\n\t            p.x-radius,\n\t            p.y-radius,\n\t            radius*2,\n\t            radius*2 / p.img.ratio\n\t          );\n\t        }\n\t\n\t        if(pJS.tmp.img_type == 'svg'){\n\t          var img_obj = p.img.obj;\n\t        }else{\n\t          var img_obj = pJS.tmp.img_obj;\n\t        }\n\t\n\t        if(img_obj){\n\t          draw();\n\t        }\n\t\n\t      break;\n\t\n\t    }\n\t\n\t    pJS.canvas.ctx.closePath();\n\t\n\t    if(pJS.particles.shape.stroke.width > 0){\n\t      pJS.canvas.ctx.strokeStyle = pJS.particles.shape.stroke.color;\n\t      pJS.canvas.ctx.lineWidth = pJS.particles.shape.stroke.width;\n\t      pJS.canvas.ctx.stroke();\n\t    }\n\t    \n\t    pJS.canvas.ctx.fill();\n\t    \n\t  };\n\t\n\t\n\t  pJS.fn.particlesCreate = function(){\n\t    for(var i = 0; i < pJS.particles.number.value; i++) {\n\t      pJS.particles.array.push(new pJS.fn.particle(pJS.particles.color, pJS.particles.opacity.value));\n\t    }\n\t  };\n\t\n\t  pJS.fn.particlesUpdate = function(){\n\t\n\t    for(var i = 0; i < pJS.particles.array.length; i++){\n\t\n\t      /* the particle */\n\t      var p = pJS.particles.array[i];\n\t\n\t      // var d = ( dx = pJS.interactivity.mouse.click_pos_x - p.x ) * dx + ( dy = pJS.interactivity.mouse.click_pos_y - p.y ) * dy;\n\t      // var f = -BANG_SIZE / d;\n\t      // if ( d < BANG_SIZE ) {\n\t      //     var t = Math.atan2( dy, dx );\n\t      //     p.vx = f * Math.cos(t);\n\t      //     p.vy = f * Math.sin(t);\n\t      // }\n\t\n\t      /* move the particle */\n\t      if(pJS.particles.move.enable){\n\t        var ms = pJS.particles.move.speed/2;\n\t        p.x += p.vx * ms;\n\t        p.y += p.vy * ms;\n\t      }\n\t\n\t      /* change opacity status */\n\t      if(pJS.particles.opacity.anim.enable) {\n\t        if(p.opacity_status == true) {\n\t          if(p.opacity >= pJS.particles.opacity.value) p.opacity_status = false;\n\t          p.opacity += p.vo;\n\t        }else {\n\t          if(p.opacity <= pJS.particles.opacity.anim.opacity_min) p.opacity_status = true;\n\t          p.opacity -= p.vo;\n\t        }\n\t        if(p.opacity < 0) p.opacity = 0;\n\t      }\n\t\n\t      /* change size */\n\t      if(pJS.particles.size.anim.enable){\n\t        if(p.size_status == true){\n\t          if(p.radius >= pJS.particles.size.value) p.size_status = false;\n\t          p.radius += p.vs;\n\t        }else{\n\t          if(p.radius <= pJS.particles.size.anim.size_min) p.size_status = true;\n\t          p.radius -= p.vs;\n\t        }\n\t        if(p.radius < 0) p.radius = 0;\n\t      }\n\t\n\t      /* change particle position if it is out of canvas */\n\t      if(pJS.particles.move.out_mode == 'bounce'){\n\t        var new_pos = {\n\t          x_left: p.radius,\n\t          x_right:  pJS.canvas.w,\n\t          y_top: p.radius,\n\t          y_bottom: pJS.canvas.h\n\t        }\n\t      }else{\n\t        var new_pos = {\n\t          x_left: -p.radius,\n\t          x_right: pJS.canvas.w + p.radius,\n\t          y_top: -p.radius,\n\t          y_bottom: pJS.canvas.h + p.radius\n\t        }\n\t      }\n\t\n\t      if(p.x - p.radius > pJS.canvas.w){\n\t        p.x = new_pos.x_left;\n\t        p.y = Math.random() * pJS.canvas.h;\n\t      }\n\t      else if(p.x + p.radius < 0){\n\t        p.x = new_pos.x_right;\n\t        p.y = Math.random() * pJS.canvas.h;\n\t      }\n\t      if(p.y - p.radius > pJS.canvas.h){\n\t        p.y = new_pos.y_top;\n\t        p.x = Math.random() * pJS.canvas.w;\n\t      }\n\t      else if(p.y + p.radius < 0){\n\t        p.y = new_pos.y_bottom;\n\t        p.x = Math.random() * pJS.canvas.w;\n\t      }\n\t\n\t      /* out of canvas modes */\n\t      switch(pJS.particles.move.out_mode){\n\t        case 'bounce':\n\t          if (p.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\n\t          else if (p.x - p.radius < 0) p.vx = -p.vx;\n\t          if (p.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\n\t          else if (p.y - p.radius < 0) p.vy = -p.vy;\n\t        break;\n\t      }\n\t\n\t      /* events */\n\t      if(isInArray('grab', pJS.interactivity.events.onhover.mode)){\n\t        pJS.fn.modes.grabParticle(p);\n\t      }\n\t\n\t      if(isInArray('bubble', pJS.interactivity.events.onhover.mode) || isInArray('bubble', pJS.interactivity.events.onclick.mode)){\n\t        pJS.fn.modes.bubbleParticle(p);\n\t      }\n\t\n\t      if(isInArray('repulse', pJS.interactivity.events.onhover.mode) || isInArray('repulse', pJS.interactivity.events.onclick.mode)){\n\t        pJS.fn.modes.repulseParticle(p);\n\t      }\n\t\n\t      /* interaction auto between particles */\n\t      if(pJS.particles.line_linked.enable || pJS.particles.move.attract.enable){\n\t        for(var j = i + 1; j < pJS.particles.array.length; j++){\n\t          var p2 = pJS.particles.array[j];\n\t\n\t          /* link particles */\n\t          if(pJS.particles.line_linked.enable){\n\t            pJS.fn.interact.linkParticles(p,p2);\n\t          }\n\t\n\t          /* attract particles */\n\t          if(pJS.particles.move.attract.enable){\n\t            pJS.fn.interact.attractParticles(p,p2);\n\t          }\n\t\n\t          /* bounce particles */\n\t          if(pJS.particles.move.bounce){\n\t            pJS.fn.interact.bounceParticles(p,p2);\n\t          }\n\t\n\t        }\n\t      }\n\t\n\t\n\t    }\n\t\n\t  };\n\t\n\t  pJS.fn.particlesDraw = function(){\n\t\n\t    /* clear canvas */\n\t    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n\t\n\t    /* update each particles param */\n\t    pJS.fn.particlesUpdate();\n\t\n\t    /* draw each particle */\n\t    for(var i = 0; i < pJS.particles.array.length; i++){\n\t      var p = pJS.particles.array[i];\n\t      p.draw();\n\t    }\n\t\n\t  };\n\t\n\t  pJS.fn.particlesEmpty = function(){\n\t    pJS.particles.array = [];\n\t  };\n\t\n\t  pJS.fn.particlesRefresh = function(){\n\t\n\t    /* init all */\n\t    cancelRequestAnimFrame(pJS.fn.checkAnimFrame);\n\t    cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n\t    pJS.tmp.source_svg = undefined;\n\t    pJS.tmp.img_obj = undefined;\n\t    pJS.tmp.count_svg = 0;\n\t    pJS.fn.particlesEmpty();\n\t    pJS.fn.canvasClear();\n\t    \n\t    /* restart */\n\t    pJS.fn.vendors.start();\n\t\n\t  };\n\t\n\t\n\t  /* ---------- pJS functions - particles interaction ------------ */\n\t\n\t  pJS.fn.interact.linkParticles = function(p1, p2){\n\t\n\t    var dx = p1.x - p2.x,\n\t        dy = p1.y - p2.y,\n\t        dist = Math.sqrt(dx*dx + dy*dy);\n\t\n\t    /* draw a line between p1 and p2 if the distance between them is under the config distance */\n\t    if(dist <= pJS.particles.line_linked.distance){\n\t\n\t      var opacity_line = pJS.particles.line_linked.opacity - (dist / (1/pJS.particles.line_linked.opacity)) / pJS.particles.line_linked.distance;\n\t\n\t      if(opacity_line > 0){        \n\t        \n\t        /* style */\n\t        var color_line = pJS.particles.line_linked.color_rgb_line;\n\t        pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+opacity_line+')';\n\t        pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n\t        //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\n\t        \n\t        /* path */\n\t        pJS.canvas.ctx.beginPath();\n\t        pJS.canvas.ctx.moveTo(p1.x, p1.y);\n\t        pJS.canvas.ctx.lineTo(p2.x, p2.y);\n\t        pJS.canvas.ctx.stroke();\n\t        pJS.canvas.ctx.closePath();\n\t\n\t      }\n\t\n\t    }\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.interact.attractParticles  = function(p1, p2){\n\t\n\t    /* condensed particles */\n\t    var dx = p1.x - p2.x,\n\t        dy = p1.y - p2.y,\n\t        dist = Math.sqrt(dx*dx + dy*dy);\n\t\n\t    if(dist <= pJS.particles.line_linked.distance){\n\t\n\t      var ax = dx/(pJS.particles.move.attract.rotateX*1000),\n\t          ay = dy/(pJS.particles.move.attract.rotateY*1000);\n\t\n\t      p1.vx -= ax;\n\t      p1.vy -= ay;\n\t\n\t      p2.vx += ax;\n\t      p2.vy += ay;\n\t\n\t    }\n\t    \n\t\n\t  }\n\t\n\t\n\t  pJS.fn.interact.bounceParticles = function(p1, p2){\n\t\n\t    var dx = p1.x - p2.x,\n\t        dy = p1.y - p2.y,\n\t        dist = Math.sqrt(dx*dx + dy*dy),\n\t        dist_p = p1.radius+p2.radius;\n\t\n\t    if(dist <= dist_p){\n\t      p1.vx = -p1.vx;\n\t      p1.vy = -p1.vy;\n\t\n\t      p2.vx = -p2.vx;\n\t      p2.vy = -p2.vy;\n\t    }\n\t\n\t  }\n\t\n\t\n\t  /* ---------- pJS functions - modes events ------------ */\n\t\n\t  pJS.fn.modes.pushParticles = function(nb, pos){\n\t\n\t    pJS.tmp.pushing = true;\n\t\n\t    for(var i = 0; i < nb; i++){\n\t      pJS.particles.array.push(\n\t        new pJS.fn.particle(\n\t          pJS.particles.color,\n\t          pJS.particles.opacity.value,\n\t          {\n\t            'x': pos ? pos.pos_x : Math.random() * pJS.canvas.w,\n\t            'y': pos ? pos.pos_y : Math.random() * pJS.canvas.h\n\t          }\n\t        )\n\t      )\n\t      if(i == nb-1){\n\t        if(!pJS.particles.move.enable){\n\t          pJS.fn.particlesDraw();\n\t        }\n\t        pJS.tmp.pushing = false;\n\t      }\n\t    }\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.modes.removeParticles = function(nb){\n\t\n\t    pJS.particles.array.splice(0, nb);\n\t    if(!pJS.particles.move.enable){\n\t      pJS.fn.particlesDraw();\n\t    }\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.modes.bubbleParticle = function(p){\n\t\n\t    /* on hover event */\n\t    if(pJS.interactivity.events.onhover.enable && isInArray('bubble', pJS.interactivity.events.onhover.mode)){\n\t\n\t      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n\t          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n\t          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse),\n\t          ratio = 1 - dist_mouse / pJS.interactivity.modes.bubble.distance;\n\t\n\t      function init(){\n\t        p.opacity_bubble = p.opacity;\n\t        p.radius_bubble = p.radius;\n\t      }\n\t\n\t      /* mousemove - check ratio */\n\t      if(dist_mouse <= pJS.interactivity.modes.bubble.distance){\n\t\n\t        if(ratio >= 0 && pJS.interactivity.status == 'mousemove'){\n\t          \n\t          /* size */\n\t          if(pJS.interactivity.modes.bubble.size != pJS.particles.size.value){\n\t\n\t            if(pJS.interactivity.modes.bubble.size > pJS.particles.size.value){\n\t              var size = p.radius + (pJS.interactivity.modes.bubble.size*ratio);\n\t              if(size >= 0){\n\t                p.radius_bubble = size;\n\t              }\n\t            }else{\n\t              var dif = p.radius - pJS.interactivity.modes.bubble.size,\n\t                  size = p.radius - (dif*ratio);\n\t              if(size > 0){\n\t                p.radius_bubble = size;\n\t              }else{\n\t                p.radius_bubble = 0;\n\t              }\n\t            }\n\t\n\t          }\n\t\n\t          /* opacity */\n\t          if(pJS.interactivity.modes.bubble.opacity != pJS.particles.opacity.value){\n\t\n\t            if(pJS.interactivity.modes.bubble.opacity > pJS.particles.opacity.value){\n\t              var opacity = pJS.interactivity.modes.bubble.opacity*ratio;\n\t              if(opacity > p.opacity && opacity <= pJS.interactivity.modes.bubble.opacity){\n\t                p.opacity_bubble = opacity;\n\t              }\n\t            }else{\n\t              var opacity = p.opacity - (pJS.particles.opacity.value-pJS.interactivity.modes.bubble.opacity)*ratio;\n\t              if(opacity < p.opacity && opacity >= pJS.interactivity.modes.bubble.opacity){\n\t                p.opacity_bubble = opacity;\n\t              }\n\t            }\n\t\n\t          }\n\t\n\t        }\n\t\n\t      }else{\n\t        init();\n\t      }\n\t\n\t\n\t      /* mouseleave */\n\t      if(pJS.interactivity.status == 'mouseleave'){\n\t        init();\n\t      }\n\t    \n\t    }\n\t\n\t    /* on click event */\n\t    else if(pJS.interactivity.events.onclick.enable && isInArray('bubble', pJS.interactivity.events.onclick.mode)){\n\t\n\t\n\t      if(pJS.tmp.bubble_clicking){\n\t        var dx_mouse = p.x - pJS.interactivity.mouse.click_pos_x,\n\t            dy_mouse = p.y - pJS.interactivity.mouse.click_pos_y,\n\t            dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse),\n\t            time_spent = (new Date().getTime() - pJS.interactivity.mouse.click_time)/1000;\n\t\n\t        if(time_spent > pJS.interactivity.modes.bubble.duration){\n\t          pJS.tmp.bubble_duration_end = true;\n\t        }\n\t\n\t        if(time_spent > pJS.interactivity.modes.bubble.duration*2){\n\t          pJS.tmp.bubble_clicking = false;\n\t          pJS.tmp.bubble_duration_end = false;\n\t        }\n\t      }\n\t\n\t\n\t      function process(bubble_param, particles_param, p_obj_bubble, p_obj, id){\n\t\n\t        if(bubble_param != particles_param){\n\t\n\t          if(!pJS.tmp.bubble_duration_end){\n\t            if(dist_mouse <= pJS.interactivity.modes.bubble.distance){\n\t              if(p_obj_bubble != undefined) var obj = p_obj_bubble;\n\t              else var obj = p_obj;\n\t              if(obj != bubble_param){\n\t                var value = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration);\n\t                if(id == 'size') p.radius_bubble = value;\n\t                if(id == 'opacity') p.opacity_bubble = value;\n\t              }\n\t            }else{\n\t              if(id == 'size') p.radius_bubble = undefined;\n\t              if(id == 'opacity') p.opacity_bubble = undefined;\n\t            }\n\t          }else{\n\t            if(p_obj_bubble != undefined){\n\t              var value_tmp = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration),\n\t                  dif = bubble_param - value_tmp;\n\t                  value = bubble_param + dif;\n\t              if(id == 'size') p.radius_bubble = value;\n\t              if(id == 'opacity') p.opacity_bubble = value;\n\t            }\n\t          }\n\t\n\t        }\n\t\n\t      }\n\t\n\t      if(pJS.tmp.bubble_clicking){\n\t        /* size */\n\t        process(pJS.interactivity.modes.bubble.size, pJS.particles.size.value, p.radius_bubble, p.radius, 'size');\n\t        /* opacity */\n\t        process(pJS.interactivity.modes.bubble.opacity, pJS.particles.opacity.value, p.opacity_bubble, p.opacity, 'opacity');\n\t      }\n\t\n\t    }\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.modes.repulseParticle = function(p){\n\t\n\t    if(pJS.interactivity.events.onhover.enable && isInArray('repulse', pJS.interactivity.events.onhover.mode) && pJS.interactivity.status == 'mousemove') {\n\t\n\t      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n\t          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n\t          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse);\n\t\n\t      var normVec = {x: dx_mouse/dist_mouse, y: dy_mouse/dist_mouse},\n\t          repulseRadius = pJS.interactivity.modes.repulse.distance,\n\t          velocity = 100,\n\t          repulseFactor = clamp((1/repulseRadius)*(-1*Math.pow(dist_mouse/repulseRadius,2)+1)*repulseRadius*velocity, 0, 50);\n\t      \n\t      var pos = {\n\t        x: p.x + normVec.x * repulseFactor,\n\t        y: p.y + normVec.y * repulseFactor\n\t      }\n\t\n\t      if(pJS.particles.move.out_mode == 'bounce'){\n\t        if(pos.x - p.radius > 0 && pos.x + p.radius < pJS.canvas.w) p.x = pos.x;\n\t        if(pos.y - p.radius > 0 && pos.y + p.radius < pJS.canvas.h) p.y = pos.y;\n\t      }else{\n\t        p.x = pos.x;\n\t        p.y = pos.y;\n\t      }\n\t    \n\t    }\n\t\n\t\n\t    else if(pJS.interactivity.events.onclick.enable && isInArray('repulse', pJS.interactivity.events.onclick.mode)) {\n\t\n\t      if(!pJS.tmp.repulse_finish){\n\t        pJS.tmp.repulse_count++;\n\t        if(pJS.tmp.repulse_count == pJS.particles.array.length){\n\t          pJS.tmp.repulse_finish = true;\n\t        }\n\t      }\n\t\n\t      if(pJS.tmp.repulse_clicking){\n\t\n\t        var repulseRadius = Math.pow(pJS.interactivity.modes.repulse.distance/6, 3);\n\t\n\t        var dx = pJS.interactivity.mouse.click_pos_x - p.x,\n\t            dy = pJS.interactivity.mouse.click_pos_y - p.y,\n\t            d = dx*dx + dy*dy;\n\t\n\t        var force = -repulseRadius / d * 1;\n\t\n\t        function process(){\n\t\n\t          var f = Math.atan2(dy,dx);\n\t          p.vx = force * Math.cos(f);\n\t          p.vy = force * Math.sin(f);\n\t\n\t          if(pJS.particles.move.out_mode == 'bounce'){\n\t            var pos = {\n\t              x: p.x + p.vx,\n\t              y: p.y + p.vy\n\t            }\n\t            if (pos.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\n\t            else if (pos.x - p.radius < 0) p.vx = -p.vx;\n\t            if (pos.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\n\t            else if (pos.y - p.radius < 0) p.vy = -p.vy;\n\t          }\n\t\n\t        }\n\t\n\t        // default\n\t        if(d <= repulseRadius){\n\t          process();\n\t        }\n\t\n\t        // bang - slow motion mode\n\t        // if(!pJS.tmp.repulse_finish){\n\t        //   if(d <= repulseRadius){\n\t        //     process();\n\t        //   }\n\t        // }else{\n\t        //   process();\n\t        // }\n\t        \n\t\n\t      }else{\n\t\n\t        if(pJS.tmp.repulse_clicking == false){\n\t\n\t          p.vx = p.vx_i;\n\t          p.vy = p.vy_i;\n\t        \n\t        }\n\t\n\t      }\n\t\n\t    }\n\t\n\t  }\n\t\n\t\n\t  pJS.fn.modes.grabParticle = function(p){\n\t\n\t    if(pJS.interactivity.events.onhover.enable && pJS.interactivity.status == 'mousemove'){\n\t\n\t      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n\t          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n\t          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse);\n\t\n\t      /* draw a line between the cursor and the particle if the distance between them is under the config distance */\n\t      if(dist_mouse <= pJS.interactivity.modes.grab.distance){\n\t\n\t        var opacity_line = pJS.interactivity.modes.grab.line_linked.opacity - (dist_mouse / (1/pJS.interactivity.modes.grab.line_linked.opacity)) / pJS.interactivity.modes.grab.distance;\n\t\n\t        if(opacity_line > 0){\n\t\n\t          /* style */\n\t          var color_line = pJS.particles.line_linked.color_rgb_line;\n\t          pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+opacity_line+')';\n\t          pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n\t          //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\n\t          \n\t          /* path */\n\t          pJS.canvas.ctx.beginPath();\n\t          pJS.canvas.ctx.moveTo(p.x, p.y);\n\t          pJS.canvas.ctx.lineTo(pJS.interactivity.mouse.pos_x, pJS.interactivity.mouse.pos_y);\n\t          pJS.canvas.ctx.stroke();\n\t          pJS.canvas.ctx.closePath();\n\t\n\t        }\n\t\n\t      }\n\t\n\t    }\n\t\n\t  };\n\t\n\t\n\t\n\t  /* ---------- pJS functions - vendors ------------ */\n\t\n\t  pJS.fn.vendors.eventsListeners = function(){\n\t\n\t    /* events target element */\n\t    if(pJS.interactivity.detect_on == 'window'){\n\t      pJS.interactivity.el = window;\n\t    }else{\n\t      pJS.interactivity.el = pJS.canvas.el;\n\t    }\n\t\n\t\n\t    /* detect mouse pos - on hover / click event */\n\t    if(pJS.interactivity.events.onhover.enable || pJS.interactivity.events.onclick.enable){\n\t\n\t      /* el on mousemove */\n\t      pJS.interactivity.el.addEventListener('mousemove', function(e){\n\t\n\t        if(pJS.interactivity.el == window){\n\t          var pos_x = e.clientX,\n\t              pos_y = e.clientY;\n\t        }\n\t        else{\n\t          var pos_x = e.offsetX || e.clientX,\n\t              pos_y = e.offsetY || e.clientY;\n\t        }\n\t\n\t        pJS.interactivity.mouse.pos_x = pos_x;\n\t        pJS.interactivity.mouse.pos_y = pos_y;\n\t\n\t        if(pJS.tmp.retina){\n\t          pJS.interactivity.mouse.pos_x *= pJS.canvas.pxratio;\n\t          pJS.interactivity.mouse.pos_y *= pJS.canvas.pxratio;\n\t        }\n\t\n\t        pJS.interactivity.status = 'mousemove';\n\t\n\t      });\n\t\n\t      /* el on onmouseleave */\n\t      pJS.interactivity.el.addEventListener('mouseleave', function(e){\n\t\n\t        pJS.interactivity.mouse.pos_x = null;\n\t        pJS.interactivity.mouse.pos_y = null;\n\t        pJS.interactivity.status = 'mouseleave';\n\t\n\t      });\n\t\n\t    }\n\t\n\t    /* on click event */\n\t    if(pJS.interactivity.events.onclick.enable){\n\t\n\t      pJS.interactivity.el.addEventListener('click', function(){\n\t\n\t        pJS.interactivity.mouse.click_pos_x = pJS.interactivity.mouse.pos_x;\n\t        pJS.interactivity.mouse.click_pos_y = pJS.interactivity.mouse.pos_y;\n\t        pJS.interactivity.mouse.click_time = new Date().getTime();\n\t\n\t        if(pJS.interactivity.events.onclick.enable){\n\t\n\t          switch(pJS.interactivity.events.onclick.mode){\n\t\n\t            case 'push':\n\t              if(pJS.particles.move.enable){\n\t                pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\n\t              }else{\n\t                if(pJS.interactivity.modes.push.particles_nb == 1){\n\t                  pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\n\t                }\n\t                else if(pJS.interactivity.modes.push.particles_nb > 1){\n\t                  pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb);\n\t                }\n\t              }\n\t            break;\n\t\n\t            case 'remove':\n\t              pJS.fn.modes.removeParticles(pJS.interactivity.modes.remove.particles_nb);\n\t            break;\n\t\n\t            case 'bubble':\n\t              pJS.tmp.bubble_clicking = true;\n\t            break;\n\t\n\t            case 'repulse':\n\t              pJS.tmp.repulse_clicking = true;\n\t              pJS.tmp.repulse_count = 0;\n\t              pJS.tmp.repulse_finish = false;\n\t              setTimeout(function(){\n\t                pJS.tmp.repulse_clicking = false;\n\t              }, pJS.interactivity.modes.repulse.duration*1000)\n\t            break;\n\t\n\t          }\n\t\n\t        }\n\t\n\t      });\n\t        \n\t    }\n\t\n\t\n\t  };\n\t\n\t  pJS.fn.vendors.densityAutoParticles = function(){\n\t\n\t    if(pJS.particles.number.density.enable){\n\t\n\t      /* calc area */\n\t      var area = pJS.canvas.el.width * pJS.canvas.el.height / 1000;\n\t      if(pJS.tmp.retina){\n\t        area = area/(pJS.canvas.pxratio*2);\n\t      }\n\t\n\t      /* calc number of particles based on density area */\n\t      var nb_particles = area * pJS.particles.number.value / pJS.particles.number.density.value_area;\n\t\n\t      /* add or remove X particles */\n\t      var missing_particles = pJS.particles.array.length - nb_particles;\n\t      if(missing_particles < 0) pJS.fn.modes.pushParticles(Math.abs(missing_particles));\n\t      else pJS.fn.modes.removeParticles(missing_particles);\n\t\n\t    }\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.vendors.checkOverlap = function(p1, position){\n\t    for(var i = 0; i < pJS.particles.array.length; i++){\n\t      var p2 = pJS.particles.array[i];\n\t\n\t      var dx = p1.x - p2.x,\n\t          dy = p1.y - p2.y,\n\t          dist = Math.sqrt(dx*dx + dy*dy);\n\t\n\t      if(dist <= p1.radius + p2.radius){\n\t        p1.x = position ? position.x : Math.random() * pJS.canvas.w;\n\t        p1.y = position ? position.y : Math.random() * pJS.canvas.h;\n\t        pJS.fn.vendors.checkOverlap(p1);\n\t      }\n\t    }\n\t  };\n\t\n\t\n\t  pJS.fn.vendors.createSvgImg = function(p){\n\t\n\t    /* set color to svg element */\n\t    var svgXml = pJS.tmp.source_svg,\n\t        rgbHex = /#([0-9A-F]{3,6})/gi,\n\t        coloredSvgXml = svgXml.replace(rgbHex, function (m, r, g, b) {\n\t          if(p.color.rgb){\n\t            var color_value = 'rgba('+p.color.rgb.r+','+p.color.rgb.g+','+p.color.rgb.b+','+p.opacity+')';\n\t          }else{\n\t            var color_value = 'hsla('+p.color.hsl.h+','+p.color.hsl.s+'%,'+p.color.hsl.l+'%,'+p.opacity+')';\n\t          }\n\t          return color_value;\n\t        });\n\t\n\t    /* prepare to create img with colored svg */\n\t    var svg = new Blob([coloredSvgXml], {type: 'image/svg+xml;charset=utf-8'}),\n\t        DOMURL = window.URL || window.webkitURL || window,\n\t        url = DOMURL.createObjectURL(svg);\n\t\n\t    /* create particle img obj */\n\t    var img = new Image();\n\t    img.addEventListener('load', function(){\n\t      p.img.obj = img;\n\t      p.img.loaded = true;\n\t      DOMURL.revokeObjectURL(url);\n\t      pJS.tmp.count_svg++;\n\t    });\n\t    img.src = url;\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.vendors.destroypJS = function(){\n\t    cancelAnimationFrame(pJS.fn.drawAnimFrame);\n\t    canvas_el.remove();\n\t    pJSDom = null;\n\t  };\n\t\n\t\n\t  pJS.fn.vendors.drawShape = function(c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator){\n\t\n\t    // By Programming Thomas - https://programmingthomas.wordpress.com/2013/04/03/n-sided-shapes/\n\t    var sideCount = sideCountNumerator * sideCountDenominator;\n\t    var decimalSides = sideCountNumerator / sideCountDenominator;\n\t    var interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n\t    var interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180; // convert to radians\n\t    c.save();\n\t    c.beginPath();\n\t    c.translate(startX, startY);\n\t    c.moveTo(0,0);\n\t    for (var i = 0; i < sideCount; i++) {\n\t      c.lineTo(sideLength,0);\n\t      c.translate(sideLength,0);\n\t      c.rotate(interiorAngle);\n\t    }\n\t    //c.stroke();\n\t    c.fill();\n\t    c.restore();\n\t\n\t  };\n\t\n\t  pJS.fn.vendors.exportImg = function(){\n\t    window.open(pJS.canvas.el.toDataURL('image/png'), '_blank');\n\t  };\n\t\n\t\n\t  pJS.fn.vendors.loadImg = function(type){\n\t\n\t    pJS.tmp.img_error = undefined;\n\t\n\t    if(pJS.particles.shape.image.src != ''){\n\t\n\t      if(type == 'svg'){\n\t\n\t        var xhr = new XMLHttpRequest();\n\t        xhr.open('GET', pJS.particles.shape.image.src);\n\t        xhr.onreadystatechange = function (data) {\n\t          if(xhr.readyState == 4){\n\t            if(xhr.status == 200){\n\t              pJS.tmp.source_svg = data.currentTarget.response;\n\t              pJS.fn.vendors.checkBeforeDraw();\n\t            }else{\n\t              console.log('Error pJS - Image not found');\n\t              pJS.tmp.img_error = true;\n\t            }\n\t          }\n\t        }\n\t        xhr.send();\n\t\n\t      }else{\n\t\n\t        var img = new Image();\n\t        img.addEventListener('load', function(){\n\t          pJS.tmp.img_obj = img;\n\t          pJS.fn.vendors.checkBeforeDraw();\n\t        });\n\t        img.src = pJS.particles.shape.image.src;\n\t\n\t      }\n\t\n\t    }else{\n\t      console.log('Error pJS - No image.src');\n\t      pJS.tmp.img_error = true;\n\t    }\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.vendors.draw = function(){\n\t\n\t    if(pJS.particles.shape.type == 'image'){\n\t\n\t      if(pJS.tmp.img_type == 'svg'){\n\t\n\t        if(pJS.tmp.count_svg >= pJS.particles.number.value){\n\t          pJS.fn.particlesDraw();\n\t          if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n\t          else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n\t        }else{\n\t          //console.log('still loading...');\n\t          if(!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n\t        }\n\t\n\t      }else{\n\t\n\t        if(pJS.tmp.img_obj != undefined){\n\t          pJS.fn.particlesDraw();\n\t          if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n\t          else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n\t        }else{\n\t          if(!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n\t        }\n\t\n\t      }\n\t\n\t    }else{\n\t      pJS.fn.particlesDraw();\n\t      if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n\t      else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n\t    }\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.vendors.checkBeforeDraw = function(){\n\t\n\t    // if shape is image\n\t    if(pJS.particles.shape.type == 'image'){\n\t\n\t      if(pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg == undefined){\n\t        pJS.tmp.checkAnimFrame = requestAnimFrame(check);\n\t      }else{\n\t        //console.log('images loaded! cancel check');\n\t        cancelRequestAnimFrame(pJS.tmp.checkAnimFrame);\n\t        if(!pJS.tmp.img_error){\n\t          pJS.fn.vendors.init();\n\t          pJS.fn.vendors.draw();\n\t        }\n\t        \n\t      }\n\t\n\t    }else{\n\t      pJS.fn.vendors.init();\n\t      pJS.fn.vendors.draw();\n\t    }\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.vendors.init = function(){\n\t\n\t    /* init canvas + particles */\n\t    pJS.fn.retinaInit();\n\t    pJS.fn.canvasInit();\n\t    pJS.fn.canvasSize();\n\t    pJS.fn.canvasPaint();\n\t    pJS.fn.particlesCreate();\n\t    pJS.fn.vendors.densityAutoParticles();\n\t\n\t    /* particles.line_linked - convert hex colors to rgb */\n\t    pJS.particles.line_linked.color_rgb_line = hexToRgb(pJS.particles.line_linked.color);\n\t\n\t  };\n\t\n\t\n\t  pJS.fn.vendors.start = function(){\n\t\n\t    if(isInArray('image', pJS.particles.shape.type)){\n\t      pJS.tmp.img_type = pJS.particles.shape.image.src.substr(pJS.particles.shape.image.src.length - 3);\n\t      pJS.fn.vendors.loadImg(pJS.tmp.img_type);\n\t    }else{\n\t      pJS.fn.vendors.checkBeforeDraw();\n\t    }\n\t\n\t  };\n\t\n\t\n\t\n\t\n\t  /* ---------- pJS - start ------------ */\n\t\n\t\n\t  pJS.fn.vendors.eventsListeners();\n\t\n\t  pJS.fn.vendors.start();\n\t  \n\t\n\t\n\t};\n\t\n\t/* ---------- global functions - vendors ------------ */\n\t\n\tObject.deepExtend = function(destination, source) {\n\t  for (var property in source) {\n\t    if (source[property] && source[property].constructor &&\n\t     source[property].constructor === Object) {\n\t      destination[property] = destination[property] || {};\n\t      arguments.callee(destination[property], source[property]);\n\t    } else {\n\t      destination[property] = source[property];\n\t    }\n\t  }\n\t  return destination;\n\t};\n\t\n\twindow.requestAnimFrame = (function(){\n\t  return  window.requestAnimationFrame ||\n\t    window.webkitRequestAnimationFrame ||\n\t    window.mozRequestAnimationFrame    ||\n\t    window.oRequestAnimationFrame      ||\n\t    window.msRequestAnimationFrame     ||\n\t    function(callback){\n\t      window.setTimeout(callback, 1000 / 60);\n\t    };\n\t})();\n\t\n\twindow.cancelRequestAnimFrame = ( function() {\n\t  return window.cancelAnimationFrame         ||\n\t    window.webkitCancelRequestAnimationFrame ||\n\t    window.mozCancelRequestAnimationFrame    ||\n\t    window.oCancelRequestAnimationFrame      ||\n\t    window.msCancelRequestAnimationFrame     ||\n\t    clearTimeout\n\t} )();\n\t\n\tfunction hexToRgb(hex){\n\t  // By Tim Down - http://stackoverflow.com/a/5624139/3493650\n\t  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n\t  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\t  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n\t     return r + r + g + g + b + b;\n\t  });\n\t  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\t  return result ? {\n\t      r: parseInt(result[1], 16),\n\t      g: parseInt(result[2], 16),\n\t      b: parseInt(result[3], 16)\n\t  } : null;\n\t};\n\t\n\tfunction clamp(number, min, max) {\n\t  return Math.min(Math.max(number, min), max);\n\t};\n\t\n\tfunction isInArray(value, array) {\n\t  return array.indexOf(value) > -1;\n\t}\n\t\n\t\n\t/* ---------- particles.js functions - start ------------ */\n\t\n\twindow.pJSDom = [];\n\t\n\twindow.particlesJS = function(tag_id, params){\n\t\n\t  //console.log(params);\n\t\n\t  /* no string id? so it's object params, and set the id with default id */\n\t  if(typeof(tag_id) != 'string'){\n\t    params = tag_id;\n\t    tag_id = 'particles-js';\n\t  }\n\t\n\t  /* no id? set the id to default id */\n\t  if(!tag_id){\n\t    tag_id = 'particles-js';\n\t  }\n\t\n\t  /* pJS elements */\n\t  var pJS_tag = document.getElementById(tag_id),\n\t      pJS_canvas_class = 'particles-js-canvas-el',\n\t      exist_canvas = pJS_tag.getElementsByClassName(pJS_canvas_class);\n\t\n\t  /* remove canvas if exists into the pJS target tag */\n\t  if(exist_canvas.length){\n\t    while(exist_canvas.length > 0){\n\t      pJS_tag.removeChild(exist_canvas[0]);\n\t    }\n\t  }\n\t\n\t  /* create canvas element */\n\t  var canvas_el = document.createElement('canvas');\n\t  canvas_el.className = pJS_canvas_class;\n\t\n\t  /* set size canvas */\n\t  canvas_el.style.width = \"100%\";\n\t  canvas_el.style.height = \"100%\";\n\t\n\t  /* append canvas */\n\t  var canvas = document.getElementById(tag_id).appendChild(canvas_el);\n\t\n\t  /* launch particle.js */\n\t  if(canvas != null){\n\t    pJSDom.push(new pJS(tag_id, params));\n\t  }\n\t\n\t};\n\t\n\twindow.particlesJS.load = function(tag_id, path_config_json, callback){\n\t\n\t  /* load json config */\n\t  var xhr = new XMLHttpRequest();\n\t  xhr.open('GET', path_config_json);\n\t  xhr.onreadystatechange = function (data) {\n\t    if(xhr.readyState == 4){\n\t      if(xhr.status == 200){\n\t        var params = JSON.parse(data.currentTarget.response);\n\t        window.particlesJS(tag_id, params);\n\t        if(callback) callback();\n\t      }else{\n\t        console.log('Error pJS - XMLHttpRequest status: '+xhr.status);\n\t        console.log('Error pJS - File config not found');\n\t      }\n\t    }\n\t  };\n\t  xhr.send();\n\t\n\t};\n\n/***/ },\n\n/***/ 55:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 65:\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 66:\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n\n/***/ 67:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = ({\"NODE_ENV\":\"production\"}).NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(66);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(65);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(55)))\n\n/***/ },\n\n/***/ 108:\n/***/ function(module, exports) {\n\n\t/*!\n\t * vue-resource v1.0.3\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tfunction Promise$1(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$1.reject = function (r) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$1.resolve = function (x) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$1.all = function all(iterable) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$1.race = function race(iterable) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$1.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$1.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$1(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\t/**\n\t * Promise adapter.\n\t */\n\t\n\tif (typeof Promise === 'undefined') {\n\t    window.Promise = Promise$1;\n\t}\n\t\n\tfunction PromiseObj(executor, context) {\n\t\n\t    if (executor instanceof Promise) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new Promise(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromiseObj.all = function (iterable, context) {\n\t    return new PromiseObj(Promise.all(iterable), context);\n\t};\n\t\n\tPromiseObj.resolve = function (value, context) {\n\t    return new PromiseObj(Promise.resolve(value), context);\n\t};\n\t\n\tPromiseObj.reject = function (reason, context) {\n\t    return new PromiseObj(Promise.reject(reason), context);\n\t};\n\t\n\tPromiseObj.race = function (iterable, context) {\n\t    return new PromiseObj(Promise.race(iterable), context);\n\t};\n\t\n\tvar p = PromiseObj.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new PromiseObj(this.promise.catch(rejected), this.context);\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return Promise.reject(reason);\n\t    });\n\t};\n\t\n\t/**\n\t * Utility functions.\n\t */\n\t\n\tvar debug = false;var util = {};var slice = [].slice;\n\t\n\t\n\tfunction Util (Vue) {\n\t    util = Vue.util;\n\t    debug = Vue.config.debug || !Vue.config.silent;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (typeof console !== 'undefined' && debug) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (typeof console !== 'undefined') {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\tfunction toLower(str) {\n\t    return str ? str.toLowerCase() : '';\n\t}\n\t\n\tfunction toUpper(str) {\n\t    return str ? str.toUpperCase() : '';\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\tfunction isBoolean(val) {\n\t    return val === true || val === false;\n\t}\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction isBlob(obj) {\n\t    return typeof Blob !== 'undefined' && obj instanceof Blob;\n\t}\n\t\n\tfunction isFormData(obj) {\n\t    return typeof FormData !== 'undefined' && obj instanceof FormData;\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = PromiseObj.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (obj && typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tvar assign = Object.assign || _assign;\n\t\n\tfunction merge(target) {\n\t\n\t    var args = slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction defaults(target) {\n\t\n\t    var args = slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t\n\t        for (var key in source) {\n\t            if (target[key] === undefined) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _assign(target) {\n\t\n\t    var args = slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * Root Prefix Transform.\n\t */\n\t\n\tfunction root (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Query Parameter Transform.\n\t */\n\t\n\tfunction query (options, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params),\n\t        query = {},\n\t        url = next(options);\n\t\n\t    each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url),\n\t        expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null,\n\t                        values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key],\n\t        result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\t/**\n\t * URL Template (RFC 6570) Transform.\n\t */\n\t\n\tfunction template (options) {\n\t\n\t    var variables = [],\n\t        url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {},\n\t        options = url,\n\t        transform;\n\t\n\t    if (isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\t\n\t    options = merge({}, Url.options, self.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj),\n\t        plain = isPlainObject(obj),\n\t        hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\t/**\n\t * XDomain client (Internet Explorer).\n\t */\n\t\n\tfunction xdrClient (request) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(),\n\t            handler = function (_ref) {\n\t            var type = _ref.type;\n\t\n\t\n\t            var status = 0;\n\t\n\t            if (type === 'load') {\n\t                status = 200;\n\t            } else if (type === 'error') {\n\t                status = 500;\n\t            }\n\t\n\t            resolve(request.respondWith(xdr.responseText, { status: status }));\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, request.getUrl());\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = handler;\n\t        xdr.onprogress = function () {};\n\t        xdr.send(request.getBody());\n\t    });\n\t}\n\t\n\t/**\n\t * CORS Interceptor.\n\t */\n\t\n\tvar ORIGIN_URL = Url.parse(location.href);\n\tvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\t\n\tfunction cors (request, next) {\n\t\n\t    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n\t        request.crossOrigin = true;\n\t    }\n\t\n\t    if (request.crossOrigin) {\n\t\n\t        if (!SUPPORTS_CORS) {\n\t            request.client = xdrClient;\n\t        }\n\t\n\t        delete request.emulateHTTP;\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = Url.parse(Url(request));\n\t\n\t    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n\t}\n\t\n\t/**\n\t * Body Interceptor.\n\t */\n\t\n\tfunction body (request, next) {\n\t\n\t    if (isFormData(request.body)) {\n\t\n\t        request.headers.delete('Content-Type');\n\t    } else if (isObject(request.body) || isArray(request.body)) {\n\t\n\t        if (request.emulateJSON) {\n\t            request.body = Url.params(request.body);\n\t            request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n\t        } else {\n\t            request.body = JSON.stringify(request.body);\n\t        }\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        Object.defineProperty(response, 'data', {\n\t            get: function () {\n\t                return this.body;\n\t            },\n\t            set: function (body) {\n\t                this.body = body;\n\t            }\n\t        });\n\t\n\t        return response.bodyText ? when(response.text(), function (text) {\n\t\n\t            var type = response.headers.get('Content-Type');\n\t\n\t            if (isString(type) && type.indexOf('application/json') === 0) {\n\t\n\t                try {\n\t                    response.body = JSON.parse(text);\n\t                } catch (e) {\n\t                    response.body = null;\n\t                }\n\t            } else {\n\t                response.body = text;\n\t            }\n\t\n\t            return response;\n\t        }) : response;\n\t    });\n\t}\n\t\n\t/**\n\t * JSONP client.\n\t */\n\t\n\tfunction jsonpClient (request) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var name = request.jsonp || 'callback',\n\t            callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            body = null,\n\t            handler,\n\t            script;\n\t\n\t        handler = function (_ref) {\n\t            var type = _ref.type;\n\t\n\t\n\t            var status = 0;\n\t\n\t            if (type === 'load' && body !== null) {\n\t                status = 200;\n\t            } else if (type === 'error') {\n\t                status = 500;\n\t            }\n\t\n\t            resolve(request.respondWith(body, { status: status }));\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        request.params[name] = callback;\n\t\n\t        window[callback] = function (result) {\n\t            body = JSON.stringify(result);\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = request.getUrl();\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t}\n\t\n\t/**\n\t * JSONP Interceptor.\n\t */\n\t\n\tfunction jsonp (request, next) {\n\t\n\t    if (request.method == 'JSONP') {\n\t        request.client = jsonpClient;\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        if (request.method == 'JSONP') {\n\t\n\t            return when(response.json(), function (json) {\n\t\n\t                response.body = json;\n\t\n\t                return response;\n\t            });\n\t        }\n\t    });\n\t}\n\t\n\t/**\n\t * Before Interceptor.\n\t */\n\t\n\tfunction before (request, next) {\n\t\n\t    if (isFunction(request.before)) {\n\t        request.before.call(this, request);\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tfunction method (request, next) {\n\t\n\t    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t        request.headers.set('X-HTTP-Method-Override', request.method);\n\t        request.method = 'POST';\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * Header Interceptor.\n\t */\n\t\n\tfunction header (request, next) {\n\t\n\t    var headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[toLower(request.method)]);\n\t\n\t    each(headers, function (value, name) {\n\t        if (!request.headers.has(name)) {\n\t            request.headers.set(name, value);\n\t        }\n\t    });\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tfunction timeout (request, next) {\n\t\n\t    var timeout;\n\t\n\t    if (request.timeout) {\n\t        timeout = setTimeout(function () {\n\t            request.abort();\n\t        }, request.timeout);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        clearTimeout(timeout);\n\t    });\n\t}\n\t\n\t/**\n\t * XMLHttp client.\n\t */\n\t\n\tfunction xhrClient (request) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n\t                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n\t                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n\t            });\n\t\n\t            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n\t                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xhr.abort();\n\t        };\n\t\n\t        if (request.progress) {\n\t            if (request.method === 'GET') {\n\t                xhr.addEventListener('progress', request.progress);\n\t            } else if (/^(POST|PUT)$/i.test(request.method)) {\n\t                xhr.upload.addEventListener('progress', request.progress);\n\t            }\n\t        }\n\t\n\t        xhr.open(request.method, request.getUrl(), true);\n\t\n\t        if ('responseType' in xhr) {\n\t            xhr.responseType = 'blob';\n\t        }\n\t\n\t        if (request.credentials === true) {\n\t            xhr.withCredentials = true;\n\t        }\n\t\n\t        request.headers.forEach(function (value, name) {\n\t            xhr.setRequestHeader(name, value);\n\t        });\n\t\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onerror = handler;\n\t        xhr.send(request.getBody());\n\t    });\n\t}\n\t\n\t/**\n\t * Base client.\n\t */\n\t\n\tfunction Client (context) {\n\t\n\t    var reqHandlers = [sendRequest],\n\t        resHandlers = [],\n\t        handler;\n\t\n\t    if (!isObject(context)) {\n\t        context = null;\n\t    }\n\t\n\t    function Client(request) {\n\t        return new PromiseObj(function (resolve) {\n\t\n\t            function exec() {\n\t\n\t                handler = reqHandlers.pop();\n\t\n\t                if (isFunction(handler)) {\n\t                    handler.call(context, request, next);\n\t                } else {\n\t                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n\t                    next();\n\t                }\n\t            }\n\t\n\t            function next(response) {\n\t\n\t                if (isFunction(response)) {\n\t\n\t                    resHandlers.unshift(response);\n\t                } else if (isObject(response)) {\n\t\n\t                    resHandlers.forEach(function (handler) {\n\t                        response = when(response, function (response) {\n\t                            return handler.call(context, response) || response;\n\t                        });\n\t                    });\n\t\n\t                    when(response, resolve);\n\t\n\t                    return;\n\t                }\n\t\n\t                exec();\n\t            }\n\t\n\t            exec();\n\t        }, context);\n\t    }\n\t\n\t    Client.use = function (handler) {\n\t        reqHandlers.push(handler);\n\t    };\n\t\n\t    return Client;\n\t}\n\t\n\tfunction sendRequest(request, resolve) {\n\t\n\t    var client = request.client || xhrClient;\n\t\n\t    resolve(client(request));\n\t}\n\t\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\t/**\n\t * HTTP Headers.\n\t */\n\t\n\tvar Headers = function () {\n\t    function Headers(headers) {\n\t        var _this = this;\n\t\n\t        classCallCheck(this, Headers);\n\t\n\t\n\t        this.map = {};\n\t\n\t        each(headers, function (value, name) {\n\t            return _this.append(name, value);\n\t        });\n\t    }\n\t\n\t    Headers.prototype.has = function has(name) {\n\t        return getName(this.map, name) !== null;\n\t    };\n\t\n\t    Headers.prototype.get = function get(name) {\n\t\n\t        var list = this.map[getName(this.map, name)];\n\t\n\t        return list ? list[0] : null;\n\t    };\n\t\n\t    Headers.prototype.getAll = function getAll(name) {\n\t        return this.map[getName(this.map, name)] || [];\n\t    };\n\t\n\t    Headers.prototype.set = function set(name, value) {\n\t        this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n\t    };\n\t\n\t    Headers.prototype.append = function append(name, value) {\n\t\n\t        var list = this.getAll(name);\n\t\n\t        if (list.length) {\n\t            list.push(trim(value));\n\t        } else {\n\t            this.set(name, value);\n\t        }\n\t    };\n\t\n\t    Headers.prototype.delete = function _delete(name) {\n\t        delete this.map[getName(this.map, name)];\n\t    };\n\t\n\t    Headers.prototype.forEach = function forEach(callback, thisArg) {\n\t        var _this2 = this;\n\t\n\t        each(this.map, function (list, name) {\n\t            each(list, function (value) {\n\t                return callback.call(thisArg, value, name, _this2);\n\t            });\n\t        });\n\t    };\n\t\n\t    return Headers;\n\t}();\n\t\n\tfunction getName(map, name) {\n\t    return Object.keys(map).reduce(function (prev, curr) {\n\t        return toLower(name) === toLower(curr) ? curr : prev;\n\t    }, null);\n\t}\n\t\n\tfunction normalizeName(name) {\n\t\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t        throw new TypeError('Invalid character in header field name');\n\t    }\n\t\n\t    return trim(name);\n\t}\n\t\n\t/**\n\t * HTTP Response.\n\t */\n\t\n\tvar Response = function () {\n\t    function Response(body, _ref) {\n\t        var url = _ref.url;\n\t        var headers = _ref.headers;\n\t        var status = _ref.status;\n\t        var statusText = _ref.statusText;\n\t        classCallCheck(this, Response);\n\t\n\t\n\t        this.url = url;\n\t        this.ok = status >= 200 && status < 300;\n\t        this.status = status || 0;\n\t        this.statusText = statusText || '';\n\t        this.headers = new Headers(headers);\n\t        this.body = body;\n\t\n\t        if (isString(body)) {\n\t\n\t            this.bodyText = body;\n\t        } else if (isBlob(body)) {\n\t\n\t            this.bodyBlob = body;\n\t\n\t            if (isBlobText(body)) {\n\t                this.bodyText = blobText(body);\n\t            }\n\t        }\n\t    }\n\t\n\t    Response.prototype.blob = function blob() {\n\t        return when(this.bodyBlob);\n\t    };\n\t\n\t    Response.prototype.text = function text() {\n\t        return when(this.bodyText);\n\t    };\n\t\n\t    Response.prototype.json = function json() {\n\t        return when(this.text(), function (text) {\n\t            return JSON.parse(text);\n\t        });\n\t    };\n\t\n\t    return Response;\n\t}();\n\t\n\tfunction blobText(body) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var reader = new FileReader();\n\t\n\t        reader.readAsText(body);\n\t        reader.onload = function () {\n\t            resolve(reader.result);\n\t        };\n\t    });\n\t}\n\t\n\tfunction isBlobText(body) {\n\t    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n\t}\n\t\n\t/**\n\t * HTTP Request.\n\t */\n\t\n\tvar Request = function () {\n\t    function Request(options) {\n\t        classCallCheck(this, Request);\n\t\n\t\n\t        this.body = null;\n\t        this.params = {};\n\t\n\t        assign(this, options, {\n\t            method: toUpper(options.method || 'GET')\n\t        });\n\t\n\t        if (!(this.headers instanceof Headers)) {\n\t            this.headers = new Headers(this.headers);\n\t        }\n\t    }\n\t\n\t    Request.prototype.getUrl = function getUrl() {\n\t        return Url(this);\n\t    };\n\t\n\t    Request.prototype.getBody = function getBody() {\n\t        return this.body;\n\t    };\n\t\n\t    Request.prototype.respondWith = function respondWith(body, options) {\n\t        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n\t    };\n\t\n\t    return Request;\n\t}();\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\n\tvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\n\tvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\t\n\tfunction Http(options) {\n\t\n\t    var self = this || {},\n\t        client = Client(self.$vm);\n\t\n\t    defaults(options || {}, self.$options, Http.options);\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client.use(handler);\n\t    });\n\t\n\t    return client(new Request(options)).then(function (response) {\n\t\n\t        return response.ok ? response : PromiseObj.reject(response);\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return PromiseObj.reject(response);\n\t    });\n\t}\n\t\n\tHttp.options = {};\n\t\n\tHttp.headers = {\n\t    put: JSON_CONTENT_TYPE,\n\t    post: JSON_CONTENT_TYPE,\n\t    patch: JSON_CONTENT_TYPE,\n\t    delete: JSON_CONTENT_TYPE,\n\t    custom: CUSTOM_HEADERS,\n\t    common: COMMON_HEADERS\n\t};\n\t\n\tHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\t\n\t['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, options) {\n\t        return this(assign(options || {}, { url: url, method: method }));\n\t    };\n\t});\n\t\n\t['post', 'put', 'patch'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, body, options) {\n\t        return this(assign(options || {}, { url: url, method: method, body: body }));\n\t    };\n\t});\n\t\n\t/**\n\t * Service for interacting with RESTful services.\n\t */\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this || {},\n\t        resource = {};\n\t\n\t    actions = assign({}, Resource.actions, actions);\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({ url: url, params: assign({}, params) }, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = assign({}, action),\n\t        params = {},\n\t        body;\n\t\n\t    switch (args.length) {\n\t\n\t        case 2:\n\t\n\t            params = args[0];\n\t            body = args[1];\n\t\n\t            break;\n\t\n\t        case 1:\n\t\n\t            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                body = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.body = body;\n\t    options.params = assign({}, options.params, params);\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\t\n\t};\n\t\n\t/**\n\t * Install plugin.\n\t */\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = PromiseObj;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                var _this = this;\n\t\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n/***/ },\n\n/***/ 109:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n\n/***/ 110:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vue.js v1.0.28\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delimited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([^-])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/* istanbul ignore next */\n\tfunction isNative(Ctor) {\n\t  return (/native code/.test(Ctor.toString())\n\t  );\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc = undefined;\n\t\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks.length = 0;\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  // the nextTick behavior leverages the microtask queue, which can be accessed\n\t  // via either native Promise.then or MutationObserver.\n\t  // MutationObserver has wider support, however it is seriously bugged in\n\t  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n\t  // completely stops working after triggering a few times... so, if native\n\t  // Promise is available, we will use it:\n\t  /* istanbul ignore if */\n\t  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n\t    var p = Promise.resolve();\n\t    var noop = function noop() {};\n\t    timerFunc = function () {\n\t      p.then(nextTickHandler);\n\t      // in problematic UIWebViews, Promise.then doesn't completely break, but\n\t      // it can get stuck in a weird state where callbacks are pushed into the\n\t      // microtask queue but the queue isn't being flushed, until the browser\n\t      // needs to do some other work, e.g. handle a timer. Therefore we can\n\t      // \"force\" the microtask queue to be flushed by adding an empty timer.\n\t      if (isIOS) setTimeout(noop);\n\t    };\n\t  } else if (typeof MutationObserver !== 'undefined') {\n\t    // use MutationObserver where native Promise is not available,\n\t    // e.g. IE11, iOS7, Android 4.4\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(String(counter));\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = String(counter);\n\t    };\n\t  } else {\n\t    // fallback to setTimeout\n\t    /* istanbul ignore next */\n\t    timerFunc = setTimeout;\n\t  }\n\t\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && isNative(Set)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar len;\n\tvar index;\n\tvar chr;\n\tvar state;\n\tvar startState = 0;\n\tvar filterState = 1;\n\tvar filterNameState = 2;\n\tvar filterArgState = 3;\n\t\n\tvar doubleChr = 0x22;\n\tvar singleChr = 0x27;\n\tvar pipeChr = 0x7C;\n\tvar escapeChr = 0x5C;\n\tvar spaceChr = 0x20;\n\t\n\tvar expStartChr = { 0x5B: 1, 0x7B: 1, 0x28: 1 };\n\tvar expChrPair = { 0x5B: 0x5D, 0x7B: 0x7D, 0x28: 0x29 };\n\t\n\tfunction peek() {\n\t  return str.charCodeAt(index + 1);\n\t}\n\t\n\tfunction next() {\n\t  return str.charCodeAt(++index);\n\t}\n\t\n\tfunction eof() {\n\t  return index >= len;\n\t}\n\t\n\tfunction eatSpace() {\n\t  while (peek() === spaceChr) {\n\t    next();\n\t  }\n\t}\n\t\n\tfunction isStringStart(chr) {\n\t  return chr === doubleChr || chr === singleChr;\n\t}\n\t\n\tfunction isExpStart(chr) {\n\t  return expStartChr[chr];\n\t}\n\t\n\tfunction isExpEnd(start, chr) {\n\t  return expChrPair[start] === chr;\n\t}\n\t\n\tfunction parseString() {\n\t  var stringQuote = next();\n\t  var chr;\n\t  while (!eof()) {\n\t    chr = next();\n\t    // escape char\n\t    if (chr === escapeChr) {\n\t      next();\n\t    } else if (chr === stringQuote) {\n\t      break;\n\t    }\n\t  }\n\t}\n\t\n\tfunction parseSpecialExp(chr) {\n\t  var inExp = 0;\n\t  var startChr = chr;\n\t\n\t  while (!eof()) {\n\t    chr = peek();\n\t    if (isStringStart(chr)) {\n\t      parseString();\n\t      continue;\n\t    }\n\t\n\t    if (startChr === chr) {\n\t      inExp++;\n\t    }\n\t    if (isExpEnd(startChr, chr)) {\n\t      inExp--;\n\t    }\n\t\n\t    next();\n\t\n\t    if (inExp === 0) {\n\t      break;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * syntax:\n\t * expression | filterName  [arg  arg [| filterName arg arg]]\n\t */\n\t\n\tfunction parseExpression() {\n\t  var start = index;\n\t  while (!eof()) {\n\t    chr = peek();\n\t    if (isStringStart(chr)) {\n\t      parseString();\n\t    } else if (isExpStart(chr)) {\n\t      parseSpecialExp(chr);\n\t    } else if (chr === pipeChr) {\n\t      next();\n\t      chr = peek();\n\t      if (chr === pipeChr) {\n\t        next();\n\t      } else {\n\t        if (state === startState || state === filterArgState) {\n\t          state = filterState;\n\t        }\n\t        break;\n\t      }\n\t    } else if (chr === spaceChr && (state === filterNameState || state === filterArgState)) {\n\t      eatSpace();\n\t      break;\n\t    } else {\n\t      if (state === filterState) {\n\t        state = filterNameState;\n\t      }\n\t      next();\n\t    }\n\t  }\n\t\n\t  return str.slice(start + 1, index) || null;\n\t}\n\t\n\tfunction parseFilterList() {\n\t  var filters = [];\n\t  while (!eof()) {\n\t    filters.push(parseFilter());\n\t  }\n\t  return filters;\n\t}\n\t\n\tfunction parseFilter() {\n\t  var filter = {};\n\t  var args;\n\t\n\t  state = filterState;\n\t  filter.name = parseExpression().trim();\n\t\n\t  state = filterArgState;\n\t  args = parseFilterArguments();\n\t\n\t  if (args.length) {\n\t    filter.args = args;\n\t  }\n\t  return filter;\n\t}\n\t\n\tfunction parseFilterArguments() {\n\t  var args = [];\n\t  while (!eof() && state !== filterState) {\n\t    var arg = parseExpression();\n\t    if (!arg) {\n\t      break;\n\t    }\n\t    args.push(processFilterArg(arg));\n\t  }\n\t\n\t  return args;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  dir = {};\n\t  len = str.length;\n\t  index = -1;\n\t  chr = '';\n\t  state = startState;\n\t\n\t  var filters;\n\t\n\t  if (str.indexOf('|') < 0) {\n\t    dir.expression = str.trim();\n\t  } else {\n\t    dir.expression = parseExpression().trim();\n\t    filters = parseFilterList();\n\t    if (filters.length) {\n\t      dir.filters = filters;\n\t    }\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIOS: isIOS,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to register itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression$1(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression$1(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\\"']|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression$1(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression$1,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression$1(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    if (false) {\n\t      warn('<' + this.el.tagName.toLowerCase() + ' v-for=\"' + this.expression + '\" v-if=\"' + this.el.getAttribute('v-if') + '\">: ' + 'Using v-if and v-for on the same element is not recommended - ' + 'consider filtering the source Array instead.', this.vm);\n\t    }\n\t\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new instance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.get();\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        var i = indexOf(model, val);\n\t        if (el.checked) {\n\t          if (i < 0) {\n\t            self.set(model.concat(val));\n\t          }\n\t        } else if (i > -1) {\n\t          self.set(model.slice(0, i).concat(model.slice(i + 1)));\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// logic control\n\t// two-way binding\n\t// event handling\n\t// attributes\n\t// ref & el\n\t// cloak\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var propsData = vm.$options.propsData;\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (propsData && (value = propsData[name] || propsData[path]) !== null) {\n\t      // has propsData\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required && (!propsData || !(name in propsData) && !(path in propsData))) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  sortDirectives(dirs);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * sort directives by priority (stable sort)\n\t *\n\t * @param {Array} dirs\n\t */\n\tfunction sortDirectives(dirs) {\n\t  if (dirs.length === 0) return;\n\t\n\t  var groupedMap = {};\n\t  var i, j, k, l;\n\t  var index = 0;\n\t  var priorities = [];\n\t  for (i = 0, j = dirs.length; i < j; i++) {\n\t    var dir = dirs[i];\n\t    var priority = dir.descriptor.def.priority || DEFAULT_PRIORITY;\n\t    var array = groupedMap[priority];\n\t    if (!array) {\n\t      array = groupedMap[priority] = [];\n\t      priorities.push(priority);\n\t    }\n\t    array.push(dir);\n\t  }\n\t\n\t  priorities.sort(function (a, b) {\n\t    return a > b ? -1 : a === b ? 0 : 1;\n\t  });\n\t  for (i = 0, j = priorities.length; i < j; i++) {\n\t    var group = groupedMap[priorities[i]];\n\t    for (k = 0, l = group.length; k < l; k++) {\n\t      dirs[index++] = group[k];\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t\n\t      var componentName = options.el.tagName.toLowerCase();\n\t      if (componentName === 'component' && options.name) {\n\t        componentName += ':' + options.name;\n\t      }\n\t\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + componentName + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    // a textarea which has v-pre attr should skip complie.\n\t    if (getAttr(el, 'v-pre') !== null) {\n\t      return skip;\n\t    }\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for, v-if and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    if (!replacer) {\n\t      return frag;\n\t    }\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression$1(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression$1(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression$1(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Order filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.28';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\n/***/ },\n\n/***/ 111:\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n\n/***/ 112:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.60f6fbade344f426e51d.js","/*! iScroll v5.2.0 ~ (c) 2008-2016 Matteo Spinelli ~ http://cubiq.org/license */\n(function (window, document, Math) {\nvar rAF = window.requestAnimationFrame\t||\n\twindow.webkitRequestAnimationFrame\t||\n\twindow.mozRequestAnimationFrame\t\t||\n\twindow.oRequestAnimationFrame\t\t||\n\twindow.msRequestAnimationFrame\t\t||\n\tfunction (callback) { window.setTimeout(callback, 1000 / 60); };\n\nvar utils = (function () {\n\tvar me = {};\n\n\tvar _elementStyle = document.createElement('div').style;\n\tvar _vendor = (function () {\n\t\tvar vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\n\t\t\ttransform,\n\t\t\ti = 0,\n\t\t\tl = vendors.length;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\ttransform = vendors[i] + 'ransform';\n\t\t\tif ( transform in _elementStyle ) return vendors[i].substr(0, vendors[i].length-1);\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tfunction _prefixStyle (style) {\n\t\tif ( _vendor === false ) return false;\n\t\tif ( _vendor === '' ) return style;\n\t\treturn _vendor + style.charAt(0).toUpperCase() + style.substr(1);\n\t}\n\n\tme.getTime = Date.now || function getTime () { return new Date().getTime(); };\n\n\tme.extend = function (target, obj) {\n\t\tfor ( var i in obj ) {\n\t\t\ttarget[i] = obj[i];\n\t\t}\n\t};\n\n\tme.addEvent = function (el, type, fn, capture) {\n\t\tel.addEventListener(type, fn, !!capture);\n\t};\n\n\tme.removeEvent = function (el, type, fn, capture) {\n\t\tel.removeEventListener(type, fn, !!capture);\n\t};\n\n\tme.prefixPointerEvent = function (pointerEvent) {\n\t\treturn window.MSPointerEvent ?\n\t\t\t'MSPointer' + pointerEvent.charAt(7).toUpperCase() + pointerEvent.substr(8):\n\t\t\tpointerEvent;\n\t};\n\n\tme.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {\n\t\tvar distance = current - start,\n\t\t\tspeed = Math.abs(distance) / time,\n\t\t\tdestination,\n\t\t\tduration;\n\n\t\tdeceleration = deceleration === undefined ? 0.0006 : deceleration;\n\n\t\tdestination = current + ( speed * speed ) / ( 2 * deceleration ) * ( distance < 0 ? -1 : 1 );\n\t\tduration = speed / deceleration;\n\n\t\tif ( destination < lowerMargin ) {\n\t\t\tdestination = wrapperSize ? lowerMargin - ( wrapperSize / 2.5 * ( speed / 8 ) ) : lowerMargin;\n\t\t\tdistance = Math.abs(destination - current);\n\t\t\tduration = distance / speed;\n\t\t} else if ( destination > 0 ) {\n\t\t\tdestination = wrapperSize ? wrapperSize / 2.5 * ( speed / 8 ) : 0;\n\t\t\tdistance = Math.abs(current) + destination;\n\t\t\tduration = distance / speed;\n\t\t}\n\n\t\treturn {\n\t\t\tdestination: Math.round(destination),\n\t\t\tduration: duration\n\t\t};\n\t};\n\n\tvar _transform = _prefixStyle('transform');\n\n\tme.extend(me, {\n\t\thasTransform: _transform !== false,\n\t\thasPerspective: _prefixStyle('perspective') in _elementStyle,\n\t\thasTouch: 'ontouchstart' in window,\n\t\thasPointer: !!(window.PointerEvent || window.MSPointerEvent), // IE10 is prefixed\n\t\thasTransition: _prefixStyle('transition') in _elementStyle\n\t});\n\n\t/*\n\tThis should find all Android browsers lower than build 535.19 (both stock browser and webview)\n\t- galaxy S2 is ok\n    - 2.3.6 : `AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1`\n    - 4.0.4 : `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\n   - galaxy S3 is badAndroid (stock brower, webview)\n     `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\n   - galaxy S4 is badAndroid (stock brower, webview)\n     `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\n   - galaxy S5 is OK\n     `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`\n   - galaxy S6 is OK\n     `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`\n  */\n\tme.isBadAndroid = (function() {\n\t\tvar appVersion = window.navigator.appVersion;\n\t\t// Android browser is not a chrome browser.\n\t\tif (/Android/.test(appVersion) && !(/Chrome\\/\\d/.test(appVersion))) {\n\t\t\tvar safariVersion = appVersion.match(/Safari\\/(\\d+.\\d)/);\n\t\t\tif(safariVersion && typeof safariVersion === \"object\" && safariVersion.length >= 2) {\n\t\t\t\treturn parseFloat(safariVersion[1]) < 535.19;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t})();\n\n\tme.extend(me.style = {}, {\n\t\ttransform: _transform,\n\t\ttransitionTimingFunction: _prefixStyle('transitionTimingFunction'),\n\t\ttransitionDuration: _prefixStyle('transitionDuration'),\n\t\ttransitionDelay: _prefixStyle('transitionDelay'),\n\t\ttransformOrigin: _prefixStyle('transformOrigin')\n\t});\n\n\tme.hasClass = function (e, c) {\n\t\tvar re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\");\n\t\treturn re.test(e.className);\n\t};\n\n\tme.addClass = function (e, c) {\n\t\tif ( me.hasClass(e, c) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar newclass = e.className.split(' ');\n\t\tnewclass.push(c);\n\t\te.className = newclass.join(' ');\n\t};\n\n\tme.removeClass = function (e, c) {\n\t\tif ( !me.hasClass(e, c) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\", 'g');\n\t\te.className = e.className.replace(re, ' ');\n\t};\n\n\tme.offset = function (el) {\n\t\tvar left = -el.offsetLeft,\n\t\t\ttop = -el.offsetTop;\n\n\t\t// jshint -W084\n\t\twhile (el = el.offsetParent) {\n\t\t\tleft -= el.offsetLeft;\n\t\t\ttop -= el.offsetTop;\n\t\t}\n\t\t// jshint +W084\n\n\t\treturn {\n\t\t\tleft: left,\n\t\t\ttop: top\n\t\t};\n\t};\n\n\tme.preventDefaultException = function (el, exceptions) {\n\t\tfor ( var i in exceptions ) {\n\t\t\tif ( exceptions[i].test(el[i]) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tme.extend(me.eventType = {}, {\n\t\ttouchstart: 1,\n\t\ttouchmove: 1,\n\t\ttouchend: 1,\n\n\t\tmousedown: 2,\n\t\tmousemove: 2,\n\t\tmouseup: 2,\n\n\t\tpointerdown: 3,\n\t\tpointermove: 3,\n\t\tpointerup: 3,\n\n\t\tMSPointerDown: 3,\n\t\tMSPointerMove: 3,\n\t\tMSPointerUp: 3\n\t});\n\n\tme.extend(me.ease = {}, {\n\t\tquadratic: {\n\t\t\tstyle: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n\t\t\tfn: function (k) {\n\t\t\t\treturn k * ( 2 - k );\n\t\t\t}\n\t\t},\n\t\tcircular: {\n\t\t\tstyle: 'cubic-bezier(0.1, 0.57, 0.1, 1)',\t// Not properly \"circular\" but this looks better, it should be (0.075, 0.82, 0.165, 1)\n\t\t\tfn: function (k) {\n\t\t\t\treturn Math.sqrt( 1 - ( --k * k ) );\n\t\t\t}\n\t\t},\n\t\tback: {\n\t\t\tstyle: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n\t\t\tfn: function (k) {\n\t\t\t\tvar b = 4;\n\t\t\t\treturn ( k = k - 1 ) * k * ( ( b + 1 ) * k + b ) + 1;\n\t\t\t}\n\t\t},\n\t\tbounce: {\n\t\t\tstyle: '',\n\t\t\tfn: function (k) {\n\t\t\t\tif ( ( k /= 1 ) < ( 1 / 2.75 ) ) {\n\t\t\t\t\treturn 7.5625 * k * k;\n\t\t\t\t} else if ( k < ( 2 / 2.75 ) ) {\n\t\t\t\t\treturn 7.5625 * ( k -= ( 1.5 / 2.75 ) ) * k + 0.75;\n\t\t\t\t} else if ( k < ( 2.5 / 2.75 ) ) {\n\t\t\t\t\treturn 7.5625 * ( k -= ( 2.25 / 2.75 ) ) * k + 0.9375;\n\t\t\t\t} else {\n\t\t\t\t\treturn 7.5625 * ( k -= ( 2.625 / 2.75 ) ) * k + 0.984375;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\telastic: {\n\t\t\tstyle: '',\n\t\t\tfn: function (k) {\n\t\t\t\tvar f = 0.22,\n\t\t\t\t\te = 0.4;\n\n\t\t\t\tif ( k === 0 ) { return 0; }\n\t\t\t\tif ( k == 1 ) { return 1; }\n\n\t\t\t\treturn ( e * Math.pow( 2, - 10 * k ) * Math.sin( ( k - f / 4 ) * ( 2 * Math.PI ) / f ) + 1 );\n\t\t\t}\n\t\t}\n\t});\n\n\tme.tap = function (e, eventName) {\n\t\tvar ev = document.createEvent('Event');\n\t\tev.initEvent(eventName, true, true);\n\t\tev.pageX = e.pageX;\n\t\tev.pageY = e.pageY;\n\t\te.target.dispatchEvent(ev);\n\t};\n\n\tme.click = function (e) {\n\t\tvar target = e.target,\n\t\t\tev;\n\n\t\tif ( !(/(SELECT|INPUT|TEXTAREA)/i).test(target.tagName) ) {\n\t\t\tev = document.createEvent('MouseEvents');\n\t\t\tev.initMouseEvent('click', true, true, e.view, 1,\n\t\t\t\ttarget.screenX, target.screenY, target.clientX, target.clientY,\n\t\t\t\te.ctrlKey, e.altKey, e.shiftKey, e.metaKey,\n\t\t\t\t0, null);\n\n\t\t\tev._constructed = true;\n\t\t\ttarget.dispatchEvent(ev);\n\t\t}\n\t};\n\n\treturn me;\n})();\nfunction IScroll (el, options) {\n\tthis.wrapper = typeof el == 'string' ? document.querySelector(el) : el;\n\tthis.scroller = this.wrapper.children[0];\n\tthis.scrollerStyle = this.scroller.style;\t\t// cache style for better performance\n\n\tthis.options = {\n\n\t\tresizeScrollbars: true,\n\n\t\tmouseWheelSpeed: 20,\n\n\t\tsnapThreshold: 0.334,\n\n// INSERT POINT: OPTIONS\n\t\tdisablePointer : !utils.hasPointer,\n\t\tdisableTouch : utils.hasPointer || !utils.hasTouch,\n\t\tdisableMouse : utils.hasPointer || utils.hasTouch,\n\t\tstartX: 0,\n\t\tstartY: 0,\n\t\tscrollY: true,\n\t\tdirectionLockThreshold: 5,\n\t\tmomentum: true,\n\n\t\tbounce: true,\n\t\tbounceTime: 600,\n\t\tbounceEasing: '',\n\n\t\tpreventDefault: true,\n\t\tpreventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },\n\n\t\tHWCompositing: true,\n\t\tuseTransition: true,\n\t\tuseTransform: true,\n\t\tbindToWrapper: typeof window.onmousedown === \"undefined\"\n\t};\n\n\tfor ( var i in options ) {\n\t\tthis.options[i] = options[i];\n\t}\n\n\t// Normalize options\n\tthis.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';\n\n\tthis.options.useTransition = utils.hasTransition && this.options.useTransition;\n\tthis.options.useTransform = utils.hasTransform && this.options.useTransform;\n\n\tthis.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;\n\tthis.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;\n\n\t// If you want eventPassthrough I have to lock one of the axes\n\tthis.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;\n\tthis.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;\n\n\t// With eventPassthrough we also need lockDirection mechanism\n\tthis.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;\n\tthis.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;\n\n\tthis.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;\n\n\tthis.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;\n\n\tif ( this.options.tap === true ) {\n\t\tthis.options.tap = 'tap';\n\t}\n\n\tif ( this.options.shrinkScrollbars == 'scale' ) {\n\t\tthis.options.useTransition = false;\n\t}\n\n\tthis.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;\n\n// INSERT POINT: NORMALIZATION\n\n\t// Some defaults\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.directionX = 0;\n\tthis.directionY = 0;\n\tthis._events = {};\n\n// INSERT POINT: DEFAULTS\n\n\tthis._init();\n\tthis.refresh();\n\n\tthis.scrollTo(this.options.startX, this.options.startY);\n\tthis.enable();\n}\n\nIScroll.prototype = {\n\tversion: '5.2.0',\n\n\t_init: function () {\n\t\tthis._initEvents();\n\n\t\tif ( this.options.scrollbars || this.options.indicators ) {\n\t\t\tthis._initIndicators();\n\t\t}\n\n\t\tif ( this.options.mouseWheel ) {\n\t\t\tthis._initWheel();\n\t\t}\n\n\t\tif ( this.options.snap ) {\n\t\t\tthis._initSnap();\n\t\t}\n\n\t\tif ( this.options.keyBindings ) {\n\t\t\tthis._initKeys();\n\t\t}\n\n// INSERT POINT: _init\n\n\t},\n\n\tdestroy: function () {\n\t\tthis._initEvents(true);\n\t\tclearTimeout(this.resizeTimeout);\n \t\tthis.resizeTimeout = null;\n\t\tthis._execEvent('destroy');\n\t},\n\n\t_transitionEnd: function (e) {\n\t\tif ( e.target != this.scroller || !this.isInTransition ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._transitionTime();\n\t\tif ( !this.resetPosition(this.options.bounceTime) ) {\n\t\t\tthis.isInTransition = false;\n\t\t\tthis._execEvent('scrollEnd');\n\t\t}\n\t},\n\n\t_start: function (e) {\n\t\t// React to left mouse button only\n\t\tif ( utils.eventType[e.type] != 1 ) {\n\t\t  // for button property\n\t\t  // http://unixpapa.com/js/mouse.html\n\t\t  var button;\n\t    if (!e.which) {\n\t      /* IE case */\n\t      button = (e.button < 2) ? 0 :\n\t               ((e.button == 4) ? 1 : 2);\n\t    } else {\n\t      /* All others */\n\t      button = e.button;\n\t    }\n\t\t\tif ( button !== 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( !this.enabled || (this.initiated && utils.eventType[e.type] !== this.initiated) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\tpos;\n\n\t\tthis.initiated\t= utils.eventType[e.type];\n\t\tthis.moved\t\t= false;\n\t\tthis.distX\t\t= 0;\n\t\tthis.distY\t\t= 0;\n\t\tthis.directionX = 0;\n\t\tthis.directionY = 0;\n\t\tthis.directionLocked = 0;\n\n\t\tthis.startTime = utils.getTime();\n\n\t\tif ( this.options.useTransition && this.isInTransition ) {\n\t\t\tthis._transitionTime();\n\t\t\tthis.isInTransition = false;\n\t\t\tpos = this.getComputedPosition();\n\t\t\tthis._translate(Math.round(pos.x), Math.round(pos.y));\n\t\t\tthis._execEvent('scrollEnd');\n\t\t} else if ( !this.options.useTransition && this.isAnimating ) {\n\t\t\tthis.isAnimating = false;\n\t\t\tthis._execEvent('scrollEnd');\n\t\t}\n\n\t\tthis.startX    = this.x;\n\t\tthis.startY    = this.y;\n\t\tthis.absStartX = this.x;\n\t\tthis.absStartY = this.y;\n\t\tthis.pointX    = point.pageX;\n\t\tthis.pointY    = point.pageY;\n\n\t\tthis._execEvent('beforeScrollStart');\n\t},\n\n\t_move: function (e) {\n\t\tif ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.options.preventDefault ) {\t// increases performance on Android? TODO: check!\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tvar point\t\t= e.touches ? e.touches[0] : e,\n\t\t\tdeltaX\t\t= point.pageX - this.pointX,\n\t\t\tdeltaY\t\t= point.pageY - this.pointY,\n\t\t\ttimestamp\t= utils.getTime(),\n\t\t\tnewX, newY,\n\t\t\tabsDistX, absDistY;\n\n\t\tthis.pointX\t\t= point.pageX;\n\t\tthis.pointY\t\t= point.pageY;\n\n\t\tthis.distX\t\t+= deltaX;\n\t\tthis.distY\t\t+= deltaY;\n\t\tabsDistX\t\t= Math.abs(this.distX);\n\t\tabsDistY\t\t= Math.abs(this.distY);\n\n\t\t// We need to move at least 10 pixels for the scrolling to initiate\n\t\tif ( timestamp - this.endTime > 300 && (absDistX < 10 && absDistY < 10) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If you are scrolling in one direction lock the other\n\t\tif ( !this.directionLocked && !this.options.freeScroll ) {\n\t\t\tif ( absDistX > absDistY + this.options.directionLockThreshold ) {\n\t\t\t\tthis.directionLocked = 'h';\t\t// lock horizontally\n\t\t\t} else if ( absDistY >= absDistX + this.options.directionLockThreshold ) {\n\t\t\t\tthis.directionLocked = 'v';\t\t// lock vertically\n\t\t\t} else {\n\t\t\t\tthis.directionLocked = 'n';\t\t// no lock\n\t\t\t}\n\t\t}\n\n\t\tif ( this.directionLocked == 'h' ) {\n\t\t\tif ( this.options.eventPassthrough == 'vertical' ) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if ( this.options.eventPassthrough == 'horizontal' ) {\n\t\t\t\tthis.initiated = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdeltaY = 0;\n\t\t} else if ( this.directionLocked == 'v' ) {\n\t\t\tif ( this.options.eventPassthrough == 'horizontal' ) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if ( this.options.eventPassthrough == 'vertical' ) {\n\t\t\t\tthis.initiated = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdeltaX = 0;\n\t\t}\n\n\t\tdeltaX = this.hasHorizontalScroll ? deltaX : 0;\n\t\tdeltaY = this.hasVerticalScroll ? deltaY : 0;\n\n\t\tnewX = this.x + deltaX;\n\t\tnewY = this.y + deltaY;\n\n\t\t// Slow down if outside of the boundaries\n\t\tif ( newX > 0 || newX < this.maxScrollX ) {\n\t\t\tnewX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;\n\t\t}\n\t\tif ( newY > 0 || newY < this.maxScrollY ) {\n\t\t\tnewY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;\n\t\t}\n\n\t\tthis.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;\n\t\tthis.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;\n\n\t\tif ( !this.moved ) {\n\t\t\tthis._execEvent('scrollStart');\n\t\t}\n\n\t\tthis.moved = true;\n\n\t\tthis._translate(newX, newY);\n\n/* REPLACE START: _move */\n\n\t\tif ( timestamp - this.startTime > 300 ) {\n\t\t\tthis.startTime = timestamp;\n\t\t\tthis.startX = this.x;\n\t\t\tthis.startY = this.y;\n\t\t}\n\n/* REPLACE END: _move */\n\n\t},\n\n\t_end: function (e) {\n\t\tif ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tvar point = e.changedTouches ? e.changedTouches[0] : e,\n\t\t\tmomentumX,\n\t\t\tmomentumY,\n\t\t\tduration = utils.getTime() - this.startTime,\n\t\t\tnewX = Math.round(this.x),\n\t\t\tnewY = Math.round(this.y),\n\t\t\tdistanceX = Math.abs(newX - this.startX),\n\t\t\tdistanceY = Math.abs(newY - this.startY),\n\t\t\ttime = 0,\n\t\t\teasing = '';\n\n\t\tthis.isInTransition = 0;\n\t\tthis.initiated = 0;\n\t\tthis.endTime = utils.getTime();\n\n\t\t// reset if we are outside of the boundaries\n\t\tif ( this.resetPosition(this.options.bounceTime) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scrollTo(newX, newY);\t// ensures that the last position is rounded\n\n\t\t// we scrolled less than 10 pixels\n\t\tif ( !this.moved ) {\n\t\t\tif ( this.options.tap ) {\n\t\t\t\tutils.tap(e, this.options.tap);\n\t\t\t}\n\n\t\t\tif ( this.options.click ) {\n\t\t\t\tutils.click(e);\n\t\t\t}\n\n\t\t\tthis._execEvent('scrollCancel');\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100 ) {\n\t\t\tthis._execEvent('flick');\n\t\t\treturn;\n\t\t}\n\n\t\t// start momentum animation if needed\n\t\tif ( this.options.momentum && duration < 300 ) {\n\t\t\tmomentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };\n\t\t\tmomentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };\n\t\t\tnewX = momentumX.destination;\n\t\t\tnewY = momentumY.destination;\n\t\t\ttime = Math.max(momentumX.duration, momentumY.duration);\n\t\t\tthis.isInTransition = 1;\n\t\t}\n\n\n\t\tif ( this.options.snap ) {\n\t\t\tvar snap = this._nearestSnap(newX, newY);\n\t\t\tthis.currentPage = snap;\n\t\t\ttime = this.options.snapSpeed || Math.max(\n\t\t\t\t\tMath.max(\n\t\t\t\t\t\tMath.min(Math.abs(newX - snap.x), 1000),\n\t\t\t\t\t\tMath.min(Math.abs(newY - snap.y), 1000)\n\t\t\t\t\t), 300);\n\t\t\tnewX = snap.x;\n\t\t\tnewY = snap.y;\n\n\t\t\tthis.directionX = 0;\n\t\t\tthis.directionY = 0;\n\t\t\teasing = this.options.bounceEasing;\n\t\t}\n\n// INSERT POINT: _end\n\n\t\tif ( newX != this.x || newY != this.y ) {\n\t\t\t// change easing function when scroller goes out of the boundaries\n\t\t\tif ( newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY ) {\n\t\t\t\teasing = utils.ease.quadratic;\n\t\t\t}\n\n\t\t\tthis.scrollTo(newX, newY, time, easing);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._execEvent('scrollEnd');\n\t},\n\n\t_resize: function () {\n\t\tvar that = this;\n\n\t\tclearTimeout(this.resizeTimeout);\n\n\t\tthis.resizeTimeout = setTimeout(function () {\n\t\t\tthat.refresh();\n\t\t}, this.options.resizePolling);\n\t},\n\n\tresetPosition: function (time) {\n\t\tvar x = this.x,\n\t\t\ty = this.y;\n\n\t\ttime = time || 0;\n\n\t\tif ( !this.hasHorizontalScroll || this.x > 0 ) {\n\t\t\tx = 0;\n\t\t} else if ( this.x < this.maxScrollX ) {\n\t\t\tx = this.maxScrollX;\n\t\t}\n\n\t\tif ( !this.hasVerticalScroll || this.y > 0 ) {\n\t\t\ty = 0;\n\t\t} else if ( this.y < this.maxScrollY ) {\n\t\t\ty = this.maxScrollY;\n\t\t}\n\n\t\tif ( x == this.x && y == this.y ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.scrollTo(x, y, time, this.options.bounceEasing);\n\n\t\treturn true;\n\t},\n\n\tdisable: function () {\n\t\tthis.enabled = false;\n\t},\n\n\tenable: function () {\n\t\tthis.enabled = true;\n\t},\n\n\trefresh: function () {\n\t\tvar rf = this.wrapper.offsetHeight;\t\t// Force reflow\n\n\t\tthis.wrapperWidth\t= this.wrapper.clientWidth;\n\t\tthis.wrapperHeight\t= this.wrapper.clientHeight;\n\n/* REPLACE START: refresh */\n\n\t\tthis.scrollerWidth\t= this.scroller.offsetWidth;\n\t\tthis.scrollerHeight\t= this.scroller.offsetHeight;\n\n\t\tthis.maxScrollX\t\t= this.wrapperWidth - this.scrollerWidth;\n\t\tthis.maxScrollY\t\t= this.wrapperHeight - this.scrollerHeight;\n\n/* REPLACE END: refresh */\n\n\t\tthis.hasHorizontalScroll\t= this.options.scrollX && this.maxScrollX < 0;\n\t\tthis.hasVerticalScroll\t\t= this.options.scrollY && this.maxScrollY < 0;\n\n\t\tif ( !this.hasHorizontalScroll ) {\n\t\t\tthis.maxScrollX = 0;\n\t\t\tthis.scrollerWidth = this.wrapperWidth;\n\t\t}\n\n\t\tif ( !this.hasVerticalScroll ) {\n\t\t\tthis.maxScrollY = 0;\n\t\t\tthis.scrollerHeight = this.wrapperHeight;\n\t\t}\n\n\t\tthis.endTime = 0;\n\t\tthis.directionX = 0;\n\t\tthis.directionY = 0;\n\n\t\tthis.wrapperOffset = utils.offset(this.wrapper);\n\n\t\tthis._execEvent('refresh');\n\n\t\tthis.resetPosition();\n\n// INSERT POINT: _refresh\n\n\t},\n\n\ton: function (type, fn) {\n\t\tif ( !this._events[type] ) {\n\t\t\tthis._events[type] = [];\n\t\t}\n\n\t\tthis._events[type].push(fn);\n\t},\n\n\toff: function (type, fn) {\n\t\tif ( !this._events[type] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar index = this._events[type].indexOf(fn);\n\n\t\tif ( index > -1 ) {\n\t\t\tthis._events[type].splice(index, 1);\n\t\t}\n\t},\n\n\t_execEvent: function (type) {\n\t\tif ( !this._events[type] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar i = 0,\n\t\t\tl = this._events[type].length;\n\n\t\tif ( !l ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tthis._events[type][i].apply(this, [].slice.call(arguments, 1));\n\t\t}\n\t},\n\n\tscrollBy: function (x, y, time, easing) {\n\t\tx = this.x + x;\n\t\ty = this.y + y;\n\t\ttime = time || 0;\n\n\t\tthis.scrollTo(x, y, time, easing);\n\t},\n\n\tscrollTo: function (x, y, time, easing) {\n\t\teasing = easing || utils.ease.circular;\n\n\t\tthis.isInTransition = this.options.useTransition && time > 0;\n\t\tvar transitionType = this.options.useTransition && easing.style;\n\t\tif ( !time || transitionType ) {\n\t\t\t\tif(transitionType) {\n\t\t\t\t\tthis._transitionTimingFunction(easing.style);\n\t\t\t\t\tthis._transitionTime(time);\n\t\t\t\t}\n\t\t\tthis._translate(x, y);\n\t\t} else {\n\t\t\tthis._animate(x, y, time, easing.fn);\n\t\t}\n\t},\n\n\tscrollToElement: function (el, time, offsetX, offsetY, easing) {\n\t\tel = el.nodeType ? el : this.scroller.querySelector(el);\n\n\t\tif ( !el ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar pos = utils.offset(el);\n\n\t\tpos.left -= this.wrapperOffset.left;\n\t\tpos.top  -= this.wrapperOffset.top;\n\n\t\t// if offsetX/Y are true we center the element to the screen\n\t\tif ( offsetX === true ) {\n\t\t\toffsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);\n\t\t}\n\t\tif ( offsetY === true ) {\n\t\t\toffsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);\n\t\t}\n\n\t\tpos.left -= offsetX || 0;\n\t\tpos.top  -= offsetY || 0;\n\n\t\tpos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;\n\t\tpos.top  = pos.top  > 0 ? 0 : pos.top  < this.maxScrollY ? this.maxScrollY : pos.top;\n\n\t\ttime = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x-pos.left), Math.abs(this.y-pos.top)) : time;\n\n\t\tthis.scrollTo(pos.left, pos.top, time, easing);\n\t},\n\n\t_transitionTime: function (time) {\n\t\ttime = time || 0;\n\n\t\tvar durationProp = utils.style.transitionDuration;\n\t\tthis.scrollerStyle[durationProp] = time + 'ms';\n\n\t\tif ( !time && utils.isBadAndroid ) {\n\t\t\tthis.scrollerStyle[durationProp] = '0.0001ms';\n\t\t\t// remove 0.0001ms\n\t\t\tvar self = this;\n\t\t\trAF(function() {\n\t\t\t\tif(self.scrollerStyle[durationProp] === '0.0001ms') {\n\t\t\t\t\tself.scrollerStyle[durationProp] = '0s';\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\n\t\tif ( this.indicators ) {\n\t\t\tfor ( var i = this.indicators.length; i--; ) {\n\t\t\t\tthis.indicators[i].transitionTime(time);\n\t\t\t}\n\t\t}\n\n\n// INSERT POINT: _transitionTime\n\n\t},\n\n\t_transitionTimingFunction: function (easing) {\n\t\tthis.scrollerStyle[utils.style.transitionTimingFunction] = easing;\n\n\n\t\tif ( this.indicators ) {\n\t\t\tfor ( var i = this.indicators.length; i--; ) {\n\t\t\t\tthis.indicators[i].transitionTimingFunction(easing);\n\t\t\t}\n\t\t}\n\n\n// INSERT POINT: _transitionTimingFunction\n\n\t},\n\n\t_translate: function (x, y) {\n\t\tif ( this.options.useTransform ) {\n\n/* REPLACE START: _translate */\n\n\t\t\tthis.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;\n\n/* REPLACE END: _translate */\n\n\t\t} else {\n\t\t\tx = Math.round(x);\n\t\t\ty = Math.round(y);\n\t\t\tthis.scrollerStyle.left = x + 'px';\n\t\t\tthis.scrollerStyle.top = y + 'px';\n\t\t}\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\n\tif ( this.indicators ) {\n\t\tfor ( var i = this.indicators.length; i--; ) {\n\t\t\tthis.indicators[i].updatePosition();\n\t\t}\n\t}\n\n\n// INSERT POINT: _translate\n\n\t},\n\n\t_initEvents: function (remove) {\n\t\tvar eventType = remove ? utils.removeEvent : utils.addEvent,\n\t\t\ttarget = this.options.bindToWrapper ? this.wrapper : window;\n\n\t\teventType(window, 'orientationchange', this);\n\t\teventType(window, 'resize', this);\n\n\t\tif ( this.options.click ) {\n\t\t\teventType(this.wrapper, 'click', this, true);\n\t\t}\n\n\t\tif ( !this.options.disableMouse ) {\n\t\t\teventType(this.wrapper, 'mousedown', this);\n\t\t\teventType(target, 'mousemove', this);\n\t\t\teventType(target, 'mousecancel', this);\n\t\t\teventType(target, 'mouseup', this);\n\t\t}\n\n\t\tif ( utils.hasPointer && !this.options.disablePointer ) {\n\t\t\teventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\teventType(target, utils.prefixPointerEvent('pointermove'), this);\n\t\t\teventType(target, utils.prefixPointerEvent('pointercancel'), this);\n\t\t\teventType(target, utils.prefixPointerEvent('pointerup'), this);\n\t\t}\n\n\t\tif ( utils.hasTouch && !this.options.disableTouch ) {\n\t\t\teventType(this.wrapper, 'touchstart', this);\n\t\t\teventType(target, 'touchmove', this);\n\t\t\teventType(target, 'touchcancel', this);\n\t\t\teventType(target, 'touchend', this);\n\t\t}\n\n\t\teventType(this.scroller, 'transitionend', this);\n\t\teventType(this.scroller, 'webkitTransitionEnd', this);\n\t\teventType(this.scroller, 'oTransitionEnd', this);\n\t\teventType(this.scroller, 'MSTransitionEnd', this);\n\t},\n\n\tgetComputedPosition: function () {\n\t\tvar matrix = window.getComputedStyle(this.scroller, null),\n\t\t\tx, y;\n\n\t\tif ( this.options.useTransform ) {\n\t\t\tmatrix = matrix[utils.style.transform].split(')')[0].split(', ');\n\t\t\tx = +(matrix[12] || matrix[4]);\n\t\t\ty = +(matrix[13] || matrix[5]);\n\t\t} else {\n\t\t\tx = +matrix.left.replace(/[^-\\d.]/g, '');\n\t\t\ty = +matrix.top.replace(/[^-\\d.]/g, '');\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t},\n\t_initIndicators: function () {\n\t\tvar interactive = this.options.interactiveScrollbars,\n\t\t\tcustomStyle = typeof this.options.scrollbars != 'string',\n\t\t\tindicators = [],\n\t\t\tindicator;\n\n\t\tvar that = this;\n\n\t\tthis.indicators = [];\n\n\t\tif ( this.options.scrollbars ) {\n\t\t\t// Vertical scrollbar\n\t\t\tif ( this.options.scrollY ) {\n\t\t\t\tindicator = {\n\t\t\t\t\tel: createDefaultScrollbar('v', interactive, this.options.scrollbars),\n\t\t\t\t\tinteractive: interactive,\n\t\t\t\t\tdefaultScrollbars: true,\n\t\t\t\t\tcustomStyle: customStyle,\n\t\t\t\t\tresize: this.options.resizeScrollbars,\n\t\t\t\t\tshrink: this.options.shrinkScrollbars,\n\t\t\t\t\tfade: this.options.fadeScrollbars,\n\t\t\t\t\tlistenX: false\n\t\t\t\t};\n\n\t\t\t\tthis.wrapper.appendChild(indicator.el);\n\t\t\t\tindicators.push(indicator);\n\t\t\t}\n\n\t\t\t// Horizontal scrollbar\n\t\t\tif ( this.options.scrollX ) {\n\t\t\t\tindicator = {\n\t\t\t\t\tel: createDefaultScrollbar('h', interactive, this.options.scrollbars),\n\t\t\t\t\tinteractive: interactive,\n\t\t\t\t\tdefaultScrollbars: true,\n\t\t\t\t\tcustomStyle: customStyle,\n\t\t\t\t\tresize: this.options.resizeScrollbars,\n\t\t\t\t\tshrink: this.options.shrinkScrollbars,\n\t\t\t\t\tfade: this.options.fadeScrollbars,\n\t\t\t\t\tlistenY: false\n\t\t\t\t};\n\n\t\t\t\tthis.wrapper.appendChild(indicator.el);\n\t\t\t\tindicators.push(indicator);\n\t\t\t}\n\t\t}\n\n\t\tif ( this.options.indicators ) {\n\t\t\t// TODO: check concat compatibility\n\t\t\tindicators = indicators.concat(this.options.indicators);\n\t\t}\n\n\t\tfor ( var i = indicators.length; i--; ) {\n\t\t\tthis.indicators.push( new Indicator(this, indicators[i]) );\n\t\t}\n\n\t\t// TODO: check if we can use array.map (wide compatibility and performance issues)\n\t\tfunction _indicatorsMap (fn) {\n\t\t\tif (that.indicators) {\n\t\t\t\tfor ( var i = that.indicators.length; i--; ) {\n\t\t\t\t\tfn.call(that.indicators[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( this.options.fadeScrollbars ) {\n\t\t\tthis.on('scrollEnd', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.fade();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.on('scrollCancel', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.fade();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.on('scrollStart', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.fade(1);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.on('beforeScrollStart', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.fade(1, true);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\n\t\tthis.on('refresh', function () {\n\t\t\t_indicatorsMap(function () {\n\t\t\t\tthis.refresh();\n\t\t\t});\n\t\t});\n\n\t\tthis.on('destroy', function () {\n\t\t\t_indicatorsMap(function () {\n\t\t\t\tthis.destroy();\n\t\t\t});\n\n\t\t\tdelete this.indicators;\n\t\t});\n\t},\n\n\t_initWheel: function () {\n\t\tutils.addEvent(this.wrapper, 'wheel', this);\n\t\tutils.addEvent(this.wrapper, 'mousewheel', this);\n\t\tutils.addEvent(this.wrapper, 'DOMMouseScroll', this);\n\n\t\tthis.on('destroy', function () {\n\t\t\tclearTimeout(this.wheelTimeout);\n\t\t\tthis.wheelTimeout = null;\n\t\t\tutils.removeEvent(this.wrapper, 'wheel', this);\n\t\t\tutils.removeEvent(this.wrapper, 'mousewheel', this);\n\t\t\tutils.removeEvent(this.wrapper, 'DOMMouseScroll', this);\n\t\t});\n\t},\n\n\t_wheel: function (e) {\n\t\tif ( !this.enabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\te.preventDefault();\n\n\t\tvar wheelDeltaX, wheelDeltaY,\n\t\t\tnewX, newY,\n\t\t\tthat = this;\n\n\t\tif ( this.wheelTimeout === undefined ) {\n\t\t\tthat._execEvent('scrollStart');\n\t\t}\n\n\t\t// Execute the scrollEnd event after 400ms the wheel stopped scrolling\n\t\tclearTimeout(this.wheelTimeout);\n\t\tthis.wheelTimeout = setTimeout(function () {\n\t\t\tif(!that.options.snap) {\n\t\t\t\tthat._execEvent('scrollEnd');\n\t\t\t}\n\t\t\tthat.wheelTimeout = undefined;\n\t\t}, 400);\n\n\t\tif ( 'deltaX' in e ) {\n\t\t\tif (e.deltaMode === 1) {\n\t\t\t\twheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;\n\t\t\t\twheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;\n\t\t\t} else {\n\t\t\t\twheelDeltaX = -e.deltaX;\n\t\t\t\twheelDeltaY = -e.deltaY;\n\t\t\t}\n\t\t} else if ( 'wheelDeltaX' in e ) {\n\t\t\twheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;\n\t\t\twheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;\n\t\t} else if ( 'wheelDelta' in e ) {\n\t\t\twheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;\n\t\t} else if ( 'detail' in e ) {\n\t\t\twheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\twheelDeltaX *= this.options.invertWheelDirection;\n\t\twheelDeltaY *= this.options.invertWheelDirection;\n\n\t\tif ( !this.hasVerticalScroll ) {\n\t\t\twheelDeltaX = wheelDeltaY;\n\t\t\twheelDeltaY = 0;\n\t\t}\n\n\t\tif ( this.options.snap ) {\n\t\t\tnewX = this.currentPage.pageX;\n\t\t\tnewY = this.currentPage.pageY;\n\n\t\t\tif ( wheelDeltaX > 0 ) {\n\t\t\t\tnewX--;\n\t\t\t} else if ( wheelDeltaX < 0 ) {\n\t\t\t\tnewX++;\n\t\t\t}\n\n\t\t\tif ( wheelDeltaY > 0 ) {\n\t\t\t\tnewY--;\n\t\t\t} else if ( wheelDeltaY < 0 ) {\n\t\t\t\tnewY++;\n\t\t\t}\n\n\t\t\tthis.goToPage(newX, newY);\n\n\t\t\treturn;\n\t\t}\n\n\t\tnewX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);\n\t\tnewY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);\n\n\t\tthis.directionX = wheelDeltaX > 0 ? -1 : wheelDeltaX < 0 ? 1 : 0;\n\t\tthis.directionY = wheelDeltaY > 0 ? -1 : wheelDeltaY < 0 ? 1 : 0;\n\n\t\tif ( newX > 0 ) {\n\t\t\tnewX = 0;\n\t\t} else if ( newX < this.maxScrollX ) {\n\t\t\tnewX = this.maxScrollX;\n\t\t}\n\n\t\tif ( newY > 0 ) {\n\t\t\tnewY = 0;\n\t\t} else if ( newY < this.maxScrollY ) {\n\t\t\tnewY = this.maxScrollY;\n\t\t}\n\n\t\tthis.scrollTo(newX, newY, 0);\n\n// INSERT POINT: _wheel\n\t},\n\n\t_initSnap: function () {\n\t\tthis.currentPage = {};\n\n\t\tif ( typeof this.options.snap == 'string' ) {\n\t\t\tthis.options.snap = this.scroller.querySelectorAll(this.options.snap);\n\t\t}\n\n\t\tthis.on('refresh', function () {\n\t\t\tvar i = 0, l,\n\t\t\t\tm = 0, n,\n\t\t\t\tcx, cy,\n\t\t\t\tx = 0, y,\n\t\t\t\tstepX = this.options.snapStepX || this.wrapperWidth,\n\t\t\t\tstepY = this.options.snapStepY || this.wrapperHeight,\n\t\t\t\tel;\n\n\t\t\tthis.pages = [];\n\n\t\t\tif ( !this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( this.options.snap === true ) {\n\t\t\t\tcx = Math.round( stepX / 2 );\n\t\t\t\tcy = Math.round( stepY / 2 );\n\n\t\t\t\twhile ( x > -this.scrollerWidth ) {\n\t\t\t\t\tthis.pages[i] = [];\n\t\t\t\t\tl = 0;\n\t\t\t\t\ty = 0;\n\n\t\t\t\t\twhile ( y > -this.scrollerHeight ) {\n\t\t\t\t\t\tthis.pages[i][l] = {\n\t\t\t\t\t\t\tx: Math.max(x, this.maxScrollX),\n\t\t\t\t\t\t\ty: Math.max(y, this.maxScrollY),\n\t\t\t\t\t\t\twidth: stepX,\n\t\t\t\t\t\t\theight: stepY,\n\t\t\t\t\t\t\tcx: x - cx,\n\t\t\t\t\t\t\tcy: y - cy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\ty -= stepY;\n\t\t\t\t\t\tl++;\n\t\t\t\t\t}\n\n\t\t\t\t\tx -= stepX;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tel = this.options.snap;\n\t\t\t\tl = el.length;\n\t\t\t\tn = -1;\n\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tif ( i === 0 || el[i].offsetLeft <= el[i-1].offsetLeft ) {\n\t\t\t\t\t\tm = 0;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !this.pages[m] ) {\n\t\t\t\t\t\tthis.pages[m] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tx = Math.max(-el[i].offsetLeft, this.maxScrollX);\n\t\t\t\t\ty = Math.max(-el[i].offsetTop, this.maxScrollY);\n\t\t\t\t\tcx = x - Math.round(el[i].offsetWidth / 2);\n\t\t\t\t\tcy = y - Math.round(el[i].offsetHeight / 2);\n\n\t\t\t\t\tthis.pages[m][n] = {\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t\twidth: el[i].offsetWidth,\n\t\t\t\t\t\theight: el[i].offsetHeight,\n\t\t\t\t\t\tcx: cx,\n\t\t\t\t\t\tcy: cy\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( x > this.maxScrollX ) {\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);\n\n\t\t\t// Update snap threshold if needed\n\t\t\tif ( this.options.snapThreshold % 1 === 0 ) {\n\t\t\t\tthis.snapThresholdX = this.options.snapThreshold;\n\t\t\t\tthis.snapThresholdY = this.options.snapThreshold;\n\t\t\t} else {\n\t\t\t\tthis.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);\n\t\t\t\tthis.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);\n\t\t\t}\n\t\t});\n\n\t\tthis.on('flick', function () {\n\t\t\tvar time = this.options.snapSpeed || Math.max(\n\t\t\t\t\tMath.max(\n\t\t\t\t\t\tMath.min(Math.abs(this.x - this.startX), 1000),\n\t\t\t\t\t\tMath.min(Math.abs(this.y - this.startY), 1000)\n\t\t\t\t\t), 300);\n\n\t\t\tthis.goToPage(\n\t\t\t\tthis.currentPage.pageX + this.directionX,\n\t\t\t\tthis.currentPage.pageY + this.directionY,\n\t\t\t\ttime\n\t\t\t);\n\t\t});\n\t},\n\n\t_nearestSnap: function (x, y) {\n\t\tif ( !this.pages.length ) {\n\t\t\treturn { x: 0, y: 0, pageX: 0, pageY: 0 };\n\t\t}\n\n\t\tvar i = 0,\n\t\t\tl = this.pages.length,\n\t\t\tm = 0;\n\n\t\t// Check if we exceeded the snap threshold\n\t\tif ( Math.abs(x - this.absStartX) < this.snapThresholdX &&\n\t\t\tMath.abs(y - this.absStartY) < this.snapThresholdY ) {\n\t\t\treturn this.currentPage;\n\t\t}\n\n\t\tif ( x > 0 ) {\n\t\t\tx = 0;\n\t\t} else if ( x < this.maxScrollX ) {\n\t\t\tx = this.maxScrollX;\n\t\t}\n\n\t\tif ( y > 0 ) {\n\t\t\ty = 0;\n\t\t} else if ( y < this.maxScrollY ) {\n\t\t\ty = this.maxScrollY;\n\t\t}\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( x >= this.pages[i][0].cx ) {\n\t\t\t\tx = this.pages[i][0].x;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tl = this.pages[i].length;\n\n\t\tfor ( ; m < l; m++ ) {\n\t\t\tif ( y >= this.pages[0][m].cy ) {\n\t\t\t\ty = this.pages[0][m].y;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( i == this.currentPage.pageX ) {\n\t\t\ti += this.directionX;\n\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t} else if ( i >= this.pages.length ) {\n\t\t\t\ti = this.pages.length - 1;\n\t\t\t}\n\n\t\t\tx = this.pages[i][0].x;\n\t\t}\n\n\t\tif ( m == this.currentPage.pageY ) {\n\t\t\tm += this.directionY;\n\n\t\t\tif ( m < 0 ) {\n\t\t\t\tm = 0;\n\t\t\t} else if ( m >= this.pages[0].length ) {\n\t\t\t\tm = this.pages[0].length - 1;\n\t\t\t}\n\n\t\t\ty = this.pages[0][m].y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tpageX: i,\n\t\t\tpageY: m\n\t\t};\n\t},\n\n\tgoToPage: function (x, y, time, easing) {\n\t\teasing = easing || this.options.bounceEasing;\n\n\t\tif ( x >= this.pages.length ) {\n\t\t\tx = this.pages.length - 1;\n\t\t} else if ( x < 0 ) {\n\t\t\tx = 0;\n\t\t}\n\n\t\tif ( y >= this.pages[x].length ) {\n\t\t\ty = this.pages[x].length - 1;\n\t\t} else if ( y < 0 ) {\n\t\t\ty = 0;\n\t\t}\n\n\t\tvar posX = this.pages[x][y].x,\n\t\t\tposY = this.pages[x][y].y;\n\n\t\ttime = time === undefined ? this.options.snapSpeed || Math.max(\n\t\t\tMath.max(\n\t\t\t\tMath.min(Math.abs(posX - this.x), 1000),\n\t\t\t\tMath.min(Math.abs(posY - this.y), 1000)\n\t\t\t), 300) : time;\n\n\t\tthis.currentPage = {\n\t\t\tx: posX,\n\t\t\ty: posY,\n\t\t\tpageX: x,\n\t\t\tpageY: y\n\t\t};\n\n\t\tthis.scrollTo(posX, posY, time, easing);\n\t},\n\n\tnext: function (time, easing) {\n\t\tvar x = this.currentPage.pageX,\n\t\t\ty = this.currentPage.pageY;\n\n\t\tx++;\n\n\t\tif ( x >= this.pages.length && this.hasVerticalScroll ) {\n\t\t\tx = 0;\n\t\t\ty++;\n\t\t}\n\n\t\tthis.goToPage(x, y, time, easing);\n\t},\n\n\tprev: function (time, easing) {\n\t\tvar x = this.currentPage.pageX,\n\t\t\ty = this.currentPage.pageY;\n\n\t\tx--;\n\n\t\tif ( x < 0 && this.hasVerticalScroll ) {\n\t\t\tx = 0;\n\t\t\ty--;\n\t\t}\n\n\t\tthis.goToPage(x, y, time, easing);\n\t},\n\n\t_initKeys: function (e) {\n\t\t// default key bindings\n\t\tvar keys = {\n\t\t\tpageUp: 33,\n\t\t\tpageDown: 34,\n\t\t\tend: 35,\n\t\t\thome: 36,\n\t\t\tleft: 37,\n\t\t\tup: 38,\n\t\t\tright: 39,\n\t\t\tdown: 40\n\t\t};\n\t\tvar i;\n\n\t\t// if you give me characters I give you keycode\n\t\tif ( typeof this.options.keyBindings == 'object' ) {\n\t\t\tfor ( i in this.options.keyBindings ) {\n\t\t\t\tif ( typeof this.options.keyBindings[i] == 'string' ) {\n\t\t\t\t\tthis.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.options.keyBindings = {};\n\t\t}\n\n\t\tfor ( i in keys ) {\n\t\t\tthis.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];\n\t\t}\n\n\t\tutils.addEvent(window, 'keydown', this);\n\n\t\tthis.on('destroy', function () {\n\t\t\tutils.removeEvent(window, 'keydown', this);\n\t\t});\n\t},\n\n\t_key: function (e) {\n\t\tif ( !this.enabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar snap = this.options.snap,\t// we are using this alot, better to cache it\n\t\t\tnewX = snap ? this.currentPage.pageX : this.x,\n\t\t\tnewY = snap ? this.currentPage.pageY : this.y,\n\t\t\tnow = utils.getTime(),\n\t\t\tprevTime = this.keyTime || 0,\n\t\t\tacceleration = 0.250,\n\t\t\tpos;\n\n\t\tif ( this.options.useTransition && this.isInTransition ) {\n\t\t\tpos = this.getComputedPosition();\n\n\t\t\tthis._translate(Math.round(pos.x), Math.round(pos.y));\n\t\t\tthis.isInTransition = false;\n\t\t}\n\n\t\tthis.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;\n\n\t\tswitch ( e.keyCode ) {\n\t\t\tcase this.options.keyBindings.pageUp:\n\t\t\t\tif ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {\n\t\t\t\t\tnewX += snap ? 1 : this.wrapperWidth;\n\t\t\t\t} else {\n\t\t\t\t\tnewY += snap ? 1 : this.wrapperHeight;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase this.options.keyBindings.pageDown:\n\t\t\t\tif ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {\n\t\t\t\t\tnewX -= snap ? 1 : this.wrapperWidth;\n\t\t\t\t} else {\n\t\t\t\t\tnewY -= snap ? 1 : this.wrapperHeight;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase this.options.keyBindings.end:\n\t\t\t\tnewX = snap ? this.pages.length-1 : this.maxScrollX;\n\t\t\t\tnewY = snap ? this.pages[0].length-1 : this.maxScrollY;\n\t\t\t\tbreak;\n\t\t\tcase this.options.keyBindings.home:\n\t\t\t\tnewX = 0;\n\t\t\t\tnewY = 0;\n\t\t\t\tbreak;\n\t\t\tcase this.options.keyBindings.left:\n\t\t\t\tnewX += snap ? -1 : 5 + this.keyAcceleration>>0;\n\t\t\t\tbreak;\n\t\t\tcase this.options.keyBindings.up:\n\t\t\t\tnewY += snap ? 1 : 5 + this.keyAcceleration>>0;\n\t\t\t\tbreak;\n\t\t\tcase this.options.keyBindings.right:\n\t\t\t\tnewX -= snap ? -1 : 5 + this.keyAcceleration>>0;\n\t\t\t\tbreak;\n\t\t\tcase this.options.keyBindings.down:\n\t\t\t\tnewY -= snap ? 1 : 5 + this.keyAcceleration>>0;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t\tif ( snap ) {\n\t\t\tthis.goToPage(newX, newY);\n\t\t\treturn;\n\t\t}\n\n\t\tif ( newX > 0 ) {\n\t\t\tnewX = 0;\n\t\t\tthis.keyAcceleration = 0;\n\t\t} else if ( newX < this.maxScrollX ) {\n\t\t\tnewX = this.maxScrollX;\n\t\t\tthis.keyAcceleration = 0;\n\t\t}\n\n\t\tif ( newY > 0 ) {\n\t\t\tnewY = 0;\n\t\t\tthis.keyAcceleration = 0;\n\t\t} else if ( newY < this.maxScrollY ) {\n\t\t\tnewY = this.maxScrollY;\n\t\t\tthis.keyAcceleration = 0;\n\t\t}\n\n\t\tthis.scrollTo(newX, newY, 0);\n\n\t\tthis.keyTime = now;\n\t},\n\n\t_animate: function (destX, destY, duration, easingFn) {\n\t\tvar that = this,\n\t\t\tstartX = this.x,\n\t\t\tstartY = this.y,\n\t\t\tstartTime = utils.getTime(),\n\t\t\tdestTime = startTime + duration;\n\n\t\tfunction step () {\n\t\t\tvar now = utils.getTime(),\n\t\t\t\tnewX, newY,\n\t\t\t\teasing;\n\n\t\t\tif ( now >= destTime ) {\n\t\t\t\tthat.isAnimating = false;\n\t\t\t\tthat._translate(destX, destY);\n\n\t\t\t\tif ( !that.resetPosition(that.options.bounceTime) ) {\n\t\t\t\t\tthat._execEvent('scrollEnd');\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnow = ( now - startTime ) / duration;\n\t\t\teasing = easingFn(now);\n\t\t\tnewX = ( destX - startX ) * easing + startX;\n\t\t\tnewY = ( destY - startY ) * easing + startY;\n\t\t\tthat._translate(newX, newY);\n\n\t\t\tif ( that.isAnimating ) {\n\t\t\t\trAF(step);\n\t\t\t}\n\t\t}\n\n\t\tthis.isAnimating = true;\n\t\tstep();\n\t},\n\thandleEvent: function (e) {\n\t\tswitch ( e.type ) {\n\t\t\tcase 'touchstart':\n\t\t\tcase 'pointerdown':\n\t\t\tcase 'MSPointerDown':\n\t\t\tcase 'mousedown':\n\t\t\t\tthis._start(e);\n\t\t\t\tbreak;\n\t\t\tcase 'touchmove':\n\t\t\tcase 'pointermove':\n\t\t\tcase 'MSPointerMove':\n\t\t\tcase 'mousemove':\n\t\t\t\tthis._move(e);\n\t\t\t\tbreak;\n\t\t\tcase 'touchend':\n\t\t\tcase 'pointerup':\n\t\t\tcase 'MSPointerUp':\n\t\t\tcase 'mouseup':\n\t\t\tcase 'touchcancel':\n\t\t\tcase 'pointercancel':\n\t\t\tcase 'MSPointerCancel':\n\t\t\tcase 'mousecancel':\n\t\t\t\tthis._end(e);\n\t\t\t\tbreak;\n\t\t\tcase 'orientationchange':\n\t\t\tcase 'resize':\n\t\t\t\tthis._resize();\n\t\t\t\tbreak;\n\t\t\tcase 'transitionend':\n\t\t\tcase 'webkitTransitionEnd':\n\t\t\tcase 'oTransitionEnd':\n\t\t\tcase 'MSTransitionEnd':\n\t\t\t\tthis._transitionEnd(e);\n\t\t\t\tbreak;\n\t\t\tcase 'wheel':\n\t\t\tcase 'DOMMouseScroll':\n\t\t\tcase 'mousewheel':\n\t\t\t\tthis._wheel(e);\n\t\t\t\tbreak;\n\t\t\tcase 'keydown':\n\t\t\t\tthis._key(e);\n\t\t\t\tbreak;\n\t\t\tcase 'click':\n\t\t\t\tif ( this.enabled && !e._constructed ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\nfunction createDefaultScrollbar (direction, interactive, type) {\n\tvar scrollbar = document.createElement('div'),\n\t\tindicator = document.createElement('div');\n\n\tif ( type === true ) {\n\t\tscrollbar.style.cssText = 'position:absolute;z-index:9999';\n\t\tindicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';\n\t}\n\n\tindicator.className = 'iScrollIndicator';\n\n\tif ( direction == 'h' ) {\n\t\tif ( type === true ) {\n\t\t\tscrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';\n\t\t\tindicator.style.height = '100%';\n\t\t}\n\t\tscrollbar.className = 'iScrollHorizontalScrollbar';\n\t} else {\n\t\tif ( type === true ) {\n\t\t\tscrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';\n\t\t\tindicator.style.width = '100%';\n\t\t}\n\t\tscrollbar.className = 'iScrollVerticalScrollbar';\n\t}\n\n\tscrollbar.style.cssText += ';overflow:hidden';\n\n\tif ( !interactive ) {\n\t\tscrollbar.style.pointerEvents = 'none';\n\t}\n\n\tscrollbar.appendChild(indicator);\n\n\treturn scrollbar;\n}\n\nfunction Indicator (scroller, options) {\n\tthis.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;\n\tthis.wrapperStyle = this.wrapper.style;\n\tthis.indicator = this.wrapper.children[0];\n\tthis.indicatorStyle = this.indicator.style;\n\tthis.scroller = scroller;\n\n\tthis.options = {\n\t\tlistenX: true,\n\t\tlistenY: true,\n\t\tinteractive: false,\n\t\tresize: true,\n\t\tdefaultScrollbars: false,\n\t\tshrink: false,\n\t\tfade: false,\n\t\tspeedRatioX: 0,\n\t\tspeedRatioY: 0\n\t};\n\n\tfor ( var i in options ) {\n\t\tthis.options[i] = options[i];\n\t}\n\n\tthis.sizeRatioX = 1;\n\tthis.sizeRatioY = 1;\n\tthis.maxPosX = 0;\n\tthis.maxPosY = 0;\n\n\tif ( this.options.interactive ) {\n\t\tif ( !this.options.disableTouch ) {\n\t\t\tutils.addEvent(this.indicator, 'touchstart', this);\n\t\t\tutils.addEvent(window, 'touchend', this);\n\t\t}\n\t\tif ( !this.options.disablePointer ) {\n\t\t\tutils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\tutils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);\n\t\t}\n\t\tif ( !this.options.disableMouse ) {\n\t\t\tutils.addEvent(this.indicator, 'mousedown', this);\n\t\t\tutils.addEvent(window, 'mouseup', this);\n\t\t}\n\t}\n\n\tif ( this.options.fade ) {\n\t\tthis.wrapperStyle[utils.style.transform] = this.scroller.translateZ;\n\t\tvar durationProp = utils.style.transitionDuration;\n\t\tthis.wrapperStyle[durationProp] = utils.isBadAndroid ? '0.0001ms' : '0ms';\n\t\t// remove 0.0001ms\n\t\tvar self = this;\n\t\tif(utils.isBadAndroid) {\n\t\t\trAF(function() {\n\t\t\t\tif(self.wrapperStyle[durationProp] === '0.0001ms') {\n\t\t\t\t\tself.wrapperStyle[durationProp] = '0s';\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.wrapperStyle.opacity = '0';\n\t}\n}\n\nIndicator.prototype = {\n\thandleEvent: function (e) {\n\t\tswitch ( e.type ) {\n\t\t\tcase 'touchstart':\n\t\t\tcase 'pointerdown':\n\t\t\tcase 'MSPointerDown':\n\t\t\tcase 'mousedown':\n\t\t\t\tthis._start(e);\n\t\t\t\tbreak;\n\t\t\tcase 'touchmove':\n\t\t\tcase 'pointermove':\n\t\t\tcase 'MSPointerMove':\n\t\t\tcase 'mousemove':\n\t\t\t\tthis._move(e);\n\t\t\t\tbreak;\n\t\t\tcase 'touchend':\n\t\t\tcase 'pointerup':\n\t\t\tcase 'MSPointerUp':\n\t\t\tcase 'mouseup':\n\t\t\tcase 'touchcancel':\n\t\t\tcase 'pointercancel':\n\t\t\tcase 'MSPointerCancel':\n\t\t\tcase 'mousecancel':\n\t\t\t\tthis._end(e);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\n\tdestroy: function () {\n\t\tif ( this.options.fadeScrollbars ) {\n\t\t\tclearTimeout(this.fadeTimeout);\n\t\t\tthis.fadeTimeout = null;\n\t\t}\n\t\tif ( this.options.interactive ) {\n\t\t\tutils.removeEvent(this.indicator, 'touchstart', this);\n\t\t\tutils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\tutils.removeEvent(this.indicator, 'mousedown', this);\n\n\t\t\tutils.removeEvent(window, 'touchmove', this);\n\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\tutils.removeEvent(window, 'mousemove', this);\n\n\t\t\tutils.removeEvent(window, 'touchend', this);\n\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);\n\t\t\tutils.removeEvent(window, 'mouseup', this);\n\t\t}\n\n\t\tif ( this.options.defaultScrollbars ) {\n\t\t\tthis.wrapper.parentNode.removeChild(this.wrapper);\n\t\t}\n\t},\n\n\t_start: function (e) {\n\t\tvar point = e.touches ? e.touches[0] : e;\n\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tthis.transitionTime();\n\n\t\tthis.initiated = true;\n\t\tthis.moved = false;\n\t\tthis.lastPointX\t= point.pageX;\n\t\tthis.lastPointY\t= point.pageY;\n\n\t\tthis.startTime\t= utils.getTime();\n\n\t\tif ( !this.options.disableTouch ) {\n\t\t\tutils.addEvent(window, 'touchmove', this);\n\t\t}\n\t\tif ( !this.options.disablePointer ) {\n\t\t\tutils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t}\n\t\tif ( !this.options.disableMouse ) {\n\t\t\tutils.addEvent(window, 'mousemove', this);\n\t\t}\n\n\t\tthis.scroller._execEvent('beforeScrollStart');\n\t},\n\n\t_move: function (e) {\n\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\tdeltaX, deltaY,\n\t\t\tnewX, newY,\n\t\t\ttimestamp = utils.getTime();\n\n\t\tif ( !this.moved ) {\n\t\t\tthis.scroller._execEvent('scrollStart');\n\t\t}\n\n\t\tthis.moved = true;\n\n\t\tdeltaX = point.pageX - this.lastPointX;\n\t\tthis.lastPointX = point.pageX;\n\n\t\tdeltaY = point.pageY - this.lastPointY;\n\t\tthis.lastPointY = point.pageY;\n\n\t\tnewX = this.x + deltaX;\n\t\tnewY = this.y + deltaY;\n\n\t\tthis._pos(newX, newY);\n\n// INSERT POINT: indicator._move\n\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t},\n\n\t_end: function (e) {\n\t\tif ( !this.initiated ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initiated = false;\n\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tutils.removeEvent(window, 'touchmove', this);\n\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\tutils.removeEvent(window, 'mousemove', this);\n\n\t\tif ( this.scroller.options.snap ) {\n\t\t\tvar snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);\n\n\t\t\tvar time = this.options.snapSpeed || Math.max(\n\t\t\t\t\tMath.max(\n\t\t\t\t\t\tMath.min(Math.abs(this.scroller.x - snap.x), 1000),\n\t\t\t\t\t\tMath.min(Math.abs(this.scroller.y - snap.y), 1000)\n\t\t\t\t\t), 300);\n\n\t\t\tif ( this.scroller.x != snap.x || this.scroller.y != snap.y ) {\n\t\t\t\tthis.scroller.directionX = 0;\n\t\t\t\tthis.scroller.directionY = 0;\n\t\t\t\tthis.scroller.currentPage = snap;\n\t\t\t\tthis.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);\n\t\t\t}\n\t\t}\n\n\t\tif ( this.moved ) {\n\t\t\tthis.scroller._execEvent('scrollEnd');\n\t\t}\n\t},\n\n\ttransitionTime: function (time) {\n\t\ttime = time || 0;\n\t\tvar durationProp = utils.style.transitionDuration;\n\t\tthis.indicatorStyle[durationProp] = time + 'ms';\n\n\t\tif ( !time && utils.isBadAndroid ) {\n\t\t\tthis.indicatorStyle[durationProp] = '0.0001ms';\n\t\t\t// remove 0.0001ms\n\t\t\tvar self = this;\n\t\t\trAF(function() {\n\t\t\t\tif(self.indicatorStyle[durationProp] === '0.0001ms') {\n\t\t\t\t\tself.indicatorStyle[durationProp] = '0s';\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\ttransitionTimingFunction: function (easing) {\n\t\tthis.indicatorStyle[utils.style.transitionTimingFunction] = easing;\n\t},\n\n\trefresh: function () {\n\t\tthis.transitionTime();\n\n\t\tif ( this.options.listenX && !this.options.listenY ) {\n\t\t\tthis.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';\n\t\t} else if ( this.options.listenY && !this.options.listenX ) {\n\t\t\tthis.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';\n\t\t} else {\n\t\t\tthis.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';\n\t\t}\n\n\t\tif ( this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll ) {\n\t\t\tutils.addClass(this.wrapper, 'iScrollBothScrollbars');\n\t\t\tutils.removeClass(this.wrapper, 'iScrollLoneScrollbar');\n\n\t\t\tif ( this.options.defaultScrollbars && this.options.customStyle ) {\n\t\t\t\tif ( this.options.listenX ) {\n\t\t\t\t\tthis.wrapper.style.right = '8px';\n\t\t\t\t} else {\n\t\t\t\t\tthis.wrapper.style.bottom = '8px';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tutils.removeClass(this.wrapper, 'iScrollBothScrollbars');\n\t\t\tutils.addClass(this.wrapper, 'iScrollLoneScrollbar');\n\n\t\t\tif ( this.options.defaultScrollbars && this.options.customStyle ) {\n\t\t\t\tif ( this.options.listenX ) {\n\t\t\t\t\tthis.wrapper.style.right = '2px';\n\t\t\t\t} else {\n\t\t\t\t\tthis.wrapper.style.bottom = '2px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar r = this.wrapper.offsetHeight;\t// force refresh\n\n\t\tif ( this.options.listenX ) {\n\t\t\tthis.wrapperWidth = this.wrapper.clientWidth;\n\t\t\tif ( this.options.resize ) {\n\t\t\t\tthis.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);\n\t\t\t\tthis.indicatorStyle.width = this.indicatorWidth + 'px';\n\t\t\t} else {\n\t\t\t\tthis.indicatorWidth = this.indicator.clientWidth;\n\t\t\t}\n\n\t\t\tthis.maxPosX = this.wrapperWidth - this.indicatorWidth;\n\n\t\t\tif ( this.options.shrink == 'clip' ) {\n\t\t\t\tthis.minBoundaryX = -this.indicatorWidth + 8;\n\t\t\t\tthis.maxBoundaryX = this.wrapperWidth - 8;\n\t\t\t} else {\n\t\t\t\tthis.minBoundaryX = 0;\n\t\t\t\tthis.maxBoundaryX = this.maxPosX;\n\t\t\t}\n\n\t\t\tthis.sizeRatioX = this.options.speedRatioX || (this.scroller.maxScrollX && (this.maxPosX / this.scroller.maxScrollX));\n\t\t}\n\n\t\tif ( this.options.listenY ) {\n\t\t\tthis.wrapperHeight = this.wrapper.clientHeight;\n\t\t\tif ( this.options.resize ) {\n\t\t\t\tthis.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);\n\t\t\t\tthis.indicatorStyle.height = this.indicatorHeight + 'px';\n\t\t\t} else {\n\t\t\t\tthis.indicatorHeight = this.indicator.clientHeight;\n\t\t\t}\n\n\t\t\tthis.maxPosY = this.wrapperHeight - this.indicatorHeight;\n\n\t\t\tif ( this.options.shrink == 'clip' ) {\n\t\t\t\tthis.minBoundaryY = -this.indicatorHeight + 8;\n\t\t\t\tthis.maxBoundaryY = this.wrapperHeight - 8;\n\t\t\t} else {\n\t\t\t\tthis.minBoundaryY = 0;\n\t\t\t\tthis.maxBoundaryY = this.maxPosY;\n\t\t\t}\n\n\t\t\tthis.maxPosY = this.wrapperHeight - this.indicatorHeight;\n\t\t\tthis.sizeRatioY = this.options.speedRatioY || (this.scroller.maxScrollY && (this.maxPosY / this.scroller.maxScrollY));\n\t\t}\n\n\t\tthis.updatePosition();\n\t},\n\n\tupdatePosition: function () {\n\t\tvar x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,\n\t\t\ty = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;\n\n\t\tif ( !this.options.ignoreBoundaries ) {\n\t\t\tif ( x < this.minBoundaryX ) {\n\t\t\t\tif ( this.options.shrink == 'scale' ) {\n\t\t\t\t\tthis.width = Math.max(this.indicatorWidth + x, 8);\n\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t}\n\t\t\t\tx = this.minBoundaryX;\n\t\t\t} else if ( x > this.maxBoundaryX ) {\n\t\t\t\tif ( this.options.shrink == 'scale' ) {\n\t\t\t\t\tthis.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);\n\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t\tx = this.maxPosX + this.indicatorWidth - this.width;\n\t\t\t\t} else {\n\t\t\t\t\tx = this.maxBoundaryX;\n\t\t\t\t}\n\t\t\t} else if ( this.options.shrink == 'scale' && this.width != this.indicatorWidth ) {\n\t\t\t\tthis.width = this.indicatorWidth;\n\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t}\n\n\t\t\tif ( y < this.minBoundaryY ) {\n\t\t\t\tif ( this.options.shrink == 'scale' ) {\n\t\t\t\t\tthis.height = Math.max(this.indicatorHeight + y * 3, 8);\n\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t}\n\t\t\t\ty = this.minBoundaryY;\n\t\t\t} else if ( y > this.maxBoundaryY ) {\n\t\t\t\tif ( this.options.shrink == 'scale' ) {\n\t\t\t\t\tthis.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);\n\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t\ty = this.maxPosY + this.indicatorHeight - this.height;\n\t\t\t\t} else {\n\t\t\t\t\ty = this.maxBoundaryY;\n\t\t\t\t}\n\t\t\t} else if ( this.options.shrink == 'scale' && this.height != this.indicatorHeight ) {\n\t\t\t\tthis.height = this.indicatorHeight;\n\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t}\n\t\t}\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\tif ( this.scroller.options.useTransform ) {\n\t\t\tthis.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;\n\t\t} else {\n\t\t\tthis.indicatorStyle.left = x + 'px';\n\t\t\tthis.indicatorStyle.top = y + 'px';\n\t\t}\n\t},\n\n\t_pos: function (x, y) {\n\t\tif ( x < 0 ) {\n\t\t\tx = 0;\n\t\t} else if ( x > this.maxPosX ) {\n\t\t\tx = this.maxPosX;\n\t\t}\n\n\t\tif ( y < 0 ) {\n\t\t\ty = 0;\n\t\t} else if ( y > this.maxPosY ) {\n\t\t\ty = this.maxPosY;\n\t\t}\n\n\t\tx = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;\n\t\ty = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;\n\n\t\tthis.scroller.scrollTo(x, y);\n\t},\n\n\tfade: function (val, hold) {\n\t\tif ( hold && !this.visible ) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearTimeout(this.fadeTimeout);\n\t\tthis.fadeTimeout = null;\n\n\t\tvar time = val ? 250 : 500,\n\t\t\tdelay = val ? 0 : 300;\n\n\t\tval = val ? '1' : '0';\n\n\t\tthis.wrapperStyle[utils.style.transitionDuration] = time + 'ms';\n\n\t\tthis.fadeTimeout = setTimeout((function (val) {\n\t\t\tthis.wrapperStyle.opacity = val;\n\t\t\tthis.visible = +val;\n\t\t}).bind(this, val), delay);\n\t}\n};\n\nIScroll.utils = utils;\n\nif ( typeof module != 'undefined' && module.exports ) {\n\tmodule.exports = IScroll;\n} else if ( typeof define == 'function' && define.amd ) {\n        define( function () { return IScroll; } );\n} else {\n\twindow.IScroll = IScroll;\n}\n\n})(window, document, Math);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/iscroll/build/iscroll.js\n// module id = 52\n// module chunks = 2","// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n/*jshint browser:true, devel:true */\n\n(function( expose ) {\n\n/**\n *  class Markdown\n *\n *  Markdown processing in Javascript done right. We have very particular views\n *  on what constitutes 'right' which include:\n *\n *  - produces well-formed HTML (this means that em and strong nesting is\n *    important)\n *\n *  - has an intermediate representation to allow processing of parsed data (We\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n *\n *  - is easily extensible to add new dialects without having to rewrite the\n *    entire parsing mechanics\n *\n *  - has a good test suite\n *\n *  This implementation fulfills all of these (except that the test suite could\n *  do with expanding to automatically run all the fixtures from other Markdown\n *  implementations.)\n *\n *  ##### Intermediate Representation\n *\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n *\n *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n **/\nvar Markdown = expose.Markdown = function(dialect) {\n  switch (typeof dialect) {\n    case \"undefined\":\n      this.dialect = Markdown.dialects.Gruber;\n      break;\n    case \"object\":\n      this.dialect = dialect;\n      break;\n    default:\n      if ( dialect in Markdown.dialects ) {\n        this.dialect = Markdown.dialects[dialect];\n      }\n      else {\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n      }\n      break;\n  }\n  this.em_state = [];\n  this.strong_state = [];\n  this.debug_indent = \"\";\n};\n\n/**\n *  parse( markdown, [dialect] ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n **/\nexpose.parse = function( source, dialect ) {\n  // dialect will default if undefined\n  var md = new Markdown( dialect );\n  return md.toTree( source );\n};\n\n/**\n *  toHTML( markdown, [dialect]  ) -> String\n *  toHTML( md_tree ) -> String\n *  - markdown (String): markdown string to parse\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Take markdown (either as a string or as a JsonML tree) and run it through\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n **/\nexpose.toHTML = function toHTML( source , dialect , options ) {\n  var input = expose.toHTMLTree( source , dialect , options );\n\n  return expose.renderJsonML( input );\n};\n\n/**\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\n *  toHTMLTree( md_tree ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n *  to this function, it is first parsed into a markdown tree by calling\n *  [[parse]].\n **/\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n  // convert string input to an MD tree\n  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\n  // Now convert the MD tree to an HTML tree\n\n  // remove references from the tree\n  var attrs = extract_attr( input ),\n      refs = {};\n\n  if ( attrs && attrs.references ) {\n    refs = attrs.references;\n  }\n\n  var html = convert_tree_to_html( input, refs , options );\n  merge_text_nodes( html );\n  return html;\n};\n\n// For Spidermonkey based engines\nfunction mk_block_toSource() {\n  return \"Markdown.mk_block( \" +\n          uneval(this.toString()) +\n          \", \" +\n          uneval(this.trailing) +\n          \", \" +\n          uneval(this.lineNumber) +\n          \" )\";\n}\n\n// node\nfunction mk_block_inspect() {\n  var util = require(\"util\");\n  return \"Markdown.mk_block( \" +\n          util.inspect(this.toString()) +\n          \", \" +\n          util.inspect(this.trailing) +\n          \", \" +\n          util.inspect(this.lineNumber) +\n          \" )\";\n\n}\n\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\n  // Be helpful for default case in tests.\n  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\n  var s = new String(block);\n  s.trailing = trail;\n  // To make it clear its not just a string\n  s.inspect = mk_block_inspect;\n  s.toSource = mk_block_toSource;\n\n  if ( line != undefined )\n    s.lineNumber = line;\n\n  return s;\n};\n\nfunction count_lines( str ) {\n  var n = 0, i = -1;\n  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n  return n;\n}\n\n// Internal - split source into rough blocks\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n  // [\\s\\S] matches _anything_ (newline or space)\n  // [^] is equivalent but doesn't work in IEs.\n  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n      blocks = [],\n      m;\n\n  var line_no = 1;\n\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n    // skip (but count) leading blank lines\n    line_no += count_lines( m[0] );\n    re.lastIndex = m[0].length;\n  }\n\n  while ( ( m = re.exec(input) ) !== null ) {\n    if (m[2] == \"\\n#\") {\n      m[2] = \"\\n\";\n      re.lastIndex--;\n    }\n    blocks.push( mk_block( m[1], m[2], line_no ) );\n    line_no += count_lines( m[0] );\n  }\n\n  return blocks;\n};\n\n/**\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n *  - block (String): the block to process\n *  - next (Array): the following blocks\n *\n * Process `block` and return an array of JsonML nodes representing `block`.\n *\n * It does this by asking each block level function in the dialect to process\n * the block until one can. Succesful handling is indicated by returning an\n * array (with zero or more JsonML nodes), failure by a false value.\n *\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\n * themselves as appropriate.\n *\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\n * can adjust `next` in place using shift/splice etc.\n *\n * If any of this default behaviour is not right for the dialect, you can\n * define a `__call__` method on the dialect that will get invoked to handle\n * the block processing.\n */\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\n  var cbs = this.dialect.block,\n      ord = cbs.__order__;\n\n  if ( \"__call__\" in cbs ) {\n    return cbs.__call__.call(this, block, next);\n  }\n\n  for ( var i = 0; i < ord.length; i++ ) {\n    //D:this.debug( \"Testing\", ord[i] );\n    var res = cbs[ ord[i] ].call( this, block, next );\n    if ( res ) {\n      //D:this.debug(\"  matched\");\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n        this.debug(ord[i], \"didn't return a proper array\");\n      //D:this.debug( \"\" );\n      return res;\n    }\n  }\n\n  // Uhoh! no match! Should we throw an error?\n  return [];\n};\n\nMarkdown.prototype.processInline = function processInline( block ) {\n  return this.dialect.inline.__call__.call( this, String( block ) );\n};\n\n/**\n *  Markdown#toTree( source ) -> JsonML\n *  - source (String): markdown source to parse\n *\n *  Parse `source` into a JsonML tree representing the markdown document.\n **/\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\n  // Make tree a member variable so its easier to mess with in extensions\n  var old_tree = this.tree;\n  try {\n    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\n    blocks:\n    while ( blocks.length ) {\n      var b = this.processBlock( blocks.shift(), blocks );\n\n      // Reference blocks and the like won't return any content\n      if ( !b.length ) continue blocks;\n\n      this.tree.push.apply( this.tree, b );\n    }\n    return this.tree;\n  }\n  finally {\n    if ( custom_root ) {\n      this.tree = old_tree;\n    }\n  }\n};\n\n// Noop by default\nMarkdown.prototype.debug = function () {\n  var args = Array.prototype.slice.call( arguments);\n  args.unshift(this.debug_indent);\n  if ( typeof print !== \"undefined\" )\n      print.apply( print, args );\n  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n      console.log.apply( null, args );\n}\n\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n  // Dont use /g regexps with this\n  var m,\n      b = block.valueOf();\n\n  while ( b.length && (m = re.exec(b) ) != null ) {\n    b = b.substr( m[0].length );\n    cb.call(this, m);\n  }\n  return b;\n};\n\n/**\n * Markdown.dialects\n *\n * Namespace of built-in dialects.\n **/\nMarkdown.dialects = {};\n\n/**\n * Markdown.dialects.Gruber\n *\n * The default dialect that follows the rules set out by John Gruber's\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\n * that script which in some places is not exactly what the syntax web page\n * says.\n **/\nMarkdown.dialects.Gruber = {\n  block: {\n    atxHeader: function atxHeader( block, next ) {\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var header = [ \"header\", { level: m[ 1 ].length } ];\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    setextHeader: function setextHeader( block, next ) {\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    code: function code( block, next ) {\n      // |    Foo\n      // |bar\n      // should be a code block followed by a paragraph. Fun\n      //\n      // There might also be adjacent code block to merge.\n\n      var ret = [],\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n          lines;\n\n      // 4 spaces + content\n      if ( !block.match( re ) ) return undefined;\n\n      block_search:\n      do {\n        // Now pull out the rest of the lines\n        var b = this.loop_re_over_block(\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\n        if ( b.length ) {\n          // Case alluded to in first comment. push it back on as a new block\n          next.unshift( mk_block(b, block.trailing) );\n          break block_search;\n        }\n        else if ( next.length ) {\n          // Check the next block - it might be code too\n          if ( !next[0].match( re ) ) break block_search;\n\n          // Pull how how many blanks lines follow - minus two to account for .join\n          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\n          block = next.shift();\n        }\n        else {\n          break block_search;\n        }\n      } while ( true );\n\n      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n    },\n\n    horizRule: function horizRule( block, next ) {\n      // this needs to find any hr in the block to handle abutting blocks\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\n      if ( !m ) {\n        return undefined;\n      }\n\n      var jsonml = [ [ \"hr\" ] ];\n\n      // if there's a leading abutting block, process it\n      if ( m[ 1 ] ) {\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n      }\n\n      // if there's a trailing abutting block, stick it into next\n      if ( m[ 3 ] ) {\n        next.unshift( mk_block( m[ 3 ] ) );\n      }\n\n      return jsonml;\n    },\n\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n    // between the items (and result in text just in the <li>) and loose lists,\n    // which have an empty line between list items, resulting in (one or more)\n    // paragraphs inside the <li>.\n    //\n    // There are all sorts weird edge cases about the original markdown.pl's\n    // handling of lists:\n    //\n    // * Nested lists are supposed to be indented by four chars per level. But\n    //   if they aren't, you can get a nested list by indenting by less than\n    //   four so long as the indent doesn't match an indent of an existing list\n    //   item in the 'nest stack'.\n    //\n    // * The type of the list (bullet or number) is controlled just by the\n    //    first item at the indent. Subsequent changes are ignored unless they\n    //    are for nested lists\n    //\n    lists: (function( ) {\n      // Use a closure to hide a few variables.\n      var any_list = \"[*+-]|\\\\d+\\\\.\",\n          bullet_list = /[*+-]/,\n          number_list = /\\d+\\./,\n          // Capture leading indent as it matters for determining nested lists.\n          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\n      // TODO: Cache this regexp for certain depths.\n      // Create a regexp suitable for matching an li for a given stack depth\n      function regex_for_depth( depth ) {\n\n        return new RegExp(\n          // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n          // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n        );\n      }\n      function expand_tab( input ) {\n        return input.replace( / {0,3}\\t/g, \"    \" );\n      }\n\n      // Add inline content `inline` to `li`. inline comes from processInline\n      // so is an array of content\n      function add(li, loose, inline, nl) {\n        if ( loose ) {\n          li.push( [ \"para\" ].concat(inline) );\n          return;\n        }\n        // Hmmm, should this be any block level element or just paras?\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n                   ? li[li.length -1]\n                   : li;\n\n        // If there is already some content in this list, add the new line in\n        if ( nl && li.length > 1 ) inline.unshift(nl);\n\n        for ( var i = 0; i < inline.length; i++ ) {\n          var what = inline[i],\n              is_str = typeof what == \"string\";\n          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n            add_to[ add_to.length-1 ] += what;\n          }\n          else {\n            add_to.push( what );\n          }\n        }\n      }\n\n      // contained means have an indent greater than the current one. On\n      // *every* line in the block\n      function get_contained_blocks( depth, blocks ) {\n\n        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n            ret = [];\n\n        while ( blocks.length > 0 ) {\n          if ( re.exec( blocks[0] ) ) {\n            var b = blocks.shift(),\n                // Now remove that indent\n                x = b.replace( replace, \"\");\n\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n          }\n          else {\n            break;\n          }\n        }\n        return ret;\n      }\n\n      // passed to stack.forEach to turn list items up the stack into paras\n      function paragraphify(s, i, stack) {\n        var list = s.list;\n        var last_li = list[list.length-1];\n\n        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n          return;\n        }\n        if ( i + 1 == stack.length ) {\n          // Last stack frame\n          // Keep the same array, but replace the contents\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n        }\n        else {\n          var sublist = last_li.pop();\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n        }\n      }\n\n      // The matcher function\n      return function( block, next ) {\n        var m = block.match( is_list_re );\n        if ( !m ) return undefined;\n\n        function make_list( m ) {\n          var list = bullet_list.exec( m[2] )\n                   ? [\"bulletlist\"]\n                   : [\"numberlist\"];\n\n          stack.push( { list: list, indent: m[1] } );\n          return list;\n        }\n\n\n        var stack = [], // Stack of lists for nesting.\n            list = make_list( m ),\n            last_li,\n            loose = false,\n            ret = [ stack[0].list ],\n            i;\n\n        // Loop to search over block looking for inner block elements and loose lists\n        loose_search:\n        while ( true ) {\n          // Split into lines preserving new lines at end of line\n          var lines = block.split( /(?=\\n)/ );\n\n          // We have to grab all lines for a li and call processInline on them\n          // once as there are some inline things that can span lines.\n          var li_accumulate = \"\";\n\n          // Loop over the lines in this block looking for tight lists.\n          tight_search:\n          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n            var nl = \"\",\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\n            // TODO: really should cache this\n            var line_re = regex_for_depth( stack.length );\n\n            m = l.match( line_re );\n            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\n            // We have a list item\n            if ( m[1] !== undefined ) {\n              // Process the previous list item, if any\n              if ( li_accumulate.length ) {\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\n                // Loose mode will have been dealt with. Reset it\n                loose = false;\n                li_accumulate = \"\";\n              }\n\n              m[1] = expand_tab( m[1] );\n              var wanted_depth = Math.floor(m[1].length/4)+1;\n              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n              if ( wanted_depth > stack.length ) {\n                // Deep enough for a nested list outright\n                //print ( \"new nested list\" );\n                list = make_list( m );\n                last_li.push( list );\n                last_li = list[1] = [ \"listitem\" ];\n              }\n              else {\n                // We aren't deep enough to be strictly a new level. This is\n                // where Md.pl goes nuts. If the indent matches a level in the\n                // stack, put it there, else put it one deeper then the\n                // wanted_depth deserves.\n                var found = false;\n                for ( i = 0; i < stack.length; i++ ) {\n                  if ( stack[ i ].indent != m[1] ) continue;\n                  list = stack[ i ].list;\n                  stack.splice( i+1, stack.length - (i+1) );\n                  found = true;\n                  break;\n                }\n\n                if (!found) {\n                  //print(\"not found. l:\", uneval(l));\n                  wanted_depth++;\n                  if ( wanted_depth <= stack.length ) {\n                    stack.splice(wanted_depth, stack.length - wanted_depth);\n                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n                    list = stack[wanted_depth-1].list;\n                    //print(\"list:\", uneval(list) );\n                  }\n                  else {\n                    //print (\"made new stack for messy indent\");\n                    list = make_list(m);\n                    last_li.push(list);\n                  }\n                }\n\n                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n                last_li = [ \"listitem\" ];\n                list.push(last_li);\n              } // end depth of shenegains\n              nl = \"\";\n            }\n\n            // Add content\n            if ( l.length > m[0].length ) {\n              li_accumulate += nl + l.substr( m[0].length );\n            }\n          } // tight_search\n\n          if ( li_accumulate.length ) {\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\n            // Loose mode will have been dealt with. Reset it\n            loose = false;\n            li_accumulate = \"\";\n          }\n\n          // Look at the next block - we might have a loose list. Or an extra\n          // paragraph for the current li\n          var contained = get_contained_blocks( stack.length, next );\n\n          // Deal with code blocks or properly nested lists\n          if ( contained.length > 0 ) {\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n          }\n\n          var next_block = next[0] && next[0].valueOf() || \"\";\n\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n            block = next.shift();\n\n            // Check for an HR following a list: features/lists/hr_abutting\n            var hr = this.dialect.block.horizRule( block, next );\n\n            if ( hr ) {\n              ret.push.apply(ret, hr);\n              break;\n            }\n\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            loose = true;\n            continue loose_search;\n          }\n          break;\n        } // loose_search\n\n        return ret;\n      };\n    })(),\n\n    blockquote: function blockquote( block, next ) {\n      if ( !block.match( /^>/m ) )\n        return undefined;\n\n      var jsonml = [];\n\n      // separate out the leading abutting block, if any. I.e. in this case:\n      //\n      //  a\n      //  > b\n      //\n      if ( block[ 0 ] != \">\" ) {\n        var lines = block.split( /\\n/ ),\n            prev = [],\n            line_no = block.lineNumber;\n\n        // keep shifting lines until you find a crotchet\n        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n            prev.push( lines.shift() );\n            line_no++;\n        }\n\n        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n        // reassemble new block of just block quotes!\n        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n      }\n\n\n      // if the next block is also a blockquote merge it in\n      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n        var b = next.shift();\n        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n      }\n\n      // Strip off the leading \"> \" and re-process as a block.\n      var input = block.replace( /^> ?/gm, \"\" ),\n          old_tree = this.tree,\n          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n          attr = extract_attr( processedBlock );\n\n      // If any link references were found get rid of them\n      if ( attr && attr.references ) {\n        delete attr.references;\n        // And then remove the attribute object if it's empty\n        if ( isEmpty( attr ) ) {\n          processedBlock.splice( 1, 1 );\n        }\n      }\n\n      jsonml.push( processedBlock );\n      return jsonml;\n    },\n\n    referenceDefn: function referenceDefn( block, next) {\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n      // interesting matches are [ , ref_id, url, , title, title ]\n\n      if ( !block.match(re) )\n        return undefined;\n\n      // make an attribute node if it doesn't exist\n      if ( !extract_attr( this.tree ) ) {\n        this.tree.splice( 1, 0, {} );\n      }\n\n      var attrs = extract_attr( this.tree );\n\n      // make a references hash if it doesn't exist\n      if ( attrs.references === undefined ) {\n        attrs.references = {};\n      }\n\n      var b = this.loop_re_over_block(re, block, function( m ) {\n\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\n          href: m[2]\n        };\n\n        if ( m[4] !== undefined )\n          ref.title = m[4];\n        else if ( m[5] !== undefined )\n          ref.title = m[5];\n\n      } );\n\n      if ( b.length )\n        next.unshift( mk_block( b, block.trailing ) );\n\n      return [];\n    },\n\n    para: function para( block, next ) {\n      // everything's a para!\n      return [ [\"para\"].concat( this.processInline( block ) ) ];\n    }\n  }\n};\n\nMarkdown.dialects.Gruber.inline = {\n\n    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n      var m,\n          res,\n          lastIndex = 0;\n\n      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\n      m = re.exec( text );\n      if (!m) {\n        // Just boring text\n        return [ text.length, text ];\n      }\n      else if ( m[1] ) {\n        // Some un-interesting text matched. Return that first\n        return [ m[1].length, m[1] ];\n      }\n\n      var res;\n      if ( m[2] in this.dialect.inline ) {\n        res = this.dialect.inline[ m[2] ].call(\n                  this,\n                  text.substr( m.index ), m, previous_nodes || [] );\n      }\n      // Default for now to make dev easier. just slurp special and output it.\n      res = res || [ m[2].length, m[2] ];\n      return res;\n    },\n\n    __call__: function inline( text, patterns ) {\n\n      var out = [],\n          res;\n\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n          out[ out.length-1 ] += x;\n        else\n          out.push(x);\n      }\n\n      while ( text.length > 0 ) {\n        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n        text = text.substr( res.shift() );\n        forEach(res, add )\n      }\n\n      return out;\n    },\n\n    // These characters are intersting elsewhere, so have rules for them so that\n    // chunks of plain text blocks don't include them\n    \"]\": function () {},\n    \"}\": function () {},\n\n    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\n    \"\\\\\": function escaped( text ) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if ( this.dialect.inline.__escape__.exec( text ) )\n        return [ 2, text.charAt( 1 ) ];\n      else\n        // Not an esacpe\n        return [ 1, \"\\\\\" ];\n    },\n\n    \"![\": function image( text ) {\n\n      // Unlike images, alt text is plain text only. no other elements are\n      // allowed in there\n\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { alt: m[1], href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        return [ m[0].length, [ \"img\", attrs ] ];\n      }\n\n      // ![Alt text][id]\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\n      if ( m ) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n      }\n\n      // Just consume the '!['\n      return [ 2, \"![\" ];\n    },\n\n    \"[\": function link( text ) {\n\n      var orig = String(text);\n      // Inline content is possible inside `link text`\n      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\n      // No closing ']' found. Just consume the [\n      if ( !res ) return [ 1, \"[\" ];\n\n      var consumed = 1 + res[ 0 ],\n          children = res[ 1 ],\n          link,\n          attrs;\n\n      // At this point the first [...] has been parsed. See what follows to find\n      // out which kind of link we are (reference or direct url)\n      text = text.substr( consumed );\n\n      // [link text](/path/to/img.jpg \"Optional title\")\n      //                 1            2       3         <--- captures\n      // This will capture up to the last paren in the block. We then pull\n      // back based on if there a matching ones in the url\n      //    ([here](/url/(test))\n      // The parens have to be balanced\n      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n      if ( m ) {\n        var url = m[1];\n        consumed += m[0].length;\n\n        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n          url = url.substring( 1, url.length - 1 );\n\n        // If there is a title we don't have to worry about parens in the url\n        if ( !m[3] ) {\n          var open_parens = 1; // One open that isn't in the capture\n          for ( var len = 0; len < url.length; len++ ) {\n            switch ( url[len] ) {\n            case \"(\":\n              open_parens++;\n              break;\n            case \")\":\n              if ( --open_parens == 0) {\n                consumed -= url.length - len;\n                url = url.substring(0, len);\n              }\n              break;\n            }\n          }\n        }\n\n        // Process escapes only\n        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\n        attrs = { href: url || \"\" };\n        if ( m[3] !== undefined)\n          attrs.title = m[3];\n\n        link = [ \"link\", attrs ].concat( children );\n        return [ consumed, link ];\n      }\n\n      // [Alt text][id]\n      // [Alt text] [id]\n      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\n      if ( m ) {\n\n        consumed += m[ 0 ].length;\n\n        // [links][] uses links as its reference\n        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\n        link = [ \"link_ref\", attrs ].concat( children );\n\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n        return [ consumed, link ];\n      }\n\n      // [id]\n      // Only if id is plain (no formatting.)\n      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\n        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n        link = [ \"link_ref\", attrs, children[0] ];\n        return [ consumed, link ];\n      }\n\n      // Just consume the \"[\"\n      return [ 1, \"[\" ];\n    },\n\n\n    \"<\": function autoLink( text ) {\n      var m;\n\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n        if ( m[3] ) {\n          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\n        }\n        else if ( m[2] == \"mailto\" ) {\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n        }\n        else\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n      }\n\n      return [ 1, \"<\" ];\n    },\n\n    \"`\": function inlineCode( text ) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\n      if ( m && m[2] )\n        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n      else {\n        // TODO: No matching end code found - warn!\n        return [ 1, \"`\" ];\n      }\n    },\n\n    \"  \\n\": function lineBreak( text ) {\n      return [ 3, [ \"linebreak\" ] ];\n    }\n\n};\n\n// Meta Helper/generator method for em and strong handling\nfunction strong_em( tag, md ) {\n\n  var state_slot = tag + \"_state\",\n      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n  function CloseTag(len) {\n    this.len_after = len;\n    this.name = \"close_\" + md;\n  }\n\n  return function ( text, orig_match ) {\n\n    if ( this[state_slot][0] == md ) {\n      // Most recent em is of this type\n      //D:this.debug(\"closing\", md);\n      this[state_slot].shift();\n\n      // \"Consume\" everything to go back to the recrusion in the else-block below\n      return[ text.length, new CloseTag(text.length-md.length) ];\n    }\n    else {\n      // Store a clone of the em/strong states\n      var other = this[other_slot].slice(),\n          state = this[state_slot].slice();\n\n      this[state_slot].unshift(md);\n\n      //D:this.debug_indent += \"  \";\n\n      // Recurse\n      var res = this.processInline( text.substr( md.length ) );\n      //D:this.debug_indent = this.debug_indent.substr(2);\n\n      var last = res[res.length - 1];\n\n      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n      var check = this[state_slot].shift();\n      if ( last instanceof CloseTag ) {\n        res.pop();\n        // We matched! Huzzah.\n        var consumed = text.length - last.len_after;\n        return [ consumed, [ tag ].concat(res) ];\n      }\n      else {\n        // Restore the state of the other kind. We might have mistakenly closed it.\n        this[other_slot] = other;\n        this[state_slot] = state;\n\n        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n        return [ md.length, md ];\n      }\n    }\n  }; // End returned function\n}\n\nMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\nMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\nMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\nMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\n\n// Build default order from insertion order.\nMarkdown.buildBlockOrder = function(d) {\n  var ord = [];\n  for ( var i in d ) {\n    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n    ord.push( i );\n  }\n  d.__order__ = ord;\n};\n\n// Build patterns for inline matcher\nMarkdown.buildInlinePatterns = function(d) {\n  var patterns = [];\n\n  for ( var i in d ) {\n    // __foo__ is reserved and not a pattern\n    if ( i.match( /^__.*__$/) ) continue;\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n             .replace( /\\n/, \"\\\\n\" );\n    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n  }\n\n  patterns = patterns.join(\"|\");\n  d.__patterns__ = patterns;\n  //print(\"patterns:\", uneval( patterns ) );\n\n  var fn = d.__call__;\n  d.__call__ = function(text, pattern) {\n    if ( pattern != undefined ) {\n      return fn.call(this, text, pattern);\n    }\n    else\n    {\n      return fn.call(this, text, patterns);\n    }\n  };\n};\n\nMarkdown.DialectHelpers = {};\nMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n  var consumed = 0,\n      nodes = [];\n\n  while ( true ) {\n    if ( text.charAt( consumed ) == want ) {\n      // Found the character we were looking for\n      consumed++;\n      return [ consumed, nodes ];\n    }\n\n    if ( consumed >= text.length ) {\n      // No closing char found. Abort.\n      return null;\n    }\n\n    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n    consumed += res[ 0 ];\n    // Add any returned nodes.\n    nodes.push.apply( nodes, res.slice( 1 ) );\n  }\n}\n\n// Helper function to make sub-classing a dialect easier\nMarkdown.subclassDialect = function( d ) {\n  function Block() {}\n  Block.prototype = d.block;\n  function Inline() {}\n  Inline.prototype = d.inline;\n\n  return { block: new Block(), inline: new Inline() };\n};\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\nMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n  var meta = split_meta_hash( meta_string ),\n      attr = {};\n\n  for ( var i = 0; i < meta.length; ++i ) {\n    // id: #foo\n    if ( /^#/.test( meta[ i ] ) ) {\n      attr.id = meta[ i ].substring( 1 );\n    }\n    // class: .foo\n    else if ( /^\\./.test( meta[ i ] ) ) {\n      // if class already exists, append the new one\n      if ( attr[\"class\"] ) {\n        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n      }\n      else {\n        attr[\"class\"] = meta[ i ].substring( 1 );\n      }\n    }\n    // attribute: foo=bar\n    else if ( /\\=/.test( meta[ i ] ) ) {\n      var s = meta[ i ].split( /\\=/ );\n      attr[ s[ 0 ] ] = s[ 1 ];\n    }\n  }\n\n  return attr;\n}\n\nfunction split_meta_hash( meta_string ) {\n  var meta = meta_string.split( \"\" ),\n      parts = [ \"\" ],\n      in_quotes = false;\n\n  while ( meta.length ) {\n    var letter = meta.shift();\n    switch ( letter ) {\n      case \" \" :\n        // if we're in a quoted section, keep it\n        if ( in_quotes ) {\n          parts[ parts.length - 1 ] += letter;\n        }\n        // otherwise make a new part\n        else {\n          parts.push( \"\" );\n        }\n        break;\n      case \"'\" :\n      case '\"' :\n        // reverse the quotes and move straight on\n        in_quotes = !in_quotes;\n        break;\n      case \"\\\\\" :\n        // shift off the next letter to be used straight away.\n        // it was escaped so we'll keep it whatever it is\n        letter = meta.shift();\n      default :\n        parts[ parts.length - 1 ] += letter;\n        break;\n    }\n  }\n\n  return parts;\n}\n\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n  // we're only interested in the first block\n  if ( block.lineNumber > 1 ) return undefined;\n\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\n  // make an attribute node if it doesn't exist\n  if ( !extract_attr( this.tree ) ) {\n    this.tree.splice( 1, 0, {} );\n  }\n\n  var pairs = block.split( /\\n/ );\n  for ( p in pairs ) {\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n        key = m[ 1 ].toLowerCase(),\n        value = m[ 2 ];\n\n    this.tree[ 1 ][ key ] = value;\n  }\n\n  // document_meta produces no content!\n  return [];\n};\n\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n  // check if the last line of the block is an meta hash\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n  if ( !m ) return undefined;\n\n  // process the meta hash\n  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\n  var hash;\n\n  // if we matched ^ then we need to apply meta to the previous block\n  if ( m[ 1 ] === \"\" ) {\n    var node = this.tree[ this.tree.length - 1 ];\n    hash = extract_attr( node );\n\n    // if the node is a string (rather than JsonML), bail\n    if ( typeof node === \"string\" ) return undefined;\n\n    // create the attribute hash if it doesn't exist\n    if ( !hash ) {\n      hash = {};\n      node.splice( 1, 0, hash );\n    }\n\n    // add the attributes in\n    for ( a in attr ) {\n      hash[ a ] = attr[ a ];\n    }\n\n    // return nothing so the meta hash is removed\n    return [];\n  }\n\n  // pull the meta hash off the block and process what's left\n  var b = block.replace( /\\n.*$/, \"\" ),\n      result = this.processBlock( b, [] );\n\n  // get or make the attributes hash\n  hash = extract_attr( result[ 0 ] );\n  if ( !hash ) {\n    hash = {};\n    result[ 0 ].splice( 1, 0, hash );\n  }\n\n  // attach the attributes to the block\n  for ( a in attr ) {\n    hash[ a ] = attr[ a ];\n  }\n\n  return result;\n};\n\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n  // one or more terms followed by one or more definitions, in a single block\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n      list = [ \"dl\" ],\n      i, m;\n\n  // see if we're dealing with a tight or loose block\n  if ( ( m = block.match( tight ) ) ) {\n    // pull subsequent tight DL blocks out of `next`\n    var blocks = [ block ];\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\n      blocks.push( next.shift() );\n    }\n\n    for ( var b = 0; b < blocks.length; ++b ) {\n      var m = blocks[ b ].match( tight ),\n          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n          defns = m[ 2 ].split( /\\n:\\s+/ );\n\n      // print( uneval( m ) );\n\n      for ( i = 0; i < terms.length; ++i ) {\n        list.push( [ \"dt\", terms[ i ] ] );\n      }\n\n      for ( i = 0; i < defns.length; ++i ) {\n        // run inline processing over the definition\n        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n      }\n    }\n  }\n  else {\n    return undefined;\n  }\n\n  return [ list ];\n};\n\n// splits on unescaped instances of @ch. If @ch is not a character the result\n// can be unpredictable\n\nMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\n    var _split_on_unescaped = function(s, ch) {\n        ch = ch || '\\\\s';\n        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n        var res = [ ],\n            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n            m;\n        while(m = s.match(r)) {\n            res.push(m[1]);\n            s = m[2];\n        }\n        res.push(s);\n        return res;\n    }\n\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        // find at least an unescaped pipe in each line\n        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        i, m;\n    if (m = block.match(leading_pipe)) {\n        // remove leading pipes in contents\n        // (header and horizontal rule already have the leading pipe left out)\n        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n    } else if (! ( m = block.match(no_leading_pipe))) {\n        return undefined;\n    }\n\n    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\n    // remove trailing pipes, then split on pipes\n    // (no escaped pipes are allowed in horizontal rule)\n    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\n    // process alignment\n    var html_attrs = [ ];\n    forEach (m[2], function (s) {\n        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n        else                              html_attrs.push({});\n    });\n\n    // now for the header, avoid escaped pipes\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n    for (i = 0; i < m[1].length; i++) {\n        table[1][1].push(['th', html_attrs[i] || {}].concat(\n            this.processInline(m[1][i].trim())));\n    }\n\n    // now for body contents\n    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n        var html_row = ['tr'];\n        row = _split_on_unescaped(row, '|');\n        for (i = 0; i < row.length; i++) {\n            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n        }\n        table[2].push(html_row);\n    }, this);\n\n    return [table];\n}\n\nMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n  if ( !out.length ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // get the preceeding element\n  var before = out[ out.length - 1 ];\n\n  if ( typeof before === \"string\" ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // match a meta hash\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\n  // no match, false alarm\n  if ( !m ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // attach the attributes to the preceeding element\n  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n      attr = extract_attr( before );\n\n  if ( !attr ) {\n    attr = {};\n    before.splice( 1, 0, attr );\n  }\n\n  for ( var k in meta ) {\n    attr[ k ] = meta[ k ];\n  }\n\n  // cut out the string and replace it with nothing\n  return [ m[ 0 ].length, \"\" ];\n};\n\nMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\nvar isArray = Array.isArray || function(obj) {\n  return Object.prototype.toString.call(obj) == \"[object Array]\";\n};\n\nvar forEach;\n// Don't mess with Array.prototype. Its not friendly\nif ( Array.prototype.forEach ) {\n  forEach = function( arr, cb, thisp ) {\n    return arr.forEach( cb, thisp );\n  };\n}\nelse {\n  forEach = function(arr, cb, thisp) {\n    for (var i = 0; i < arr.length; i++) {\n      cb.call(thisp || arr, arr[i], i, arr);\n    }\n  }\n}\n\nvar isEmpty = function( obj ) {\n  for ( var key in obj ) {\n    if ( hasOwnProperty.call( obj, key ) ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction extract_attr( jsonml ) {\n  return isArray(jsonml)\n      && jsonml.length > 1\n      && typeof jsonml[ 1 ] === \"object\"\n      && !( isArray(jsonml[ 1 ]) )\n      ? jsonml[ 1 ]\n      : undefined;\n}\n\n\n\n/**\n *  renderJsonML( jsonml[, options] ) -> String\n *  - jsonml (Array): JsonML array to render to XML\n *  - options (Object): options\n *\n *  Converts the given JsonML into well-formed XML.\n *\n *  The options currently understood are:\n *\n *  - root (Boolean): wether or not the root node should be included in the\n *    output, or just its children. The default `false` is to not include the\n *    root itself.\n */\nexpose.renderJsonML = function( jsonml, options ) {\n  options = options || {};\n  // include the root element in the rendered output?\n  options.root = options.root || false;\n\n  var content = [];\n\n  if ( options.root ) {\n    content.push( render_tree( jsonml ) );\n  }\n  else {\n    jsonml.shift(); // get rid of the tag\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n      jsonml.shift(); // get rid of the attributes\n    }\n\n    while ( jsonml.length ) {\n      content.push( render_tree( jsonml.shift() ) );\n    }\n  }\n\n  return content.join( \"\\n\\n\" );\n};\n\nfunction escapeHTML( text ) {\n  return text.replace( /&/g, \"&amp;\" )\n             .replace( /</g, \"&lt;\" )\n             .replace( />/g, \"&gt;\" )\n             .replace( /\"/g, \"&quot;\" )\n             .replace( /'/g, \"&#39;\" );\n}\n\nfunction render_tree( jsonml ) {\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return escapeHTML( jsonml );\n  }\n\n  var tag = jsonml.shift(),\n      attributes = {},\n      content = [];\n\n  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( render_tree( jsonml.shift() ) );\n  }\n\n  var tag_attrs = \"\";\n  for ( var a in attributes ) {\n    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n    return \"<\"+ tag + tag_attrs + \"/>\";\n  }\n  else {\n    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n  }\n}\n\nfunction convert_tree_to_html( tree, references, options ) {\n  var i;\n  options = options || {};\n\n  // shallow clone\n  var jsonml = tree.slice( 0 );\n\n  if ( typeof options.preprocessTreeNode === \"function\" ) {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n  }\n\n  // Clone attributes if they exist\n  var attrs = extract_attr( jsonml );\n  if ( attrs ) {\n    jsonml[ 1 ] = {};\n    for ( i in attrs ) {\n      jsonml[ 1 ][ i ] = attrs[ i ];\n    }\n    attrs = jsonml[ 1 ];\n  }\n\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return jsonml;\n  }\n\n  // convert this node\n  switch ( jsonml[ 0 ] ) {\n    case \"header\":\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n      delete jsonml[ 1 ].level;\n      break;\n    case \"bulletlist\":\n      jsonml[ 0 ] = \"ul\";\n      break;\n    case \"numberlist\":\n      jsonml[ 0 ] = \"ol\";\n      break;\n    case \"listitem\":\n      jsonml[ 0 ] = \"li\";\n      break;\n    case \"para\":\n      jsonml[ 0 ] = \"p\";\n      break;\n    case \"markdown\":\n      jsonml[ 0 ] = \"html\";\n      if ( attrs ) delete attrs.references;\n      break;\n    case \"code_block\":\n      jsonml[ 0 ] = \"pre\";\n      i = attrs ? 2 : 1;\n      var code = [ \"code\" ];\n      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n      jsonml[ i ] = code;\n      break;\n    case \"inlinecode\":\n      jsonml[ 0 ] = \"code\";\n      break;\n    case \"img\":\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\n      delete jsonml[ 1 ].href;\n      break;\n    case \"linebreak\":\n      jsonml[ 0 ] = \"br\";\n    break;\n    case \"link\":\n      jsonml[ 0 ] = \"a\";\n      break;\n    case \"link_ref\":\n      jsonml[ 0 ] = \"a\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.href = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n    case \"img_ref\":\n      jsonml[ 0 ] = \"img\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.src = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n  }\n\n  // convert all the children\n  i = 1;\n\n  // deal with the attribute node, if it exists\n  if ( attrs ) {\n    // if there are keys, skip over it\n    for ( var key in jsonml[ 1 ] ) {\n        i = 2;\n        break;\n    }\n    // if there aren't, remove it\n    if ( i === 1 ) {\n      jsonml.splice( i, 1 );\n    }\n  }\n\n  for ( ; i < jsonml.length; ++i ) {\n    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n  }\n\n  return jsonml;\n}\n\n\n// merges adjacent text nodes into a single node\nfunction merge_text_nodes( jsonml ) {\n  // skip the tag name and attribute hash\n  var i = extract_attr( jsonml ) ? 2 : 1;\n\n  while ( i < jsonml.length ) {\n    // if it's a string check the next item too\n    if ( typeof jsonml[ i ] === \"string\" ) {\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n        // merge the second string into the first and remove it\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n      }\n      else {\n        ++i;\n      }\n    }\n    // if it's not a string recurse\n    else {\n      merge_text_nodes( jsonml[ i ] );\n      ++i;\n    }\n  }\n}\n\n} )( (function() {\n  if ( typeof exports === \"undefined\" ) {\n    window.markdown = {};\n    return window.markdown;\n  }\n  else {\n    return exports;\n  }\n} )() );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/markdown/lib/markdown.js\n// module id = 53\n// module chunks = 2","/* -----------------------------------------------\n/* Author : Vincent Garreau  - vincentgarreau.com\n/* MIT license: http://opensource.org/licenses/MIT\n/* Demo / Generator : vincentgarreau.com/particles.js\n/* GitHub : github.com/VincentGarreau/particles.js\n/* How to use? : Check the GitHub README\n/* v2.0.0\n/* ----------------------------------------------- */\n\nvar pJS = function(tag_id, params){\n\n  var canvas_el = document.querySelector('#'+tag_id+' > .particles-js-canvas-el');\n\n  /* particles.js variables with default values */\n  this.pJS = {\n    canvas: {\n      el: canvas_el,\n      w: canvas_el.offsetWidth,\n      h: canvas_el.offsetHeight\n    },\n    particles: {\n      number: {\n        value: 400,\n        density: {\n          enable: true,\n          value_area: 800\n        }\n      },\n      color: {\n        value: '#fff'\n      },\n      shape: {\n        type: 'circle',\n        stroke: {\n          width: 0,\n          color: '#ff0000'\n        },\n        polygon: {\n          nb_sides: 5\n        },\n        image: {\n          src: '',\n          width: 100,\n          height: 100\n        }\n      },\n      opacity: {\n        value: 1,\n        random: false,\n        anim: {\n          enable: false,\n          speed: 2,\n          opacity_min: 0,\n          sync: false\n        }\n      },\n      size: {\n        value: 20,\n        random: false,\n        anim: {\n          enable: false,\n          speed: 20,\n          size_min: 0,\n          sync: false\n        }\n      },\n      line_linked: {\n        enable: true,\n        distance: 100,\n        color: '#fff',\n        opacity: 1,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 2,\n        direction: 'none',\n        random: false,\n        straight: false,\n        out_mode: 'out',\n        bounce: false,\n        attract: {\n          enable: false,\n          rotateX: 3000,\n          rotateY: 3000\n        }\n      },\n      array: []\n    },\n    interactivity: {\n      detect_on: 'canvas',\n      events: {\n        onhover: {\n          enable: true,\n          mode: 'grab'\n        },\n        onclick: {\n          enable: true,\n          mode: 'push'\n        },\n        resize: true\n      },\n      modes: {\n        grab:{\n          distance: 100,\n          line_linked:{\n            opacity: 1\n          }\n        },\n        bubble:{\n          distance: 200,\n          size: 80,\n          duration: 0.4\n        },\n        repulse:{\n          distance: 200,\n          duration: 0.4\n        },\n        push:{\n          particles_nb: 4\n        },\n        remove:{\n          particles_nb: 2\n        }\n      },\n      mouse:{}\n    },\n    retina_detect: false,\n    fn: {\n      interact: {},\n      modes: {},\n      vendors:{}\n    },\n    tmp: {}\n  };\n\n  var pJS = this.pJS;\n\n  /* params settings */\n  if(params){\n    Object.deepExtend(pJS, params);\n  }\n\n  pJS.tmp.obj = {\n    size_value: pJS.particles.size.value,\n    size_anim_speed: pJS.particles.size.anim.speed,\n    move_speed: pJS.particles.move.speed,\n    line_linked_distance: pJS.particles.line_linked.distance,\n    line_linked_width: pJS.particles.line_linked.width,\n    mode_grab_distance: pJS.interactivity.modes.grab.distance,\n    mode_bubble_distance: pJS.interactivity.modes.bubble.distance,\n    mode_bubble_size: pJS.interactivity.modes.bubble.size,\n    mode_repulse_distance: pJS.interactivity.modes.repulse.distance\n  };\n\n\n  pJS.fn.retinaInit = function(){\n\n    if(pJS.retina_detect && window.devicePixelRatio > 1){\n      pJS.canvas.pxratio = window.devicePixelRatio; \n      pJS.tmp.retina = true;\n    } \n    else{\n      pJS.canvas.pxratio = 1;\n      pJS.tmp.retina = false;\n    }\n\n    pJS.canvas.w = pJS.canvas.el.offsetWidth * pJS.canvas.pxratio;\n    pJS.canvas.h = pJS.canvas.el.offsetHeight * pJS.canvas.pxratio;\n\n    pJS.particles.size.value = pJS.tmp.obj.size_value * pJS.canvas.pxratio;\n    pJS.particles.size.anim.speed = pJS.tmp.obj.size_anim_speed * pJS.canvas.pxratio;\n    pJS.particles.move.speed = pJS.tmp.obj.move_speed * pJS.canvas.pxratio;\n    pJS.particles.line_linked.distance = pJS.tmp.obj.line_linked_distance * pJS.canvas.pxratio;\n    pJS.interactivity.modes.grab.distance = pJS.tmp.obj.mode_grab_distance * pJS.canvas.pxratio;\n    pJS.interactivity.modes.bubble.distance = pJS.tmp.obj.mode_bubble_distance * pJS.canvas.pxratio;\n    pJS.particles.line_linked.width = pJS.tmp.obj.line_linked_width * pJS.canvas.pxratio;\n    pJS.interactivity.modes.bubble.size = pJS.tmp.obj.mode_bubble_size * pJS.canvas.pxratio;\n    pJS.interactivity.modes.repulse.distance = pJS.tmp.obj.mode_repulse_distance * pJS.canvas.pxratio;\n\n  };\n\n\n\n  /* ---------- pJS functions - canvas ------------ */\n\n  pJS.fn.canvasInit = function(){\n    pJS.canvas.ctx = pJS.canvas.el.getContext('2d');\n  };\n\n  pJS.fn.canvasSize = function(){\n\n    pJS.canvas.el.width = pJS.canvas.w;\n    pJS.canvas.el.height = pJS.canvas.h;\n\n    if(pJS && pJS.interactivity.events.resize){\n\n      window.addEventListener('resize', function(){\n\n          pJS.canvas.w = pJS.canvas.el.offsetWidth;\n          pJS.canvas.h = pJS.canvas.el.offsetHeight;\n\n          /* resize canvas */\n          if(pJS.tmp.retina){\n            pJS.canvas.w *= pJS.canvas.pxratio;\n            pJS.canvas.h *= pJS.canvas.pxratio;\n          }\n\n          pJS.canvas.el.width = pJS.canvas.w;\n          pJS.canvas.el.height = pJS.canvas.h;\n\n          /* repaint canvas on anim disabled */\n          if(!pJS.particles.move.enable){\n            pJS.fn.particlesEmpty();\n            pJS.fn.particlesCreate();\n            pJS.fn.particlesDraw();\n            pJS.fn.vendors.densityAutoParticles();\n          }\n\n        /* density particles enabled */\n        pJS.fn.vendors.densityAutoParticles();\n\n      });\n\n    }\n\n  };\n\n\n  pJS.fn.canvasPaint = function(){\n    pJS.canvas.ctx.fillRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n  };\n\n  pJS.fn.canvasClear = function(){\n    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n  };\n\n\n  /* --------- pJS functions - particles ----------- */\n\n  pJS.fn.particle = function(color, opacity, position){\n\n    /* size */\n    this.radius = (pJS.particles.size.random ? Math.random() : 1) * pJS.particles.size.value;\n    if(pJS.particles.size.anim.enable){\n      this.size_status = false;\n      this.vs = pJS.particles.size.anim.speed / 100;\n      if(!pJS.particles.size.anim.sync){\n        this.vs = this.vs * Math.random();\n      }\n    }\n\n    /* position */\n    this.x = position ? position.x : Math.random() * pJS.canvas.w;\n    this.y = position ? position.y : Math.random() * pJS.canvas.h;\n\n    /* check position  - into the canvas */\n    if(this.x > pJS.canvas.w - this.radius*2) this.x = this.x - this.radius;\n    else if(this.x < this.radius*2) this.x = this.x + this.radius;\n    if(this.y > pJS.canvas.h - this.radius*2) this.y = this.y - this.radius;\n    else if(this.y < this.radius*2) this.y = this.y + this.radius;\n\n    /* check position - avoid overlap */\n    if(pJS.particles.move.bounce){\n      pJS.fn.vendors.checkOverlap(this, position);\n    }\n\n    /* color */\n    this.color = {};\n    if(typeof(color.value) == 'object'){\n\n      if(color.value instanceof Array){\n        var color_selected = color.value[Math.floor(Math.random() * pJS.particles.color.value.length)];\n        this.color.rgb = hexToRgb(color_selected);\n      }else{\n        if(color.value.r != undefined && color.value.g != undefined && color.value.b != undefined){\n          this.color.rgb = {\n            r: color.value.r,\n            g: color.value.g,\n            b: color.value.b\n          }\n        }\n        if(color.value.h != undefined && color.value.s != undefined && color.value.l != undefined){\n          this.color.hsl = {\n            h: color.value.h,\n            s: color.value.s,\n            l: color.value.l\n          }\n        }\n      }\n\n    }\n    else if(color.value == 'random'){\n      this.color.rgb = {\n        r: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n        g: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n        b: (Math.floor(Math.random() * (255 - 0 + 1)) + 0)\n      }\n    }\n    else if(typeof(color.value) == 'string'){\n      this.color = color;\n      this.color.rgb = hexToRgb(this.color.value);\n    }\n\n    /* opacity */\n    this.opacity = (pJS.particles.opacity.random ? Math.random() : 1) * pJS.particles.opacity.value;\n    if(pJS.particles.opacity.anim.enable){\n      this.opacity_status = false;\n      this.vo = pJS.particles.opacity.anim.speed / 100;\n      if(!pJS.particles.opacity.anim.sync){\n        this.vo = this.vo * Math.random();\n      }\n    }\n\n    /* animation - velocity for speed */\n    var velbase = {}\n    switch(pJS.particles.move.direction){\n      case 'top':\n        velbase = { x:0, y:-1 };\n      break;\n      case 'top-right':\n        velbase = { x:0.5, y:-0.5 };\n      break;\n      case 'right':\n        velbase = { x:1, y:-0 };\n      break;\n      case 'bottom-right':\n        velbase = { x:0.5, y:0.5 };\n      break;\n      case 'bottom':\n        velbase = { x:0, y:1 };\n      break;\n      case 'bottom-left':\n        velbase = { x:-0.5, y:1 };\n      break;\n      case 'left':\n        velbase = { x:-1, y:0 };\n      break;\n      case 'top-left':\n        velbase = { x:-0.5, y:-0.5 };\n      break;\n      default:\n        velbase = { x:0, y:0 };\n      break;\n    }\n\n    if(pJS.particles.move.straight){\n      this.vx = velbase.x;\n      this.vy = velbase.y;\n      if(pJS.particles.move.random){\n        this.vx = this.vx * (Math.random());\n        this.vy = this.vy * (Math.random());\n      }\n    }else{\n      this.vx = velbase.x + Math.random()-0.5;\n      this.vy = velbase.y + Math.random()-0.5;\n    }\n\n    // var theta = 2.0 * Math.PI * Math.random();\n    // this.vx = Math.cos(theta);\n    // this.vy = Math.sin(theta);\n\n    this.vx_i = this.vx;\n    this.vy_i = this.vy;\n\n    \n\n    /* if shape is image */\n\n    var shape_type = pJS.particles.shape.type;\n    if(typeof(shape_type) == 'object'){\n      if(shape_type instanceof Array){\n        var shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];\n        this.shape = shape_selected;\n      }\n    }else{\n      this.shape = shape_type;\n    }\n\n    if(this.shape == 'image'){\n      var sh = pJS.particles.shape;\n      this.img = {\n        src: sh.image.src,\n        ratio: sh.image.width / sh.image.height\n      }\n      if(!this.img.ratio) this.img.ratio = 1;\n      if(pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg != undefined){\n        pJS.fn.vendors.createSvgImg(this);\n        if(pJS.tmp.pushing){\n          this.img.loaded = false;\n        }\n      }\n    }\n\n    \n\n  };\n\n\n  pJS.fn.particle.prototype.draw = function() {\n\n    var p = this;\n\n    if(p.radius_bubble != undefined){\n      var radius = p.radius_bubble; \n    }else{\n      var radius = p.radius;\n    }\n\n    if(p.opacity_bubble != undefined){\n      var opacity = p.opacity_bubble;\n    }else{\n      var opacity = p.opacity;\n    }\n\n    if(p.color.rgb){\n      var color_value = 'rgba('+p.color.rgb.r+','+p.color.rgb.g+','+p.color.rgb.b+','+opacity+')';\n    }else{\n      var color_value = 'hsla('+p.color.hsl.h+','+p.color.hsl.s+'%,'+p.color.hsl.l+'%,'+opacity+')';\n    }\n\n    pJS.canvas.ctx.fillStyle = color_value;\n    pJS.canvas.ctx.beginPath();\n\n    switch(p.shape){\n\n      case 'circle':\n        pJS.canvas.ctx.arc(p.x, p.y, radius, 0, Math.PI * 2, false);\n      break;\n\n      case 'edge':\n        pJS.canvas.ctx.rect(p.x-radius, p.y-radius, radius*2, radius*2);\n      break;\n\n      case 'triangle':\n        pJS.fn.vendors.drawShape(pJS.canvas.ctx, p.x-radius, p.y+radius / 1.66, radius*2, 3, 2);\n      break;\n\n      case 'polygon':\n        pJS.fn.vendors.drawShape(\n          pJS.canvas.ctx,\n          p.x - radius / (pJS.particles.shape.polygon.nb_sides/3.5), // startX\n          p.y - radius / (2.66/3.5), // startY\n          radius*2.66 / (pJS.particles.shape.polygon.nb_sides/3), // sideLength\n          pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\n          1 // sideCountDenominator\n        );\n      break;\n\n      case 'star':\n        pJS.fn.vendors.drawShape(\n          pJS.canvas.ctx,\n          p.x - radius*2 / (pJS.particles.shape.polygon.nb_sides/4), // startX\n          p.y - radius / (2*2.66/3.5), // startY\n          radius*2*2.66 / (pJS.particles.shape.polygon.nb_sides/3), // sideLength\n          pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\n          2 // sideCountDenominator\n        );\n      break;\n\n      case 'image':\n\n        function draw(){\n          pJS.canvas.ctx.drawImage(\n            img_obj,\n            p.x-radius,\n            p.y-radius,\n            radius*2,\n            radius*2 / p.img.ratio\n          );\n        }\n\n        if(pJS.tmp.img_type == 'svg'){\n          var img_obj = p.img.obj;\n        }else{\n          var img_obj = pJS.tmp.img_obj;\n        }\n\n        if(img_obj){\n          draw();\n        }\n\n      break;\n\n    }\n\n    pJS.canvas.ctx.closePath();\n\n    if(pJS.particles.shape.stroke.width > 0){\n      pJS.canvas.ctx.strokeStyle = pJS.particles.shape.stroke.color;\n      pJS.canvas.ctx.lineWidth = pJS.particles.shape.stroke.width;\n      pJS.canvas.ctx.stroke();\n    }\n    \n    pJS.canvas.ctx.fill();\n    \n  };\n\n\n  pJS.fn.particlesCreate = function(){\n    for(var i = 0; i < pJS.particles.number.value; i++) {\n      pJS.particles.array.push(new pJS.fn.particle(pJS.particles.color, pJS.particles.opacity.value));\n    }\n  };\n\n  pJS.fn.particlesUpdate = function(){\n\n    for(var i = 0; i < pJS.particles.array.length; i++){\n\n      /* the particle */\n      var p = pJS.particles.array[i];\n\n      // var d = ( dx = pJS.interactivity.mouse.click_pos_x - p.x ) * dx + ( dy = pJS.interactivity.mouse.click_pos_y - p.y ) * dy;\n      // var f = -BANG_SIZE / d;\n      // if ( d < BANG_SIZE ) {\n      //     var t = Math.atan2( dy, dx );\n      //     p.vx = f * Math.cos(t);\n      //     p.vy = f * Math.sin(t);\n      // }\n\n      /* move the particle */\n      if(pJS.particles.move.enable){\n        var ms = pJS.particles.move.speed/2;\n        p.x += p.vx * ms;\n        p.y += p.vy * ms;\n      }\n\n      /* change opacity status */\n      if(pJS.particles.opacity.anim.enable) {\n        if(p.opacity_status == true) {\n          if(p.opacity >= pJS.particles.opacity.value) p.opacity_status = false;\n          p.opacity += p.vo;\n        }else {\n          if(p.opacity <= pJS.particles.opacity.anim.opacity_min) p.opacity_status = true;\n          p.opacity -= p.vo;\n        }\n        if(p.opacity < 0) p.opacity = 0;\n      }\n\n      /* change size */\n      if(pJS.particles.size.anim.enable){\n        if(p.size_status == true){\n          if(p.radius >= pJS.particles.size.value) p.size_status = false;\n          p.radius += p.vs;\n        }else{\n          if(p.radius <= pJS.particles.size.anim.size_min) p.size_status = true;\n          p.radius -= p.vs;\n        }\n        if(p.radius < 0) p.radius = 0;\n      }\n\n      /* change particle position if it is out of canvas */\n      if(pJS.particles.move.out_mode == 'bounce'){\n        var new_pos = {\n          x_left: p.radius,\n          x_right:  pJS.canvas.w,\n          y_top: p.radius,\n          y_bottom: pJS.canvas.h\n        }\n      }else{\n        var new_pos = {\n          x_left: -p.radius,\n          x_right: pJS.canvas.w + p.radius,\n          y_top: -p.radius,\n          y_bottom: pJS.canvas.h + p.radius\n        }\n      }\n\n      if(p.x - p.radius > pJS.canvas.w){\n        p.x = new_pos.x_left;\n        p.y = Math.random() * pJS.canvas.h;\n      }\n      else if(p.x + p.radius < 0){\n        p.x = new_pos.x_right;\n        p.y = Math.random() * pJS.canvas.h;\n      }\n      if(p.y - p.radius > pJS.canvas.h){\n        p.y = new_pos.y_top;\n        p.x = Math.random() * pJS.canvas.w;\n      }\n      else if(p.y + p.radius < 0){\n        p.y = new_pos.y_bottom;\n        p.x = Math.random() * pJS.canvas.w;\n      }\n\n      /* out of canvas modes */\n      switch(pJS.particles.move.out_mode){\n        case 'bounce':\n          if (p.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\n          else if (p.x - p.radius < 0) p.vx = -p.vx;\n          if (p.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\n          else if (p.y - p.radius < 0) p.vy = -p.vy;\n        break;\n      }\n\n      /* events */\n      if(isInArray('grab', pJS.interactivity.events.onhover.mode)){\n        pJS.fn.modes.grabParticle(p);\n      }\n\n      if(isInArray('bubble', pJS.interactivity.events.onhover.mode) || isInArray('bubble', pJS.interactivity.events.onclick.mode)){\n        pJS.fn.modes.bubbleParticle(p);\n      }\n\n      if(isInArray('repulse', pJS.interactivity.events.onhover.mode) || isInArray('repulse', pJS.interactivity.events.onclick.mode)){\n        pJS.fn.modes.repulseParticle(p);\n      }\n\n      /* interaction auto between particles */\n      if(pJS.particles.line_linked.enable || pJS.particles.move.attract.enable){\n        for(var j = i + 1; j < pJS.particles.array.length; j++){\n          var p2 = pJS.particles.array[j];\n\n          /* link particles */\n          if(pJS.particles.line_linked.enable){\n            pJS.fn.interact.linkParticles(p,p2);\n          }\n\n          /* attract particles */\n          if(pJS.particles.move.attract.enable){\n            pJS.fn.interact.attractParticles(p,p2);\n          }\n\n          /* bounce particles */\n          if(pJS.particles.move.bounce){\n            pJS.fn.interact.bounceParticles(p,p2);\n          }\n\n        }\n      }\n\n\n    }\n\n  };\n\n  pJS.fn.particlesDraw = function(){\n\n    /* clear canvas */\n    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n\n    /* update each particles param */\n    pJS.fn.particlesUpdate();\n\n    /* draw each particle */\n    for(var i = 0; i < pJS.particles.array.length; i++){\n      var p = pJS.particles.array[i];\n      p.draw();\n    }\n\n  };\n\n  pJS.fn.particlesEmpty = function(){\n    pJS.particles.array = [];\n  };\n\n  pJS.fn.particlesRefresh = function(){\n\n    /* init all */\n    cancelRequestAnimFrame(pJS.fn.checkAnimFrame);\n    cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n    pJS.tmp.source_svg = undefined;\n    pJS.tmp.img_obj = undefined;\n    pJS.tmp.count_svg = 0;\n    pJS.fn.particlesEmpty();\n    pJS.fn.canvasClear();\n    \n    /* restart */\n    pJS.fn.vendors.start();\n\n  };\n\n\n  /* ---------- pJS functions - particles interaction ------------ */\n\n  pJS.fn.interact.linkParticles = function(p1, p2){\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy);\n\n    /* draw a line between p1 and p2 if the distance between them is under the config distance */\n    if(dist <= pJS.particles.line_linked.distance){\n\n      var opacity_line = pJS.particles.line_linked.opacity - (dist / (1/pJS.particles.line_linked.opacity)) / pJS.particles.line_linked.distance;\n\n      if(opacity_line > 0){        \n        \n        /* style */\n        var color_line = pJS.particles.line_linked.color_rgb_line;\n        pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+opacity_line+')';\n        pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n        //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\n        \n        /* path */\n        pJS.canvas.ctx.beginPath();\n        pJS.canvas.ctx.moveTo(p1.x, p1.y);\n        pJS.canvas.ctx.lineTo(p2.x, p2.y);\n        pJS.canvas.ctx.stroke();\n        pJS.canvas.ctx.closePath();\n\n      }\n\n    }\n\n  };\n\n\n  pJS.fn.interact.attractParticles  = function(p1, p2){\n\n    /* condensed particles */\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy);\n\n    if(dist <= pJS.particles.line_linked.distance){\n\n      var ax = dx/(pJS.particles.move.attract.rotateX*1000),\n          ay = dy/(pJS.particles.move.attract.rotateY*1000);\n\n      p1.vx -= ax;\n      p1.vy -= ay;\n\n      p2.vx += ax;\n      p2.vy += ay;\n\n    }\n    \n\n  }\n\n\n  pJS.fn.interact.bounceParticles = function(p1, p2){\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy),\n        dist_p = p1.radius+p2.radius;\n\n    if(dist <= dist_p){\n      p1.vx = -p1.vx;\n      p1.vy = -p1.vy;\n\n      p2.vx = -p2.vx;\n      p2.vy = -p2.vy;\n    }\n\n  }\n\n\n  /* ---------- pJS functions - modes events ------------ */\n\n  pJS.fn.modes.pushParticles = function(nb, pos){\n\n    pJS.tmp.pushing = true;\n\n    for(var i = 0; i < nb; i++){\n      pJS.particles.array.push(\n        new pJS.fn.particle(\n          pJS.particles.color,\n          pJS.particles.opacity.value,\n          {\n            'x': pos ? pos.pos_x : Math.random() * pJS.canvas.w,\n            'y': pos ? pos.pos_y : Math.random() * pJS.canvas.h\n          }\n        )\n      )\n      if(i == nb-1){\n        if(!pJS.particles.move.enable){\n          pJS.fn.particlesDraw();\n        }\n        pJS.tmp.pushing = false;\n      }\n    }\n\n  };\n\n\n  pJS.fn.modes.removeParticles = function(nb){\n\n    pJS.particles.array.splice(0, nb);\n    if(!pJS.particles.move.enable){\n      pJS.fn.particlesDraw();\n    }\n\n  };\n\n\n  pJS.fn.modes.bubbleParticle = function(p){\n\n    /* on hover event */\n    if(pJS.interactivity.events.onhover.enable && isInArray('bubble', pJS.interactivity.events.onhover.mode)){\n\n      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse),\n          ratio = 1 - dist_mouse / pJS.interactivity.modes.bubble.distance;\n\n      function init(){\n        p.opacity_bubble = p.opacity;\n        p.radius_bubble = p.radius;\n      }\n\n      /* mousemove - check ratio */\n      if(dist_mouse <= pJS.interactivity.modes.bubble.distance){\n\n        if(ratio >= 0 && pJS.interactivity.status == 'mousemove'){\n          \n          /* size */\n          if(pJS.interactivity.modes.bubble.size != pJS.particles.size.value){\n\n            if(pJS.interactivity.modes.bubble.size > pJS.particles.size.value){\n              var size = p.radius + (pJS.interactivity.modes.bubble.size*ratio);\n              if(size >= 0){\n                p.radius_bubble = size;\n              }\n            }else{\n              var dif = p.radius - pJS.interactivity.modes.bubble.size,\n                  size = p.radius - (dif*ratio);\n              if(size > 0){\n                p.radius_bubble = size;\n              }else{\n                p.radius_bubble = 0;\n              }\n            }\n\n          }\n\n          /* opacity */\n          if(pJS.interactivity.modes.bubble.opacity != pJS.particles.opacity.value){\n\n            if(pJS.interactivity.modes.bubble.opacity > pJS.particles.opacity.value){\n              var opacity = pJS.interactivity.modes.bubble.opacity*ratio;\n              if(opacity > p.opacity && opacity <= pJS.interactivity.modes.bubble.opacity){\n                p.opacity_bubble = opacity;\n              }\n            }else{\n              var opacity = p.opacity - (pJS.particles.opacity.value-pJS.interactivity.modes.bubble.opacity)*ratio;\n              if(opacity < p.opacity && opacity >= pJS.interactivity.modes.bubble.opacity){\n                p.opacity_bubble = opacity;\n              }\n            }\n\n          }\n\n        }\n\n      }else{\n        init();\n      }\n\n\n      /* mouseleave */\n      if(pJS.interactivity.status == 'mouseleave'){\n        init();\n      }\n    \n    }\n\n    /* on click event */\n    else if(pJS.interactivity.events.onclick.enable && isInArray('bubble', pJS.interactivity.events.onclick.mode)){\n\n\n      if(pJS.tmp.bubble_clicking){\n        var dx_mouse = p.x - pJS.interactivity.mouse.click_pos_x,\n            dy_mouse = p.y - pJS.interactivity.mouse.click_pos_y,\n            dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse),\n            time_spent = (new Date().getTime() - pJS.interactivity.mouse.click_time)/1000;\n\n        if(time_spent > pJS.interactivity.modes.bubble.duration){\n          pJS.tmp.bubble_duration_end = true;\n        }\n\n        if(time_spent > pJS.interactivity.modes.bubble.duration*2){\n          pJS.tmp.bubble_clicking = false;\n          pJS.tmp.bubble_duration_end = false;\n        }\n      }\n\n\n      function process(bubble_param, particles_param, p_obj_bubble, p_obj, id){\n\n        if(bubble_param != particles_param){\n\n          if(!pJS.tmp.bubble_duration_end){\n            if(dist_mouse <= pJS.interactivity.modes.bubble.distance){\n              if(p_obj_bubble != undefined) var obj = p_obj_bubble;\n              else var obj = p_obj;\n              if(obj != bubble_param){\n                var value = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration);\n                if(id == 'size') p.radius_bubble = value;\n                if(id == 'opacity') p.opacity_bubble = value;\n              }\n            }else{\n              if(id == 'size') p.radius_bubble = undefined;\n              if(id == 'opacity') p.opacity_bubble = undefined;\n            }\n          }else{\n            if(p_obj_bubble != undefined){\n              var value_tmp = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration),\n                  dif = bubble_param - value_tmp;\n                  value = bubble_param + dif;\n              if(id == 'size') p.radius_bubble = value;\n              if(id == 'opacity') p.opacity_bubble = value;\n            }\n          }\n\n        }\n\n      }\n\n      if(pJS.tmp.bubble_clicking){\n        /* size */\n        process(pJS.interactivity.modes.bubble.size, pJS.particles.size.value, p.radius_bubble, p.radius, 'size');\n        /* opacity */\n        process(pJS.interactivity.modes.bubble.opacity, pJS.particles.opacity.value, p.opacity_bubble, p.opacity, 'opacity');\n      }\n\n    }\n\n  };\n\n\n  pJS.fn.modes.repulseParticle = function(p){\n\n    if(pJS.interactivity.events.onhover.enable && isInArray('repulse', pJS.interactivity.events.onhover.mode) && pJS.interactivity.status == 'mousemove') {\n\n      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse);\n\n      var normVec = {x: dx_mouse/dist_mouse, y: dy_mouse/dist_mouse},\n          repulseRadius = pJS.interactivity.modes.repulse.distance,\n          velocity = 100,\n          repulseFactor = clamp((1/repulseRadius)*(-1*Math.pow(dist_mouse/repulseRadius,2)+1)*repulseRadius*velocity, 0, 50);\n      \n      var pos = {\n        x: p.x + normVec.x * repulseFactor,\n        y: p.y + normVec.y * repulseFactor\n      }\n\n      if(pJS.particles.move.out_mode == 'bounce'){\n        if(pos.x - p.radius > 0 && pos.x + p.radius < pJS.canvas.w) p.x = pos.x;\n        if(pos.y - p.radius > 0 && pos.y + p.radius < pJS.canvas.h) p.y = pos.y;\n      }else{\n        p.x = pos.x;\n        p.y = pos.y;\n      }\n    \n    }\n\n\n    else if(pJS.interactivity.events.onclick.enable && isInArray('repulse', pJS.interactivity.events.onclick.mode)) {\n\n      if(!pJS.tmp.repulse_finish){\n        pJS.tmp.repulse_count++;\n        if(pJS.tmp.repulse_count == pJS.particles.array.length){\n          pJS.tmp.repulse_finish = true;\n        }\n      }\n\n      if(pJS.tmp.repulse_clicking){\n\n        var repulseRadius = Math.pow(pJS.interactivity.modes.repulse.distance/6, 3);\n\n        var dx = pJS.interactivity.mouse.click_pos_x - p.x,\n            dy = pJS.interactivity.mouse.click_pos_y - p.y,\n            d = dx*dx + dy*dy;\n\n        var force = -repulseRadius / d * 1;\n\n        function process(){\n\n          var f = Math.atan2(dy,dx);\n          p.vx = force * Math.cos(f);\n          p.vy = force * Math.sin(f);\n\n          if(pJS.particles.move.out_mode == 'bounce'){\n            var pos = {\n              x: p.x + p.vx,\n              y: p.y + p.vy\n            }\n            if (pos.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\n            else if (pos.x - p.radius < 0) p.vx = -p.vx;\n            if (pos.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\n            else if (pos.y - p.radius < 0) p.vy = -p.vy;\n          }\n\n        }\n\n        // default\n        if(d <= repulseRadius){\n          process();\n        }\n\n        // bang - slow motion mode\n        // if(!pJS.tmp.repulse_finish){\n        //   if(d <= repulseRadius){\n        //     process();\n        //   }\n        // }else{\n        //   process();\n        // }\n        \n\n      }else{\n\n        if(pJS.tmp.repulse_clicking == false){\n\n          p.vx = p.vx_i;\n          p.vy = p.vy_i;\n        \n        }\n\n      }\n\n    }\n\n  }\n\n\n  pJS.fn.modes.grabParticle = function(p){\n\n    if(pJS.interactivity.events.onhover.enable && pJS.interactivity.status == 'mousemove'){\n\n      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse);\n\n      /* draw a line between the cursor and the particle if the distance between them is under the config distance */\n      if(dist_mouse <= pJS.interactivity.modes.grab.distance){\n\n        var opacity_line = pJS.interactivity.modes.grab.line_linked.opacity - (dist_mouse / (1/pJS.interactivity.modes.grab.line_linked.opacity)) / pJS.interactivity.modes.grab.distance;\n\n        if(opacity_line > 0){\n\n          /* style */\n          var color_line = pJS.particles.line_linked.color_rgb_line;\n          pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+opacity_line+')';\n          pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n          //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\n          \n          /* path */\n          pJS.canvas.ctx.beginPath();\n          pJS.canvas.ctx.moveTo(p.x, p.y);\n          pJS.canvas.ctx.lineTo(pJS.interactivity.mouse.pos_x, pJS.interactivity.mouse.pos_y);\n          pJS.canvas.ctx.stroke();\n          pJS.canvas.ctx.closePath();\n\n        }\n\n      }\n\n    }\n\n  };\n\n\n\n  /* ---------- pJS functions - vendors ------------ */\n\n  pJS.fn.vendors.eventsListeners = function(){\n\n    /* events target element */\n    if(pJS.interactivity.detect_on == 'window'){\n      pJS.interactivity.el = window;\n    }else{\n      pJS.interactivity.el = pJS.canvas.el;\n    }\n\n\n    /* detect mouse pos - on hover / click event */\n    if(pJS.interactivity.events.onhover.enable || pJS.interactivity.events.onclick.enable){\n\n      /* el on mousemove */\n      pJS.interactivity.el.addEventListener('mousemove', function(e){\n\n        if(pJS.interactivity.el == window){\n          var pos_x = e.clientX,\n              pos_y = e.clientY;\n        }\n        else{\n          var pos_x = e.offsetX || e.clientX,\n              pos_y = e.offsetY || e.clientY;\n        }\n\n        pJS.interactivity.mouse.pos_x = pos_x;\n        pJS.interactivity.mouse.pos_y = pos_y;\n\n        if(pJS.tmp.retina){\n          pJS.interactivity.mouse.pos_x *= pJS.canvas.pxratio;\n          pJS.interactivity.mouse.pos_y *= pJS.canvas.pxratio;\n        }\n\n        pJS.interactivity.status = 'mousemove';\n\n      });\n\n      /* el on onmouseleave */\n      pJS.interactivity.el.addEventListener('mouseleave', function(e){\n\n        pJS.interactivity.mouse.pos_x = null;\n        pJS.interactivity.mouse.pos_y = null;\n        pJS.interactivity.status = 'mouseleave';\n\n      });\n\n    }\n\n    /* on click event */\n    if(pJS.interactivity.events.onclick.enable){\n\n      pJS.interactivity.el.addEventListener('click', function(){\n\n        pJS.interactivity.mouse.click_pos_x = pJS.interactivity.mouse.pos_x;\n        pJS.interactivity.mouse.click_pos_y = pJS.interactivity.mouse.pos_y;\n        pJS.interactivity.mouse.click_time = new Date().getTime();\n\n        if(pJS.interactivity.events.onclick.enable){\n\n          switch(pJS.interactivity.events.onclick.mode){\n\n            case 'push':\n              if(pJS.particles.move.enable){\n                pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\n              }else{\n                if(pJS.interactivity.modes.push.particles_nb == 1){\n                  pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\n                }\n                else if(pJS.interactivity.modes.push.particles_nb > 1){\n                  pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb);\n                }\n              }\n            break;\n\n            case 'remove':\n              pJS.fn.modes.removeParticles(pJS.interactivity.modes.remove.particles_nb);\n            break;\n\n            case 'bubble':\n              pJS.tmp.bubble_clicking = true;\n            break;\n\n            case 'repulse':\n              pJS.tmp.repulse_clicking = true;\n              pJS.tmp.repulse_count = 0;\n              pJS.tmp.repulse_finish = false;\n              setTimeout(function(){\n                pJS.tmp.repulse_clicking = false;\n              }, pJS.interactivity.modes.repulse.duration*1000)\n            break;\n\n          }\n\n        }\n\n      });\n        \n    }\n\n\n  };\n\n  pJS.fn.vendors.densityAutoParticles = function(){\n\n    if(pJS.particles.number.density.enable){\n\n      /* calc area */\n      var area = pJS.canvas.el.width * pJS.canvas.el.height / 1000;\n      if(pJS.tmp.retina){\n        area = area/(pJS.canvas.pxratio*2);\n      }\n\n      /* calc number of particles based on density area */\n      var nb_particles = area * pJS.particles.number.value / pJS.particles.number.density.value_area;\n\n      /* add or remove X particles */\n      var missing_particles = pJS.particles.array.length - nb_particles;\n      if(missing_particles < 0) pJS.fn.modes.pushParticles(Math.abs(missing_particles));\n      else pJS.fn.modes.removeParticles(missing_particles);\n\n    }\n\n  };\n\n\n  pJS.fn.vendors.checkOverlap = function(p1, position){\n    for(var i = 0; i < pJS.particles.array.length; i++){\n      var p2 = pJS.particles.array[i];\n\n      var dx = p1.x - p2.x,\n          dy = p1.y - p2.y,\n          dist = Math.sqrt(dx*dx + dy*dy);\n\n      if(dist <= p1.radius + p2.radius){\n        p1.x = position ? position.x : Math.random() * pJS.canvas.w;\n        p1.y = position ? position.y : Math.random() * pJS.canvas.h;\n        pJS.fn.vendors.checkOverlap(p1);\n      }\n    }\n  };\n\n\n  pJS.fn.vendors.createSvgImg = function(p){\n\n    /* set color to svg element */\n    var svgXml = pJS.tmp.source_svg,\n        rgbHex = /#([0-9A-F]{3,6})/gi,\n        coloredSvgXml = svgXml.replace(rgbHex, function (m, r, g, b) {\n          if(p.color.rgb){\n            var color_value = 'rgba('+p.color.rgb.r+','+p.color.rgb.g+','+p.color.rgb.b+','+p.opacity+')';\n          }else{\n            var color_value = 'hsla('+p.color.hsl.h+','+p.color.hsl.s+'%,'+p.color.hsl.l+'%,'+p.opacity+')';\n          }\n          return color_value;\n        });\n\n    /* prepare to create img with colored svg */\n    var svg = new Blob([coloredSvgXml], {type: 'image/svg+xml;charset=utf-8'}),\n        DOMURL = window.URL || window.webkitURL || window,\n        url = DOMURL.createObjectURL(svg);\n\n    /* create particle img obj */\n    var img = new Image();\n    img.addEventListener('load', function(){\n      p.img.obj = img;\n      p.img.loaded = true;\n      DOMURL.revokeObjectURL(url);\n      pJS.tmp.count_svg++;\n    });\n    img.src = url;\n\n  };\n\n\n  pJS.fn.vendors.destroypJS = function(){\n    cancelAnimationFrame(pJS.fn.drawAnimFrame);\n    canvas_el.remove();\n    pJSDom = null;\n  };\n\n\n  pJS.fn.vendors.drawShape = function(c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator){\n\n    // By Programming Thomas - https://programmingthomas.wordpress.com/2013/04/03/n-sided-shapes/\n    var sideCount = sideCountNumerator * sideCountDenominator;\n    var decimalSides = sideCountNumerator / sideCountDenominator;\n    var interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n    var interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180; // convert to radians\n    c.save();\n    c.beginPath();\n    c.translate(startX, startY);\n    c.moveTo(0,0);\n    for (var i = 0; i < sideCount; i++) {\n      c.lineTo(sideLength,0);\n      c.translate(sideLength,0);\n      c.rotate(interiorAngle);\n    }\n    //c.stroke();\n    c.fill();\n    c.restore();\n\n  };\n\n  pJS.fn.vendors.exportImg = function(){\n    window.open(pJS.canvas.el.toDataURL('image/png'), '_blank');\n  };\n\n\n  pJS.fn.vendors.loadImg = function(type){\n\n    pJS.tmp.img_error = undefined;\n\n    if(pJS.particles.shape.image.src != ''){\n\n      if(type == 'svg'){\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', pJS.particles.shape.image.src);\n        xhr.onreadystatechange = function (data) {\n          if(xhr.readyState == 4){\n            if(xhr.status == 200){\n              pJS.tmp.source_svg = data.currentTarget.response;\n              pJS.fn.vendors.checkBeforeDraw();\n            }else{\n              console.log('Error pJS - Image not found');\n              pJS.tmp.img_error = true;\n            }\n          }\n        }\n        xhr.send();\n\n      }else{\n\n        var img = new Image();\n        img.addEventListener('load', function(){\n          pJS.tmp.img_obj = img;\n          pJS.fn.vendors.checkBeforeDraw();\n        });\n        img.src = pJS.particles.shape.image.src;\n\n      }\n\n    }else{\n      console.log('Error pJS - No image.src');\n      pJS.tmp.img_error = true;\n    }\n\n  };\n\n\n  pJS.fn.vendors.draw = function(){\n\n    if(pJS.particles.shape.type == 'image'){\n\n      if(pJS.tmp.img_type == 'svg'){\n\n        if(pJS.tmp.count_svg >= pJS.particles.number.value){\n          pJS.fn.particlesDraw();\n          if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n          else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }else{\n          //console.log('still loading...');\n          if(!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }\n\n      }else{\n\n        if(pJS.tmp.img_obj != undefined){\n          pJS.fn.particlesDraw();\n          if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n          else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }else{\n          if(!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }\n\n      }\n\n    }else{\n      pJS.fn.particlesDraw();\n      if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n      else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n    }\n\n  };\n\n\n  pJS.fn.vendors.checkBeforeDraw = function(){\n\n    // if shape is image\n    if(pJS.particles.shape.type == 'image'){\n\n      if(pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg == undefined){\n        pJS.tmp.checkAnimFrame = requestAnimFrame(check);\n      }else{\n        //console.log('images loaded! cancel check');\n        cancelRequestAnimFrame(pJS.tmp.checkAnimFrame);\n        if(!pJS.tmp.img_error){\n          pJS.fn.vendors.init();\n          pJS.fn.vendors.draw();\n        }\n        \n      }\n\n    }else{\n      pJS.fn.vendors.init();\n      pJS.fn.vendors.draw();\n    }\n\n  };\n\n\n  pJS.fn.vendors.init = function(){\n\n    /* init canvas + particles */\n    pJS.fn.retinaInit();\n    pJS.fn.canvasInit();\n    pJS.fn.canvasSize();\n    pJS.fn.canvasPaint();\n    pJS.fn.particlesCreate();\n    pJS.fn.vendors.densityAutoParticles();\n\n    /* particles.line_linked - convert hex colors to rgb */\n    pJS.particles.line_linked.color_rgb_line = hexToRgb(pJS.particles.line_linked.color);\n\n  };\n\n\n  pJS.fn.vendors.start = function(){\n\n    if(isInArray('image', pJS.particles.shape.type)){\n      pJS.tmp.img_type = pJS.particles.shape.image.src.substr(pJS.particles.shape.image.src.length - 3);\n      pJS.fn.vendors.loadImg(pJS.tmp.img_type);\n    }else{\n      pJS.fn.vendors.checkBeforeDraw();\n    }\n\n  };\n\n\n\n\n  /* ---------- pJS - start ------------ */\n\n\n  pJS.fn.vendors.eventsListeners();\n\n  pJS.fn.vendors.start();\n  \n\n\n};\n\n/* ---------- global functions - vendors ------------ */\n\nObject.deepExtend = function(destination, source) {\n  for (var property in source) {\n    if (source[property] && source[property].constructor &&\n     source[property].constructor === Object) {\n      destination[property] = destination[property] || {};\n      arguments.callee(destination[property], source[property]);\n    } else {\n      destination[property] = source[property];\n    }\n  }\n  return destination;\n};\n\nwindow.requestAnimFrame = (function(){\n  return  window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame    ||\n    window.oRequestAnimationFrame      ||\n    window.msRequestAnimationFrame     ||\n    function(callback){\n      window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nwindow.cancelRequestAnimFrame = ( function() {\n  return window.cancelAnimationFrame         ||\n    window.webkitCancelRequestAnimationFrame ||\n    window.mozCancelRequestAnimationFrame    ||\n    window.oCancelRequestAnimationFrame      ||\n    window.msCancelRequestAnimationFrame     ||\n    clearTimeout\n} )();\n\nfunction hexToRgb(hex){\n  // By Tim Down - http://stackoverflow.com/a/5624139/3493650\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n     return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n  } : null;\n};\n\nfunction clamp(number, min, max) {\n  return Math.min(Math.max(number, min), max);\n};\n\nfunction isInArray(value, array) {\n  return array.indexOf(value) > -1;\n}\n\n\n/* ---------- particles.js functions - start ------------ */\n\nwindow.pJSDom = [];\n\nwindow.particlesJS = function(tag_id, params){\n\n  //console.log(params);\n\n  /* no string id? so it's object params, and set the id with default id */\n  if(typeof(tag_id) != 'string'){\n    params = tag_id;\n    tag_id = 'particles-js';\n  }\n\n  /* no id? set the id to default id */\n  if(!tag_id){\n    tag_id = 'particles-js';\n  }\n\n  /* pJS elements */\n  var pJS_tag = document.getElementById(tag_id),\n      pJS_canvas_class = 'particles-js-canvas-el',\n      exist_canvas = pJS_tag.getElementsByClassName(pJS_canvas_class);\n\n  /* remove canvas if exists into the pJS target tag */\n  if(exist_canvas.length){\n    while(exist_canvas.length > 0){\n      pJS_tag.removeChild(exist_canvas[0]);\n    }\n  }\n\n  /* create canvas element */\n  var canvas_el = document.createElement('canvas');\n  canvas_el.className = pJS_canvas_class;\n\n  /* set size canvas */\n  canvas_el.style.width = \"100%\";\n  canvas_el.style.height = \"100%\";\n\n  /* append canvas */\n  var canvas = document.getElementById(tag_id).appendChild(canvas_el);\n\n  /* launch particle.js */\n  if(canvas != null){\n    pJSDom.push(new pJS(tag_id, params));\n  }\n\n};\n\nwindow.particlesJS.load = function(tag_id, path_config_json, callback){\n\n  /* load json config */\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', path_config_json);\n  xhr.onreadystatechange = function (data) {\n    if(xhr.readyState == 4){\n      if(xhr.status == 200){\n        var params = JSON.parse(data.currentTarget.response);\n        window.particlesJS(tag_id, params);\n        if(callback) callback();\n      }else{\n        console.log('Error pJS - XMLHttpRequest status: '+xhr.status);\n        console.log('Error pJS - File config not found');\n      }\n    }\n  };\n  xhr.send();\n\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/particles.js/particles.js\n// module id = 54\n// module chunks = 2","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 55\n// module chunks = 2","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/~/inherits/inherits_browser.js\n// module id = 65\n// module chunks = 2","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 66\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 67\n// module chunks = 2","/*!\n * vue-resource v1.0.3\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$1(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$1.reject = function (r) {\n    return new Promise$1(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$1.resolve = function (x) {\n    return new Promise$1(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$1.all = function all(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$1.race = function race(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$1.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$1(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\n/**\n * Promise adapter.\n */\n\nif (typeof Promise === 'undefined') {\n    window.Promise = Promise$1;\n}\n\nfunction PromiseObj(executor, context) {\n\n    if (executor instanceof Promise) {\n        this.promise = executor;\n    } else {\n        this.promise = new Promise(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromiseObj.all = function (iterable, context) {\n    return new PromiseObj(Promise.all(iterable), context);\n};\n\nPromiseObj.resolve = function (value, context) {\n    return new PromiseObj(Promise.resolve(value), context);\n};\n\nPromiseObj.reject = function (reason, context) {\n    return new PromiseObj(Promise.reject(reason), context);\n};\n\nPromiseObj.race = function (iterable, context) {\n    return new PromiseObj(Promise.race(iterable), context);\n};\n\nvar p = PromiseObj.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return Promise.reject(reason);\n    });\n};\n\n/**\n * Utility functions.\n */\n\nvar debug = false;var util = {};var slice = [].slice;\n\n\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction toUpper(str) {\n    return str ? str.toUpperCase() : '';\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isBlob(obj) {\n    return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = PromiseObj.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (obj && typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * Root Prefix Transform.\n */\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\n/**\n * Query Parameter Transform.\n */\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\n/**\n * URL Template (RFC 6570) Transform.\n */\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * XDomain client (Internet Explorer).\n */\n\nfunction xdrClient (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (_ref) {\n            var type = _ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load') {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(xdr.responseText, { status: status }));\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl());\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = handler;\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\n/**\n * CORS Interceptor.\n */\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\n/**\n * Body Interceptor.\n */\n\nfunction body (request, next) {\n\n    if (isFormData(request.body)) {\n\n        request.headers.delete('Content-Type');\n    } else if (isObject(request.body) || isArray(request.body)) {\n\n        if (request.emulateJSON) {\n            request.body = Url.params(request.body);\n            request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n        } else {\n            request.body = JSON.stringify(request.body);\n        }\n    }\n\n    next(function (response) {\n\n        Object.defineProperty(response, 'data', {\n            get: function () {\n                return this.body;\n            },\n            set: function (body) {\n                this.body = body;\n            }\n        });\n\n        return response.bodyText ? when(response.text(), function (text) {\n\n            var type = response.headers.get('Content-Type');\n\n            if (isString(type) && type.indexOf('application/json') === 0) {\n\n                try {\n                    response.body = JSON.parse(text);\n                } catch (e) {\n                    response.body = null;\n                }\n            } else {\n                response.body = text;\n            }\n\n            return response;\n        }) : response;\n    });\n}\n\n/**\n * JSONP client.\n */\n\nfunction jsonpClient (request) {\n    return new PromiseObj(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (_ref) {\n            var type = _ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load' && body !== null) {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\n/**\n * JSONP Interceptor.\n */\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n\n            return when(response.json(), function (json) {\n\n                response.body = json;\n\n                return response;\n            });\n        }\n    });\n}\n\n/**\n * Before Interceptor.\n */\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers.set('X-HTTP-Method-Override', request.method);\n        request.method = 'POST';\n    }\n\n    next();\n}\n\n/**\n * Header Interceptor.\n */\n\nfunction header (request, next) {\n\n    var headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[toLower(request.method)]);\n\n    each(headers, function (value, name) {\n        if (!request.headers.has(name)) {\n            request.headers.set(name, value);\n        }\n    });\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.abort();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\n/**\n * XMLHttp client.\n */\n\nfunction xhrClient (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n            });\n\n            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        xhr.open(request.method, request.getUrl(), true);\n\n        if ('responseType' in xhr) {\n            xhr.responseType = 'blob';\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n        });\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n        xhr.send(request.getBody());\n    });\n}\n\n/**\n * Base client.\n */\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new PromiseObj(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Headers.\n */\n\nvar Headers = function () {\n    function Headers(headers) {\n        var _this = this;\n\n        classCallCheck(this, Headers);\n\n\n        this.map = {};\n\n        each(headers, function (value, name) {\n            return _this.append(name, value);\n        });\n    }\n\n    Headers.prototype.has = function has(name) {\n        return getName(this.map, name) !== null;\n    };\n\n    Headers.prototype.get = function get(name) {\n\n        var list = this.map[getName(this.map, name)];\n\n        return list ? list[0] : null;\n    };\n\n    Headers.prototype.getAll = function getAll(name) {\n        return this.map[getName(this.map, name)] || [];\n    };\n\n    Headers.prototype.set = function set(name, value) {\n        this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n    };\n\n    Headers.prototype.append = function append(name, value) {\n\n        var list = this.getAll(name);\n\n        if (list.length) {\n            list.push(trim(value));\n        } else {\n            this.set(name, value);\n        }\n    };\n\n    Headers.prototype.delete = function _delete(name) {\n        delete this.map[getName(this.map, name)];\n    };\n\n    Headers.prototype.forEach = function forEach(callback, thisArg) {\n        var _this2 = this;\n\n        each(this.map, function (list, name) {\n            each(list, function (value) {\n                return callback.call(thisArg, value, name, _this2);\n            });\n        });\n    };\n\n    return Headers;\n}();\n\nfunction getName(map, name) {\n    return Object.keys(map).reduce(function (prev, curr) {\n        return toLower(name) === toLower(curr) ? curr : prev;\n    }, null);\n}\n\nfunction normalizeName(name) {\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n    }\n\n    return trim(name);\n}\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.ok = status >= 200 && status < 300;\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.headers = new Headers(headers);\n        this.body = body;\n\n        if (isString(body)) {\n\n            this.bodyText = body;\n        } else if (isBlob(body)) {\n\n            this.bodyBlob = body;\n\n            if (isBlobText(body)) {\n                this.bodyText = blobText(body);\n            }\n        }\n    }\n\n    Response.prototype.blob = function blob() {\n        return when(this.bodyBlob);\n    };\n\n    Response.prototype.text = function text() {\n        return when(this.bodyText);\n    };\n\n    Response.prototype.json = function json() {\n        return when(this.text(), function (text) {\n            return JSON.parse(text);\n        });\n    };\n\n    return Response;\n}();\n\nfunction blobText(body) {\n    return new PromiseObj(function (resolve) {\n\n        var reader = new FileReader();\n\n        reader.readAsText(body);\n        reader.onload = function () {\n            resolve(reader.result);\n        };\n    });\n}\n\nfunction isBlobText(body) {\n    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n}\n\n/**\n * HTTP Request.\n */\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.body = null;\n        this.params = {};\n\n        assign(this, options, {\n            method: toUpper(options.method || 'GET')\n        });\n\n        if (!(this.headers instanceof Headers)) {\n            this.headers = new Headers(this.headers);\n        }\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : PromiseObj.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return PromiseObj.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\n/**\n * Service for interacting with RESTful services.\n */\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: assign({}, params) }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\n/**\n * Install plugin.\n */\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = PromiseObj;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-resource/dist/vue-resource.common.js\n// module id = 108\n// module chunks = 2","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-router/dist/vue-router.js\n// module id = 109\n// module chunks = 2","/*!\n * Vue.js v1.0.28\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delimited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([^-])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/* istanbul ignore next */\nfunction isNative(Ctor) {\n  return (/native code/.test(Ctor.toString())\n  );\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc = undefined;\n\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var noop = function noop() {};\n    timerFunc = function () {\n      p.then(nextTickHandler);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) setTimeout(noop);\n    };\n  } else if (typeof MutationObserver !== 'undefined') {\n    // use MutationObserver where native Promise is not available,\n    // e.g. IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = setTimeout;\n  }\n\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar len;\nvar index;\nvar chr;\nvar state;\nvar startState = 0;\nvar filterState = 1;\nvar filterNameState = 2;\nvar filterArgState = 3;\n\nvar doubleChr = 0x22;\nvar singleChr = 0x27;\nvar pipeChr = 0x7C;\nvar escapeChr = 0x5C;\nvar spaceChr = 0x20;\n\nvar expStartChr = { 0x5B: 1, 0x7B: 1, 0x28: 1 };\nvar expChrPair = { 0x5B: 0x5D, 0x7B: 0x7D, 0x28: 0x29 };\n\nfunction peek() {\n  return str.charCodeAt(index + 1);\n}\n\nfunction next() {\n  return str.charCodeAt(++index);\n}\n\nfunction eof() {\n  return index >= len;\n}\n\nfunction eatSpace() {\n  while (peek() === spaceChr) {\n    next();\n  }\n}\n\nfunction isStringStart(chr) {\n  return chr === doubleChr || chr === singleChr;\n}\n\nfunction isExpStart(chr) {\n  return expStartChr[chr];\n}\n\nfunction isExpEnd(start, chr) {\n  return expChrPair[start] === chr;\n}\n\nfunction parseString() {\n  var stringQuote = next();\n  var chr;\n  while (!eof()) {\n    chr = next();\n    // escape char\n    if (chr === escapeChr) {\n      next();\n    } else if (chr === stringQuote) {\n      break;\n    }\n  }\n}\n\nfunction parseSpecialExp(chr) {\n  var inExp = 0;\n  var startChr = chr;\n\n  while (!eof()) {\n    chr = peek();\n    if (isStringStart(chr)) {\n      parseString();\n      continue;\n    }\n\n    if (startChr === chr) {\n      inExp++;\n    }\n    if (isExpEnd(startChr, chr)) {\n      inExp--;\n    }\n\n    next();\n\n    if (inExp === 0) {\n      break;\n    }\n  }\n}\n\n/**\n * syntax:\n * expression | filterName  [arg  arg [| filterName arg arg]]\n */\n\nfunction parseExpression() {\n  var start = index;\n  while (!eof()) {\n    chr = peek();\n    if (isStringStart(chr)) {\n      parseString();\n    } else if (isExpStart(chr)) {\n      parseSpecialExp(chr);\n    } else if (chr === pipeChr) {\n      next();\n      chr = peek();\n      if (chr === pipeChr) {\n        next();\n      } else {\n        if (state === startState || state === filterArgState) {\n          state = filterState;\n        }\n        break;\n      }\n    } else if (chr === spaceChr && (state === filterNameState || state === filterArgState)) {\n      eatSpace();\n      break;\n    } else {\n      if (state === filterState) {\n        state = filterNameState;\n      }\n      next();\n    }\n  }\n\n  return str.slice(start + 1, index) || null;\n}\n\nfunction parseFilterList() {\n  var filters = [];\n  while (!eof()) {\n    filters.push(parseFilter());\n  }\n  return filters;\n}\n\nfunction parseFilter() {\n  var filter = {};\n  var args;\n\n  state = filterState;\n  filter.name = parseExpression().trim();\n\n  state = filterArgState;\n  args = parseFilterArguments();\n\n  if (args.length) {\n    filter.args = args;\n  }\n  return filter;\n}\n\nfunction parseFilterArguments() {\n  var args = [];\n  while (!eof() && state !== filterState) {\n    var arg = parseExpression();\n    if (!arg) {\n      break;\n    }\n    args.push(processFilterArg(arg));\n  }\n\n  return args;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  dir = {};\n  len = str.length;\n  index = -1;\n  chr = '';\n  state = startState;\n\n  var filters;\n\n  if (str.indexOf('|') < 0) {\n    dir.expression = str.trim();\n  } else {\n    dir.expression = parseExpression().trim();\n    filters = parseFilterList();\n    if (filters.length) {\n      dir.filters = filters;\n    }\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to register itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression$1(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression$1(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\\"']|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression$1(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression$1,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression$1(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('v-if')) {\n      warn('<' + this.el.tagName.toLowerCase() + ' v-for=\"' + this.expression + '\" v-if=\"' + this.el.getAttribute('v-if') + '\">: ' + 'Using v-if and v-for on the same element is not recommended - ' + 'consider filtering the source Array instead.', this.vm);\n    }\n\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new instance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.get();\n      if (isArray(model)) {\n        var val = self.getValue();\n        var i = indexOf(model, val);\n        if (el.checked) {\n          if (i < 0) {\n            self.set(model.concat(val));\n          }\n        } else if (i > -1) {\n          self.set(model.slice(0, i).concat(model.slice(i + 1)));\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// logic control\n// two-way binding\n// event handling\n// attributes\n// ref & el\n// cloak\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var propsData = vm.$options.propsData;\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (propsData && (value = propsData[name] || propsData[path]) !== null) {\n      // has propsData\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required && (!propsData || !(name in propsData) && !(path in propsData))) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  sortDirectives(dirs);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * sort directives by priority (stable sort)\n *\n * @param {Array} dirs\n */\nfunction sortDirectives(dirs) {\n  if (dirs.length === 0) return;\n\n  var groupedMap = {};\n  var i, j, k, l;\n  var index = 0;\n  var priorities = [];\n  for (i = 0, j = dirs.length; i < j; i++) {\n    var dir = dirs[i];\n    var priority = dir.descriptor.def.priority || DEFAULT_PRIORITY;\n    var array = groupedMap[priority];\n    if (!array) {\n      array = groupedMap[priority] = [];\n      priorities.push(priority);\n    }\n    array.push(dir);\n  }\n\n  priorities.sort(function (a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n  });\n  for (i = 0, j = priorities.length; i < j; i++) {\n    var group = groupedMap[priorities[i]];\n    for (k = 0, l = group.length; k < l; k++) {\n      dirs[index++] = group[k];\n    }\n  }\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n\n      var componentName = options.el.tagName.toLowerCase();\n      if (componentName === 'component' && options.name) {\n        componentName += ':' + options.name;\n      }\n\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + componentName + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    // a textarea which has v-pre attr should skip complie.\n    if (getAttr(el, 'v-pre') !== null) {\n      return skip;\n    }\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for, v-if and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    if (!replacer) {\n      return frag;\n    }\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression$1(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression$1(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression$1(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Order filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.28';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.common.js\n// module id = 110\n// module chunks = 2","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 111\n// module chunks = 2","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/addStyles.js\n// module id = 112\n// module chunks = 2"],"sourceRoot":""}